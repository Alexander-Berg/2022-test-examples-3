include required(classpath("common-production.conf"))

blackbox.endpoint = "http://blackbox-mimino.yandex.net/blackbox"

zookeeper.servers: "ppctest-zookeeper01i.sas.yp-c.yandex.net,ppctest-zookeeper01f.myt.yp-c.yandex.net,ppctest-zookeeper01v.vla.yp-c.yandex.net"

db_shards: 26

db_pool {
  max_connections: 100
  min_idle_connections: 10
}

db_config: "file:///etc/yandex-direct/db-config-np/db-config.test.json"

netacl_always_allow_networks = ["qa_nets", "internal"]

market {
  market_mbi_url: "http://mbi-back.tst.vs.market.yandex.net:34820"
  tvm_market_mbi_id: 2011132 # MARKET_MBI_API_TEST
}

metrika {
  intapi_url: "http://internalapi-test.metrika.yandex.ru:8096"
  audience_url: "http://ipv6.audience-intapid-test.metrika.yandex.ru:8099"
  metrika_url: "https://api-metrika-test.metrika.yandex.net"
  metrika_ui_url_pattern: "https://test.%(metrika_name).%(yandex_domain)"
  bannerupdate {
    logbroker {
       host: "myt.logbroker-prestable.yandex.net"
       topic: "direct/export/metrika/banner-update-test"
    }
  }
}

appmetrika {
  appmetrika_url: "https://mobmet-intapi-test.metrika.yandex.net/direct/v1"
  tvm_app_id: 2002950 # APP_METRIKA_API_TEST
}

juggler: {
  checks: {
        namespace: "direct.test"
    intermediate_host: "direct.checks.aggregation.test"
    target_host: "direct.checks.test"
  }
}

metrics_log {
    http_transport_enabled = true
}

bannersystem: {
  url_factory: {
    prod: {
      export: "http://bssoap.yandex.ru:81"
      fast_export: "http://bsfastexport.yandex.ru:81"
      import: "http://perl-fake-services.test.direct.yandex.ru:17080/FakeBS/"
    }
    preprod: {
      # у export ручки нет пре-прода
      fast_export: "http://bsfastexport-pre.yandex.ru"
      import: "http://perl-fake-services.test.direct.yandex.ru:17080/FakeBS/"
    }
  }
}

bs-id-generator {
  url: "http://yabs-id-generator-test.in.yandex-team.ru"
  tvm_id: 2018542
}

advq {
  timeout: 20s
}

inventori {
  url: "https://inventori-test.yandex-team.ru/api/"
  request_timeout: 60s
  general_campaigns_prediction: "general_campaigns_prediction_by_cid?direct_intapi_environment_type=test"
}

balance {
  serviceUrl: "http://greed-ts.paysys.yandex.ru:8002/xmlrpc"
  serviceUrlSimple: "https://balance-payments-test.paysys.yandex.net:8023/simpleapi/xmlrpc"
  domain: "https://user-balance.greed-tm.paysys.yandex.ru"
}

moderation: {
  urls: {
    jsonrpc: "http://modadvert-test.yandex-team.ru/direct_proxy/"
    reason-tooltip: "http://support.daas-backend.locdoc-test.yandex.net/v1/documents/load/direct-tooltips/modadvert-{id}.html"
    reason-tooltip-regexp: "/direct-tooltips/modadvert-(\\d+)\\.html"
    sitemap: "http://support.daas-backend.locdoc-test.yandex.net/v1/documents/sitemap?tld={tld}"
  }
}

dialogs-api {
  url: "https://paskills.test.voicetech.yandex.net/api/external/v2"
  tvm_app_id: 2000245
}

direct_intapi: {
  url: "http://intapi.test.direct.yandex.ru:9000"
  tvm_app_id: 2000693
}

pokazometer {
  url: "http://pokazometer.yandex.ru/"
}

expert-api {
  url: "http://expert-api-testing.commerce-int.yandex.ru/v1"
  tvm_app_id: 2001462
}

organizations-api {
  url: "http://sprav-api-test.yandex.net"
  tvm_app_id: 2002604
}

ya-sms-api {
}

organizations-iframe {
  url = "https://l7test.yandex.{tld}/sprav"
}

collections-api {
  url: "https://l7test.yandex.ru/collections/api"
  tvm_app_id: 2000635
}

ugc_db {
  url: "http://ugcdb-test.search.yandex.net"
  tvm_app_id: 2000870
}

bsauction-trafaret = ${bsauction} {
  url: "http://ppctest-proxy.ppc.yandex.ru:7088/rank"
}

bsauction-trafaret-web = ${bsauction} {
  url: "http://ppctest-proxy.ppc.yandex.ru:7088/rank_web"
}

avatars.mds.host: "avatars.mdst.yandex.net"

turbo_landings: {
  url: "https://ad-constructor-test.common.yandex.ru"
  token: "s3cr3t"
}

turbopages: {
  url: "http://hamster.yandex.ru/turbo"
}

turboapps: {
  tvm_app_id: 2018236
}

telephony: {
  url: "https://platform-preprod.telephony.yandex.net"
  tvm_app_id: 2019745
}

display: {
  landing: {
    submissions_get_url: "https://dev-turbofeedback.common.yandex.ru/direct/submissions",
    submissions_get_url_new: "https://ad-constructor-test.common.yandex.ru/api/direct/submissions",
    auth_token: "yav://sec-01fvmzxezxq22zxckdwgpjbcxh?refreshRate=7200#BLANDING_API_TOKEN",
    request_timeout: 20s,
    request_retries: 1
  }
}

yt_common_settings {
    default_yql_acl {
      # кто может переходить на yql-операцию из yt-операции
      # yql не умеет abc/группы, поэтому список логинов
      # на тестовых средах разрешаем чтение всем
      can_read: ${all_direct.logins}
    }
}

yt {
  hahn {
    home: "//home/direct/test"
    user: "robot-direct-yt-test"
    token_file: "/etc/direct-tokens/yt_robot-direct-yt-test"
    yql_token_file: "/etc/direct-tokens/yql_robot-direct-yt-test"
  }
  arnold {
    home: "//home/direct-dev"
    user: ${yt.hahn.user}
    token_file: ${yt.hahn.token_file}
    yql_token_file: ${yt.hahn.yql_token_file}
  }
  freud {
    home: ${yt.hahn.home}
    user: ${yt.hahn.user}
    token_file: ${yt.hahn.token_file}
    yql_token_file: ${yt.hahn.yql_token_file}
  }
  markov {
    home: ${yt.hahn.home}
    user: ${yt.hahn.user}
    token_file: ${yt.hahn.token_file}
    yql_token_file: ${yt.hahn.yql_token_file}
  }
  zeno {
    home: ${yt.hahn.home}
    user: ${yt.hahn.user}
    token_file: ${yt.hahn.token_file}
    yql_token_file: ${yt.hahn.yql_token_file}
  }
  seneca-man {
    home: ${yt.hahn.home}
    user: ${yt.hahn.user}
    token_file: ${yt.hahn.token_file}
    yql_token_file: ${yt.hahn.yql_token_file}
  }
  seneca-sas {
    home: ${yt.hahn.home}
    user: ${yt.hahn.user}
    token_file: ${yt.hahn.token_file}
    yql_token_file: ${yt.hahn.yql_token_file}
  }
  seneca-vla {
    home: ${yt.hahn.home}
    user: ${yt.hahn.user}
    token_file: ${yt.hahn.token_file}
    yql_token_file: ${yt.hahn.yql_token_file}
  }
  locke {
    home: "//home/direct-np/testing"
    user: "robot-direct-yt-test"
    token_file: "/etc/direct-tokens/yt_robot-direct-yt-test"
  }
}

dynamic-yt {
  supported-clusters: [
    seneca-sas
    zeno
  ]

  phrase-md5-clusters: [
    zeno
    seneca-sas
  ]

  order-stat-clusters: [
    zeno
  ]

  conversions-stat-clusters: [
      zeno
  ]

  brand-surveys-clusters: [
      arnold
  ]

  assets-stat-clusters: [
    zeno
  ]

  communication-platform-clusters: [
    zeno
  ]

  act-stat-clusters: [
    zeno
  ]

  tables {
    direct {
      prefix: "//home/direct-np/test/mysql-sync/testing/current"
      categories-whitelist: "//home/direct/test/ppc_testing/export/content_categories/whitelist_categories"
      categories-blocked-domains: "//home/direct/test/ppc_testing/export/content_categories/categories_blocked_domains"
      postview-offline-report-tasks: "//home/direct/test/ppc_testing/postview_reports/postview_reports"
      postview-offline-report-reports-directory: "//home/direct/test/ppc_testing/postview_reports/pv_reports"
    }
    recommendations {
      base-dir: "//home/direct-np/test/mysql-sync/testing/recommendations"
    }
    communication-platform {
      messages: "//home/bigb/caesar/test/8/CommunicationsChannel",
      config-dir: "//home/direct/test/communication/configuration",
      read-config-clusters: ["zeno"],
      write-config-cluster: "zeno",
    }
    act-stat {
      money-stats: "//home/direct/test/act_stat_test/money_stats"
    }
  }
}

bs-export {
   yt {
      cluster: "hahn"
      path: "//home/direct/test/bsexport/"
   }
}

internal-ads {
    yabs-clusters: [
        hahn
        arnold
        freud
    ]
}

tvm {
  secret: "file:///etc/direct-tokens/tvm2_direct-test",
}

sendmail.redirect_address = "direct-test-letters@yandex-team.ru"
sendmail.yservice_salt_file_url = "classpath:sendmail-yservice-salt.txt" // там md5_hex("")
sendmail.hmac_salt_file_url = "file:///etc/direct-tokens/mail_sender_hmac_key_test"

mds {
  direct_files: {
    namespace: "direct-files"
    token_file_url: "classpath:///mds-auth-testing.txt"
    read_host_port: "storage-int.mdst.yandex.net:80"
    write_host_port: "storage-int.mdst.yandex.net:1111"
  }
}

freelancer_avatars_client {
  default_config_name: "avatars.mdst.yandex.net"
}

conversion_source_type_avatars_client {
  default_config_name: "avatars.mdst.yandex.net"
}

text_ad_image_avatars_client {
  default_config_name: "avatars.mdst.yandex.net/direct"
}

image_ad_image_avatars_client {
  default_config_name: "avatars.mdst.yandex.net/direct-picture"
}

uac_avatars_client {
  default_config_name: "avatars.mds.yandex.net/uac-test"
}


mds-s3 {
  endpoint = "s3.mdst.yandex.net"
  token_file_url = "/etc/direct-tokens/s3_robot-direct-s3-test"
}

dssclient.base_url = "https://bosign-tst.ld.yandex.ru"
dssclient.user_credentials_file_url = "classpath:dss-user-credentials.json"
dssclient.client_credentials_file_url = "classpath:dss-client-credentials.json"

# имя redis'а из конфига, который используется для кеширования в новом интерфейсе
# в отличие от production, в тестинге и разработке есть только один инстанс redis'а
redis_cache.name: "redis"

binlogbroker {
  logbroker {
    # Фиксируем endpoint на одном из ДЦ, т.к. иначе писатели и читатели могут использовать совершенно разные топики (в разных ДЦ)
    protobuf.topic_for_source_prefix {
        ppc: direct-np/testing/direct-ppcdata-binlog-log
    }
    init_timeout = 30
    retries = 15
    tvm_secret_path = "/etc/direct-tokens/tvm2_direct-ppcdata-binlog-test"
    tvm_client_id = 2001405  # DIRECTADMIN-6482
  }
}

ess {
  tvm = ${tvm} {
    secret = "file:////etc/direct-tokens/tvm2_direct-event-sourcing-system-test"
    app_id = 2009825 # DIRECT-88161
  }
  logbroker {
    logbroker_prefix = "direct-np@testing@"
  }
  router {
    logbroker {
      binlog_topic = "direct-np/testing/direct-ppcdata-binlog-log"
      watchlog_topic = "direct-np/testing/grut-watchlog"
      time_threshold_sec = 3
      bytes_threshold = 64000000
      rows_threshold = 200000
    }
  }
  router {
    yt_lock {
      # https://wiki.yandex-team.ru/yt/userdoc/distributedlocks/#podrobneeprolocke
      # На вики-страничке просят не проводить какие-либо эксперименты на locke.
      # Для любых тестов рекомендуют использовать другой кластер, например, freud.
      cluster_name = locke
    }
  }
}

canvas: {
  #Домен, начиная от третьего уровня,  фронт сервера конструктора креативов
  #Итоговый хост будет https://$CANVAS_UI_DOMAIN.yandex.tld
  ui_domain: "qanvas-test.qams"
  video_url: "http://canvas.test.direct.yandex.ru:84/video/direct"
  canvas_backend_url: "http://canvas.test.direct.yandex.ru:84"
  canvas_url: "http://canvas.test.direct.yandex.ru:84/direct"
  token: "s3cr3t"
  chunk_size: "50"
  # yndx-kosmana-super
  super_uid: "265151324"
}

canvas_api: {
    url: "http://canvas.test.direct.yandex.ru:84/",
    tvm_app_id: 2012208
}

cms_api: {
  url: "https://vh.test.yandex.ru/v1/"
  tvm_app_id: 2006059
}

mobile_content_data: {
  gplay: {
    table: "//home/direct/tmp/extdata-mobile/gplay/latest"
    clusters: ["zeno"]
  }
  itunes: {
    table: "//home/direct/tmp/extdata-mobile/itunes/latest"
    clusters: ["zeno"]
  }
}

zora_go {
  host: "prestable.go.zora.yandex.net"
}

freelancers {
  sender_keys {
    register_freelancer: 0W2Z9E03-X1K1
    //register_freelancer: S3P8G8Z2-M4L1 // sagid-m@
    on_request_to_client: 4PWY3KZ2-JIC1
    on_request_to_freelancer: 4J4I3KZ2-QYH
    on_accept_to_client: O0734KZ2-EFD1
    on_accept_to_freelancer: C1KR3KZ2-DFI
    on_rescind_to_client: CPL64KZ2-8O71
    on_rescind_to_freelancer: 0KJV3KZ2-Q91
    on_cancel_to_client: GOE3IW03-PNJ
    on_cancel_to_freelancer: 4PN5IW03-W5P1
  }
}

yandex_sender: {
    host: "test.sender.yandex-team.ru"
    account_token_file: "/etc/direct-tokens/sender_direct_test"
}

web {
  host: "https://test-direct.yandex.ru"
}

promocodes_antifraud: {
  en: "KXLHTB13-5U9",
  tr: "KXLHTB13-5U9",
  ru: "GS8ETB13-ZWV1",
  uk: "GS8ETB13-ZWV1"
}

yandex-video {
  url: "https://hamster.yandex.ru/video/search"
  request_timeout: 60s
}

takeout_api {
  url: "https://takeout-test.passport.yandex.net/1"
  tvm_app_id: 2009783
  request_retries: 10
}

moderation_service {
  tvm {
    secret = "file:////etc/direct-tokens/tvm2_direct-binlog2moderation-test"
    app_id = 2009767
  }
  logbroker {
    consumer = "direct/testing/modadvert/general/requests-consumer"

    adgroup_moderation_request {
      topic = "modadvert/test/direct/adgroup"
    }
    banner_moderation_request {
      topic = "modadvert/modadvert-test-sm-add-objects-log"
    }
    ad_image_moderation_request {
      topic = "modadvert/test/direct/image_ad"
    }
    cpm_video_moderation_request {
      topic = "modadvert/test/direct/cpm-video-add-objects"
    }
    cpm_geo_pin_moderation_request {
      topic = "modadvert/test/direct/geo_pin"
    }
    turbolanding_moderation_request {
      topic = "modadvert/test/direct/turbolanding-add-objects"
    }
    displayhrefs_moderation_request {
      topic = "modadvert/test/direct/display_href"
    }
    banner_logo_moderation_request {
      topic = "modadvert/test/direct/asset_icon"
    }
    banner_button_moderation_request {
      topic = "modadvert/test/direct/asset_button_url"
    }
    banner_vcard_moderation_request {
      topic = "modadvert/test/direct/asset_vcard"
    }
    banner_video_addition_moderation_request {
      topic = "modadvert/test/direct/asset_video"
    }
    callout_moderation_request {
      topic = "modadvert/test/direct/asset_callout"
    }
    banner_multicard_moderation_request {
      topic = "modadvert/test/direct/multicard"
    }
    promo_extension_moderation_request {
      topic = "modadvert/test/direct/promo_extension"
    }
    bannerstorage_creative_moderation_request {
      topic = "modadvert/test/direct/smart_banner"
    }
    sitelinks_moderation_request {
      topic = "modadvert/test/direct/sitelinks_set"
      group = [1,2]
    }
    images_moderation_request {
      topic = "modadvert/test/direct/image"
    }
    html5_moderation_request {
      topic = "modadvert/test/direct/html5"
    }
    canvas_moderation_request {
      topic = "modadvert/test/direct/canvas"
    }
    internal_banner_moderation_request {
      topic = "modadvert/test/direct/internal_banner"
    }
    text_banner_moderation_request {
      topic = "modadvert/test/direct/text_banner"
    }
    mobile_content_icon_moderation_request {
      topic = "modadvert/test/direct/mobile_icon"
    }
    campaign_moderation_request {
      topic = "modadvert/test/direct/campaign_sm"
    }
    special_deletion_moderation_request {
      topic = "modadvert/test/direct/add-deleted-objects"
    }
    special_campaign_copy_moderation_request {
      topic = "modadvert/test/direct/add-copycamp-objects"
    }
    special_archiving_moderation_request {
      topic = "modadvert/test/direct/add-archived-objects"
    }
    banner_moderation_verdict {
      topic = "modadvert/modadvert-test-sm-direct-general-add-verdicts-log"
    }
    routing {
      consumer = "direct-np/testing/moderation/routing-consumer"
      read_topic = "modadvert/modadvert-test-sm-results-log"
      read_groups = [1,2]
      default_write_topic = "direct-np/testing/moderation/general-results"
      default_write_groups = 1
      routes = [
        {
          type = "smart_banner"
          write_topic = "direct-np/testing/moderation/smart_banner-results"
          write_groups = 1
        }
      ]
    }
    response {
      topics = [
        {
          topic = "direct-np/testing/moderation/general-results"
          group = [1]
        }
        {
          topic = "direct-np/testing/moderation/smart_banner-results"
          group = [1]
        }
      ]
    }
    error {
      topic = "modadvert/modadvert-test-sm-add-objects-errors-log"
      group = [1]
    }
    unparsed {
      # !!! Джоба выключена на ТС
      topic = "modadvert/modadvert-sm-direct-general-unparsed-log"
      group = [1]
    }
  }
}

geosearch: {
  # https://wiki.yandex-team.ru/hevil/maps/api/geosearch/
  api_url: "http://addrs-testing.search.yandex.net/search/stable"
  origin: "direct"
  request_timeout: 10s
  parallel: 1
  request_retries: 3
  tvm_app_id: 2008261
}

sprav-organizations {
  client_id = "direct/sprav/organizations/consumer/test"
}

collections {
  client_id = "direct/collections/consumer/test"
  topic = "collections/test/commercial_boards"
}

telephony_actions {
  client_id = "direct-np/testing/telephony/actions-reader"
  topic =  "direct-np/testing/telephony/actions"
}

preview-offers-output {
  client_id = "direct-np/testing/bannerland/preview-offers-output-reader"
}

audience_client {
    base_audience_api_url: "https://audienceapid.test.metrika.yandex.net"
    login: "yndx-robot-aud-video-goal"
    # секрет direct.prod.audience_yndx-robot-direct-aud
    audience_robot_token_path: "yav://sec-01cw416046499rtvzej65ycjvd?refreshRate=1800#audience-test_robot-aud-video-goal"
}

brand_survey {
  ui_url_pattern = "https://pythia-direct-test.common.%s"
  status_table_path = "//home/direct-dev/ppc_testing/import/pythia/brandlift_surveys"
  clusters = ["arnold"]
}

ydb {
  endpoint: "ydb-ru-prestable.yandex.net:2135"
  cluster: "ru-prestable"

  hourglass {
    db_name: "direct/test/hourglass"
  }

  frontdb {
    db_name: "direct/test/frontdb"
  }

  maintenance_helpers {
    db_name: "direct/test/maintenance-helpers"
  }

  uac {
    db_name: "mobileproducts/test/rmp"
  }
}

startrek {
    daas_queue = "TEST"
}

//https://a.yandex-team.ru/arc/trunk/arcadia/direct/perl/perl/settings/SettingsTest.pm?rev=6380179#L272
bannerstorage_api {
  url: "https://bsapi-test-pine.mediaselling.yandex.net/rest/v0.2"
  token: "AQAAAADuojedAAAKb-_Es7ZWfUZFpbYSkmKVARI"
}

clickhouse {
  read_hosts_url: null
}

system_monitoring {
    tracelog {
        logbroker {
            tvm_service_name = "logbroker-prestable"

            host: "myt.logbroker-prestable.yandex.net"
            topic: "direct-test/direct-trace-log"
            consumer = "direct-test/direct-trace-monitoring-log-reader"

            data_timeout = 60
            init_timeout = 30
            retries: 15
            group: [1]
        }
      }
}

xiva_client {
  xiva {
    url: "https://push-sandbox.yandex.ru"
    host: "push-sandbox.yandex.ru"
    tvm_app_id: 2002788
  }
}

yav_client {
    token: "file:///etc/direct-tokens/robot-dt-app-yav-np-oauth"
}

communication_platform_lb_settings_sending = ${communication_platform_lb_settings_common} {
  write_topic: "direct-np/testing/communication-events"
}

communication_inventory_client {
  url: "http://inventori-performance-test.yandex-team.ru/api"
}

gemini {
  api_url: "http://gemini.search.yandex.net:9017"
  user: "any"
}

object_api {
  service_holder {
    yp_endpointset_id: "grut-testing.object_api"
    channels_count: 10
  }
}

saas_client {
    base_url: "http://saas-searchproxy-prestable.yandex.net:17000"
}

landlord {
    api_url: "http://landlord.tst.geosmb.maps.yandex.net"
    tvm_app_id: 2024465
    landing_url_suffix: ".tst-clients.site"

    # todo
    parallel: 1
    connection_timeout: 5s
    global_timeout: 60s
    request_timeout: 10s
    request_retries: 2
}

bvm {
    api_url: "https://bvm-int.tst.geosmb.maps.yandex.net"

    # todo
    parallel: 1
    connection_timeout: 5s
    global_timeout: 60s
    request_timeout: 10s
    request_retries: 2
}

#В Маркете пока мало данных для тестирования на тестовом контуре
#market_feeds: {
#    dc_feeds_table: "//home/market/testing/mbi/dictionaries/datacamp_feed/latest"
#    feed_names_table: "//home/market/testing/mbi/dictionaries/partner_biz_snapshot/latest"
#}

bmapi: {
    api_url: "http://bmapi-test01i.yandex.ru/fcgi-bin/"
}

antifraud_api {
    host: "https://fraud-test.so.yandex-team.ru"
}

conversion_center {
  encryption {
  //Общий секрет между Директом и Криптой для шифрование ftp паролей пользователей.
    secret: "yav://sec-01g0y6m836nb4cbtm5vwx9jcnz#encrypter-secret"
  }
}
