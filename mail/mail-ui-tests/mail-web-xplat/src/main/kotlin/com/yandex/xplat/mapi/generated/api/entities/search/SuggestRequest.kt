// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM api/entities/search/suggest-request.ts >>>

package com.yandex.xplat.mapi

import com.yandex.xplat.common.*

public abstract class BaseSuggestRequest protected constructor(): MailNetworkRequest() {
    open override fun version(): NetworkAPIVersions {
        return NetworkAPIVersions.v2
    }

    open override fun method(): NetworkMethod {
        return NetworkMethod.post
    }

    open override fun encoding(): RequestEncoding {
        return JsonRequestEncoding()
    }

    open override fun path(): String {
        return "search_suggest"
    }

}

public open class ZeroSuggestRequest(): BaseSuggestRequest() {
    open override fun params(): MapJSONItem {
        val params = MapJSONItem()
        params.put("limit", IntegerJSONItem.fromInt32(10))
        return params
    }

}

public open class SuggestRequest(private val query: String): BaseSuggestRequest() {
    open override fun params(): MapJSONItem {
        val params = MapJSONItem()
        params.put("limit", IntegerJSONItem.fromInt32(10))
        params.put("text", StringJSONItem(this.query))
        params.put("twoSteps", BooleanJSONItem(true))
        return params
    }

}

public open class SaveQueryToZeroSuggestRequest(private val query: String): MailNetworkRequest() {
    open override fun version(): NetworkAPIVersions {
        return NetworkAPIVersions.v2
    }

    open override fun method(): NetworkMethod {
        return NetworkMethod.post
    }

    open override fun encoding(): RequestEncoding {
        return JsonRequestEncoding()
    }

    open override fun path(): String {
        return "search_save"
    }

    open override fun params(): MapJSONItem {
        val params = MapJSONItem()
        params.put("request", StringJSONItem(this.query))
        return params
    }

}

public open class DeleteQueryFromZeroSuggestRequest(private val query: String): MailNetworkRequest() {
    open override fun version(): NetworkAPIVersions {
        return NetworkAPIVersions.v2
    }

    open override fun method(): NetworkMethod {
        return NetworkMethod.post
    }

    open override fun encoding(): RequestEncoding {
        return JsonRequestEncoding()
    }

    open override fun path(): String {
        return "search_suggest_remove"
    }

    open override fun params(): MapJSONItem {
        val params = MapJSONItem()
        params.put("request", StringJSONItem(this.query))
        return params
    }

}

