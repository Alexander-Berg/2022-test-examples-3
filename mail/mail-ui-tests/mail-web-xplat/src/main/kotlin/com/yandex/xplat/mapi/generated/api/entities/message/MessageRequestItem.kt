// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM api/entities/message/message-request-item.ts >>>

package com.yandex.xplat.mapi

import com.yandex.xplat.common.MapJSONItem
import com.yandex.xplat.common.NetworkParams

public open class MessageRequestItem private constructor(val fid: ID?, private val tid: ID?, private val lid: LabelID?, private val first: Int, private val last: Int, private val threaded: Boolean) {
    open fun params(): NetworkParams {
        val result = MapJSONItem()
        if (this.fid != null) {
            result.putString("fid", idToString(this.fid)!!)
        }
        if (this.tid != null) {
            result.putString("tid", idToString(this.tid)!!)
        }
        if (this.lid != null) {
            result.putString("lid", this.lid)
        }
        return result.putInt32("first", this.first).putInt32("last", this.last).putBoolean("threaded", this.threaded).putString("md5", "").putBoolean("returnIfModified", true)
    }

    companion object {
        @JvmStatic
        open fun threads(fid: ID, first: Int, last: Int): MessageRequestItem {
            return MessageRequestItem(fid, null, null, first, last, true)
        }

        @JvmStatic
        open fun messagesInThread(tid: ID, first: Int, last: Int): MessageRequestItem {
            return MessageRequestItem(null, tid, null, first, last, false)
        }

        @JvmStatic
        open fun messagesInFolder(fid: ID, first: Int, last: Int): MessageRequestItem {
            return MessageRequestItem(fid, null, null, first, last, false)
        }

        @JvmStatic
        open fun messagesWithLabel(lid: LabelID, first: Int, last: Int): MessageRequestItem {
            return MessageRequestItem(null, null, lid, first, last, false)
        }

    }
}

