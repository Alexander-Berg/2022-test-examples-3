// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM mail/feature/compose-features.ts >>>

package com.yandex.xplat.testopithecus

import com.yandex.xplat.common.YSSet
import com.yandex.xplat.testopithecus.common.Feature

public open class WriteMessageFeature private constructor(): Feature<WriteMessage>("WriteMessage", "TODO: добрый человек, напиши тут, про что эта фича") {
    companion object {
        @JvmStatic var `get`: WriteMessageFeature = WriteMessageFeature()
    }
}

public interface WriteMessage {
    fun openCompose(): Unit
    fun sendMessage(to: String, subject: String): Unit
    fun replyMessage(): Unit
    fun sendPrepared(): Unit
}

public open class ComposeMessageFeature private constructor(): Feature<ComposeMessage>("SendMessage", "TODO: добрый человек, напиши тут, про что эта фича") {
    companion object {
        @JvmStatic var `get`: ComposeMessageFeature = ComposeMessageFeature()
    }
}

public interface ComposeMessage {
    fun goToMessageReply(): Unit
    fun addTo(to: String): Unit
    fun addToUsingSuggest(to: String): Unit
    fun removeTo(order: Int): Unit
    fun setSubject(subject: String): Unit
    fun clearSubject(): Unit
    fun setBody(body: String): Unit
    fun clearBody(): Unit
    fun getTo(): YSSet<String>
    fun getDraft(): DraftView
}

public open class WysiwygFeature private constructor(): Feature<WYSIWIG>("WYSIWYG", "Фича написания письма с форматированием (What You See Is What You Get).") {
    companion object {
        @JvmStatic var `get`: WysiwygFeature = WysiwygFeature()
    }
}

public interface WYSIWIG {
    fun setStrong(from: Int, to: Int): Unit
    fun setItalic(from: Int, to: Int): Unit
    fun clearFormatting(from: Int, to: Int): Unit
    fun appendText(index: Int, text: String): Unit
}

public interface DraftView {
    var to: YSSet<String>
    var subject: String?
    fun getWysiwyg(): WysiwygView
    fun tostring(): String
}

public interface WysiwygView {
    fun getText(): String
    fun getStyles(i: Int): YSSet<String>
    fun getRichBody(): String
}

