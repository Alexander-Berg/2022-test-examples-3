<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <objProp>
          <name></name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="u_threads" elementType="Argument">
            <stringProp name="Argument.name">u_threads</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup" elementType="Argument">
            <stringProp name="Argument.name">rampup</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="time" elementType="Argument">
            <stringProp name="Argument.name">time</stringProp>
            <stringProp name="Argument.value">60</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">imap-load.mail.yandex.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cto" elementType="Argument">
            <stringProp name="Argument.name">cto</stringProp>
            <stringProp name="Argument.value">3500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rto" elementType="Argument">
            <stringProp name="Argument.name">rto</stringProp>
            <stringProp name="Argument.value">3500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ssl" elementType="Argument">
            <stringProp name="Argument.name">ssl</stringProp>
            <stringProp name="Argument.value">true</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1428868070000</longProp>
        <longProp name="ThreadGroup.end_time">1428868070000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="init" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">import ru.yandex.load.imap.replay.ScenarioStorage;


//ScenarioStorage.getInstance().loadScenarios(&quot;collectors&quot;,&quot;collectors.ammo&quot;);

ScenarioStorage.getInstance().loadScenarios(&quot;users&quot;,&quot;users.ammo&quot;);</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="ignore" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">prev.setIgnore()</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="users" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${u_threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <longProp name="ThreadGroup.start_time">1428850903000</longProp>
        <longProp name="ThreadGroup.end_time">1428850903000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${time}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="logger" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">if (!prev.isSuccessful() || prev.getResponseCode()==200) {
	login = vars.get(&quot;login&quot;)
	client = ctx.getThreadNum()
	command = vars.get(&quot;command&quot;)
	payload = vars.get(&quot;payload&quot;)
	log.info(&quot;ERROR while doing &quot; + command + &quot; login: &quot; + login + &quot; client: &quot; + client + &quot; payload: &quot; + payload)
}
if (prev.isSuccessful()) {
	login = vars.get(&quot;login&quot;)
	client = ctx.getThreadNum()
	command = vars.get(&quot;command&quot;)
	payload = vars.get(&quot;payload&quot;)
	log.info(&quot;INFO success while doing &quot; + command + &quot; login: &quot; + login + &quot; client: &quot; + client + &quot; payload: &quot; + payload)
}</stringProp>
        </JSR223PostProcessor>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">imap_users.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">type,uid,login,password</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
        </CSVDataSet>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If ssl" enabled="true">
          <stringProp name="IfController.condition">${__jexl3(&quot;${ssl}&quot; == &quot;true&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="connect_ssl" enabled="true">
            <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
            <stringProp name="IMAPSampler.operation">CONNECT</stringProp>
            <stringProp name="IMAPSampler.command">NOOP</stringProp>
            <stringProp name="IMAPSampler.command_args"></stringProp>
            <boolProp name="IMAPSampler.check_successful">false</boolProp>
            <stringProp name="IMAPSampler.hostname">${host}</stringProp>
            <intProp name="IMAPSampler.port">993</intProp>
            <stringProp name="IMAPSampler.local_addr"></stringProp>
            <intProp name="IMAPSampler.default_timeout">10000</intProp>
            <intProp name="IMAPSampler.so_timeout">10000</intProp>
            <intProp name="IMAPSampler.connection_timeout">4000</intProp>
            <stringProp name="IMAPSampler.ciphers"></stringProp>
            <boolProp name="IMAPSampler.use_ssl">true</boolProp>
            <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
            <boolProp name="IMAPSampler.use_starttls">false</boolProp>
            <stringProp name="IMAPSampler.client_name">user@example.com</stringProp>
            <stringProp name="IMAPSampler.client_password">SexyPassord</stringProp>
          </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If plain" enabled="true">
          <stringProp name="IfController.condition">${__jexl3(&quot;${ssl}&quot; != &quot;true&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="connect" enabled="true">
            <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
            <stringProp name="IMAPSampler.operation">CONNECT</stringProp>
            <stringProp name="IMAPSampler.command">NOOP</stringProp>
            <stringProp name="IMAPSampler.command_args"></stringProp>
            <boolProp name="IMAPSampler.check_successful">false</boolProp>
            <stringProp name="IMAPSampler.hostname">${host}</stringProp>
            <intProp name="IMAPSampler.port">993</intProp>
            <stringProp name="IMAPSampler.local_addr"></stringProp>
            <intProp name="IMAPSampler.default_timeout">10000</intProp>
            <intProp name="IMAPSampler.so_timeout">10000</intProp>
            <intProp name="IMAPSampler.connection_timeout">4000</intProp>
            <stringProp name="IMAPSampler.ciphers"></stringProp>
            <boolProp name="IMAPSampler.use_ssl">false</boolProp>
            <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
            <boolProp name="IMAPSampler.use_starttls">false</boolProp>
            <stringProp name="IMAPSampler.client_name">user@example.com</stringProp>
            <stringProp name="IMAPSampler.client_password">SexyPassord</stringProp>
          </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
          <hashTree/>
        </hashTree>
        <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="login" enabled="true">
          <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
          <stringProp name="IMAPSampler.operation">LOGIN</stringProp>
          <stringProp name="IMAPSampler.command">NOOP</stringProp>
          <stringProp name="IMAPSampler.command_args"></stringProp>
          <boolProp name="IMAPSampler.check_successful">false</boolProp>
          <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
          <intProp name="IMAPSampler.port">993</intProp>
          <stringProp name="IMAPSampler.local_addr"></stringProp>
          <intProp name="IMAPSampler.default_timeout">1000</intProp>
          <intProp name="IMAPSampler.so_timeout">1000</intProp>
          <intProp name="IMAPSampler.connection_timeout">1000</intProp>
          <stringProp name="IMAPSampler.ciphers"></stringProp>
          <boolProp name="IMAPSampler.use_ssl">true</boolProp>
          <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
          <boolProp name="IMAPSampler.use_starttls">false</boolProp>
          <stringProp name="IMAPSampler.client_name">${login}</stringProp>
          <stringProp name="IMAPSampler.client_password">${password}</stringProp>
        </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="acquire" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import ru.yandex.load.imap.replay.*;

String pool = &quot;users&quot;;

login = vars.get(&quot;login&quot;)

prop = &quot;user_ptr_&quot; + ctx.getThread().getThreadName();
ScenarioStorage ss = ScenarioStorage.getInstance();

if(props.get(prop) != null) {
        int last;
        if(props.get(prop) instanceof Integer) {
                last = props.get(prop);
        }
        if(last != -1) {
        		ss.getScenario(pool, last).reset();
        		ss.release(pool, last);
               log.info(pool + &quot;# acquired session &quot; + last + &quot; with thread: &quot; + prop + &quot; for login: &quot; + login);
        }
        props.put(prop, -1);
}

vars.put(&quot;run&quot;, &quot;true&quot;);

int ptr = ss.acquire(pool);
log.info(pool + &quot;# acquired session &quot; + String.valueOf(ptr) + &quot; with thread: &quot; + prop + &quot; for login: &quot; + login);
if(ptr == -1) {
	vars.put(&quot;is_acquired&quot;, &quot;false&quot;);
} else {
	props.put(prop, ptr);
	vars.put(&quot;is_acquired&quot;, &quot;true&quot;);
	vars.put(&quot;script_id&quot;, String.valueOf(ptr));
	ss.getScenario(pool, ptr).reset();
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="acquire" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import ru.yandex.load.imap.replay.*;





prop = &quot;user_ptr_&quot; + ctx.getThread().getThreadName();
ScenarioStorage ss = ScenarioStorage.getInstance();

if(props.get(prop) != null) {
        int last;
        if(props.get(prop) instanceof Integer) {
                last = props.get(prop);
        }
        if(last != -1) {
        		ss.getScenario(&quot;users&quot;, last).reset();
        		ss.release(&quot;users&quot;, last);
               log.info(&quot;acquired session &quot; + last + &quot; with thread: &quot; + prop);
        }
        props.put(prop, -1);
}

vars.put(&quot;run&quot;, &quot;true&quot;);

int ptr = ss.acquire(&quot;users&quot;);
log.info(&quot;acquired session &quot; + String.valueOf(ptr) + &quot; with thread: &quot; + prop);
if(ptr == -1) {
	vars.put(&quot;is_acquired&quot;, &quot;false&quot;);
} else {
	props.put(prop, ptr);
	vars.put(&quot;is_acquired&quot;, &quot;true&quot;);
	vars.put(&quot;script_id&quot;, String.valueOf(ptr));
	ss.getScenario(&quot;users&quot;, ptr).reset();
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="is acquired ?" enabled="true">
          <stringProp name="IfController.condition">${__jexl2(&quot;${is_acquired}&quot; == &quot;true&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${run}&quot; == &quot;true&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="prepare_request" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename">prepare_request.groovy</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script"></stringProp>
            </JSR223Sampler>
            <hashTree>
              <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="ignore" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">prev.setIgnore()</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223Assertion>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If sleep" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;sleep&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="dummy" enabled="true">
                <boolProp name="WAITING">true</boolProp>
                <boolProp name="SUCCESFULL">true</boolProp>
                <stringProp name="RESPONSE_CODE">200</stringProp>
                <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
                <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
                <stringProp name="RESPONSE_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
                <stringProp name="RESPONSE_TIME">0</stringProp>
                <stringProp name="LATENCY">0</stringProp>
                <stringProp name="CONNECT">0</stringProp>
              </kg.apc.jmeter.samplers.DummySampler>
              <hashTree>
                <JSR223Timer guiclass="TestBeanGUI" testclass="JSR223Timer" testname="JSR223 Timer" enabled="true">
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">sleep_time = Integer.parseInt(vars.get(&quot;sleep_time&quot;))
return sleep_time</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Timer>
                <hashTree/>
                <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="ignore" enabled="true">
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="script">prev.setIgnore()</stringProp>
                  <stringProp name="scriptLanguage">groovy</stringProp>
                </JSR223Assertion>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if capability" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;capability&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="capability" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">CAPABILITY</stringProp>
                <stringProp name="IMAPSampler.command">NOOP</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if noop" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;noop&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="noop" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">NOOP</stringProp>
                <stringProp name="IMAPSampler.command">NOOP</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if close" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;close&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="close" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">CLOSE</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if idle" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;idle&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="idle_noop" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">NOOP</stringProp>
                <stringProp name="IMAPSampler.command">NOOP</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if done" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;done&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="done_noop" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">NOOP</stringProp>
                <stringProp name="IMAPSampler.command">NOOP</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if logout" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;logout&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="logout" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">LOGOUT</stringProp>
                <stringProp name="IMAPSampler.command">NOOP</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if list" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;list&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="list" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">LIST</stringProp>
                <stringProp name="IMAPSampler.command_args">${reference_mailbox}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;reference_mailbox&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if lsub" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;lsub&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="lsub" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">LSUB</stringProp>
                <stringProp name="IMAPSampler.command_args">${reference_mailbox}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;reference_mailbox&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if status" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;status&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="status" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">STATUS</stringProp>
                <stringProp name="IMAPSampler.command_args">${folder} ${flags}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;folder&quot;);
vars.remove(&quot;flags&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if select" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;select&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="select" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">SELECT</stringProp>
                <stringProp name="IMAPSampler.command_args">${reference_mailbox}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;reference_mailbox&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="extract_data_from_select" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String[] lines = new String(prev.getResponseData()).split(&apos;\n&apos;);
try {
	// get exists count
	int l_idx = lines[1].indexOf(&apos; &apos;) + 1;
	int r_idx = lines[1].indexOf(&apos; &apos;, l_idx);
	//log.info(&quot;#&quot; + String.valueOf(lines[1].substring(l_idx, r_idx)));
	vars.put(&quot;exists&quot;, String.valueOf(lines[1].substring(l_idx, r_idx)));
	//get uid next
	l_idx = lines[5].indexOf(&apos;UIDNEXT&apos;) + 8;
	r_idx = lines[5].indexOf(&apos;]&apos;);
	vars.put(&quot;uid_next&quot;, String.valueOf(lines[5].substring(l_idx, r_idx)));
}
catch (Exception all) {
	log.info(&quot;Error parsing select: &quot; + String.valueOf(all) + &quot; response: &quot; + prev.getResponseDataAsString())
}
</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if examine" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;examine&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="examine" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">EXAMINE</stringProp>
                <stringProp name="IMAPSampler.command_args">${reference_mailbox}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;reference_mailbox&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="extract_data_from_select" enabled="false">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String[] lines = new String(prev.getResponseData()).split(&apos;\n&apos;);

// get exists count
int l_idx = lines[1].indexOf(&apos; &apos;) + 1;
int r_idx = lines[1].indexOf(&apos; &apos;, l_idx);
//log.info(&quot;#&quot; + String.valueOf(lines[1].substring(l_idx, r_idx)));
vars.put(&quot;exists&quot;, String.valueOf(lines[1].substring(l_idx, r_idx)));

//get uid next
l_idx = lines[5].indexOf(&apos;UIDNEXT&apos;) + 8;
r_idx = lines[5].indexOf(&apos;]&apos;);
vars.put(&quot;uid_next&quot;, String.valueOf(lines[5].substring(l_idx, r_idx)));</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if uid search" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;uid search&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="uid_search" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">UID</stringProp>
                <stringProp name="IMAPSampler.command_args">SEARCH ${payload}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if uid fetch" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;uid fetch&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="uid_fetch" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">UID</stringProp>
                <stringProp name="IMAPSampler.command_args">FETCH ${payload}</stringProp>
                <boolProp name="IMAPSampler.check_successful">false</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if uid store" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;uid store&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename">hibernation.groovy</stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script"></stringProp>
              </JSR223PostProcessor>
              <hashTree/>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="uid_store" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">UID</stringProp>
                <stringProp name="IMAPSampler.command_args">STORE ${payload}</stringProp>
                <boolProp name="IMAPSampler.check_successful">false</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if search" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;search&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="search" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">SEARCH</stringProp>
                <stringProp name="IMAPSampler.command_args">${payload}</stringProp>
                <boolProp name="IMAPSampler.check_successful">false</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if fetch" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;fetch&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="fetch" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">FETCH</stringProp>
                <stringProp name="IMAPSampler.command_args">${payload}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if check" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;check&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="check" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">CHECK</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if expunge" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;expunge&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="expunge" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">EXPUNGE</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="hibernation" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename">hibernation.groovy</stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script"></stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="disconnect" enabled="true">
          <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
          <stringProp name="IMAPSampler.operation">DISCONNECT</stringProp>
          <stringProp name="IMAPSampler.command">NOOP</stringProp>
          <stringProp name="IMAPSampler.command_args"></stringProp>
          <boolProp name="IMAPSampler.check_successful">true</boolProp>
          <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
          <intProp name="IMAPSampler.port">993</intProp>
          <stringProp name="IMAPSampler.local_addr"></stringProp>
          <intProp name="IMAPSampler.default_timeout">1000</intProp>
          <intProp name="IMAPSampler.so_timeout">1000</intProp>
          <intProp name="IMAPSampler.connection_timeout">1000</intProp>
          <stringProp name="IMAPSampler.ciphers"></stringProp>
          <boolProp name="IMAPSampler.use_ssl">true</boolProp>
          <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
          <boolProp name="IMAPSampler.use_starttls">false</boolProp>
          <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
          <stringProp name="IMAPSampler.client_password">123321</stringProp>
        </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="release" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import ru.yandex.load.imap.replay.*;

prop = &quot;user_ptr_&quot; + ctx.getThread().getThreadName();

ScenarioStorage ss = ScenarioStorage.getInstance();

if(props.get(prop) != null) {
        //log.info(&amp;quot;properties: &amp;quot; + props.get(prop));
        int last;
        if(props.get(prop) instanceof Integer) {
                last = props.get(prop);
        }
        if(last != -1) {
               ss.getScenario(&quot;users&quot;, last).reset();
               ss.getScenario(&quot;users&quot;, last).release();
        }
        props.remove(prop);
        log.info(&quot;released session &quot; + last + &quot; with thread: &quot; + prop);
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="release" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import ru.yandex.load.imap.replay.*;

String pool = &quot;users&quot;;

login = vars.get(&quot;login&quot;)

prop = &quot;user_ptr_&quot; + ctx.getThread().getThreadName();

ScenarioStorage ss = ScenarioStorage.getInstance();

if(props.get(prop) != null) {
        //log.info(&amp;quot;properties: &amp;quot; + props.get(prop));
        int last;
        if(props.get(prop) instanceof Integer) {
                last = props.get(prop);
        }
        if(last != -1) {
               ss.getScenario(pool, last).reset();
               ss.getScenario(pool, last).release();
        }
        props.remove(prop);
        log.info(pool + &quot;# released session &quot; + last + &quot; with thread: &quot; + prop + &quot; login: &quot; + login);
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="collectors" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(c_threads)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampup)}</stringProp>
        <longProp name="ThreadGroup.start_time">1428850903000</longProp>
        <longProp name="ThreadGroup.end_time">1428850903000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${__P(time)}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">users.csv</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">login,password</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
        </CSVDataSet>
        <hashTree/>
        <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_connect_ssl" enabled="true">
          <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
          <stringProp name="IMAPSampler.operation">CONNECT</stringProp>
          <stringProp name="IMAPSampler.command">NOOP</stringProp>
          <stringProp name="IMAPSampler.command_args"></stringProp>
          <boolProp name="IMAPSampler.check_successful">false</boolProp>
          <stringProp name="IMAPSampler.hostname">${__P(host)}</stringProp>
          <intProp name="IMAPSampler.port">993</intProp>
          <stringProp name="IMAPSampler.local_addr"></stringProp>
          <intProp name="IMAPSampler.default_timeout">10000</intProp>
          <intProp name="IMAPSampler.so_timeout">10000</intProp>
          <intProp name="IMAPSampler.connection_timeout">10000</intProp>
          <stringProp name="IMAPSampler.ciphers"></stringProp>
          <boolProp name="IMAPSampler.use_ssl">true</boolProp>
          <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
          <boolProp name="IMAPSampler.use_starttls">false</boolProp>
          <stringProp name="IMAPSampler.client_name">user@example.com</stringProp>
          <stringProp name="IMAPSampler.client_password">SexyPassord</stringProp>
        </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
        <hashTree/>
        <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_login" enabled="true">
          <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
          <stringProp name="IMAPSampler.operation">LOGIN</stringProp>
          <stringProp name="IMAPSampler.command">NOOP</stringProp>
          <stringProp name="IMAPSampler.command_args"></stringProp>
          <boolProp name="IMAPSampler.check_successful">false</boolProp>
          <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
          <intProp name="IMAPSampler.port">993</intProp>
          <stringProp name="IMAPSampler.local_addr"></stringProp>
          <intProp name="IMAPSampler.default_timeout">1000</intProp>
          <intProp name="IMAPSampler.so_timeout">1000</intProp>
          <intProp name="IMAPSampler.connection_timeout">1000</intProp>
          <stringProp name="IMAPSampler.ciphers"></stringProp>
          <boolProp name="IMAPSampler.use_ssl">true</boolProp>
          <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
          <boolProp name="IMAPSampler.use_starttls">false</boolProp>
          <stringProp name="IMAPSampler.client_name">${login}</stringProp>
          <stringProp name="IMAPSampler.client_password">${password}</stringProp>
        </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="acquire" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import ru.yandex.load.imap.replay.*;

String pool = &quot;collectors&quot;;

prop = &quot;collector_ptr_&quot; + ctx.getThread().getThreadName();
ScenarioStorage ss = ScenarioStorage.getInstance();

if(props.get(prop) != null) {
        int last;
        if(props.get(prop) instanceof Integer) {
                last = props.get(prop);
        }
        if(last != -1) {
        		ss.getScenario(pool, last).reset();
        		ss.release(pool, last);
               log.info(pool + &quot;# acquired session &quot; + last + &quot; with thread: &quot; + prop);
        }
        props.put(prop, -1);
}

vars.put(&quot;run&quot;, &quot;true&quot;);

int ptr = ss.acquire(pool);
log.info(pool + &quot;# acquired session &quot; + String.valueOf(ptr) + &quot; with thread: &quot; + prop);
if(ptr == -1) {
	vars.put(&quot;is_acquired&quot;, &quot;false&quot;);
} else {
	props.put(prop, ptr);
	vars.put(&quot;is_acquired&quot;, &quot;true&quot;);
	vars.put(&quot;script_id&quot;, String.valueOf(ptr));
	ss.getScenario(pool, ptr).reset();
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="acquire" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import ru.yandex.load.imap.replay.*;

String pool = &quot;collectors&quot;;

prop = &quot;collector_ptr_&quot; + ctx.getThread().getThreadName();
ScenarioStorage ss = ScenarioStorage.getInstance();

if(props.get(prop) != null) {
        int last;
        if(props.get(prop) instanceof Integer) {
                last = props.get(prop);
        }
        if(last != -1) {
        		ss.getScenario(pool, last).reset();
        		ss.release(pool, last);
               log.info(pool + &quot;# acquired session &quot; + last + &quot; with thread: &quot; + prop);
        }
        props.put(prop, -1);
}

vars.put(&quot;run&quot;, &quot;true&quot;);

int ptr = ss.acquire(pool);
log.info(pool + &quot;# acquired session &quot; + String.valueOf(ptr) + &quot; with thread: &quot; + prop);
if(ptr == -1) {
	vars.put(&quot;is_acquired&quot;, &quot;false&quot;);
} else {
	props.put(prop, ptr);
	vars.put(&quot;is_acquired&quot;, &quot;true&quot;);
	vars.put(&quot;script_id&quot;, String.valueOf(ptr));
	ss.getScenario(pool, ptr).reset();
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="is acquired ?" enabled="true">
          <stringProp name="IfController.condition">${__jexl2(&quot;${is_acquired}&quot; == &quot;true&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
          <boolProp name="IfController.useExpression">true</boolProp>
        </IfController>
        <hashTree>
          <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
            <stringProp name="WhileController.condition">${__jexl2(&quot;${run}&quot; == &quot;true&quot;)}</stringProp>
          </WhileController>
          <hashTree>
            <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="prepare_request" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename">prepare_request.groovy</stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script"></stringProp>
            </JSR223Sampler>
            <hashTree/>
            <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="prepare_request" enabled="false">
              <boolProp name="WAITING">false</boolProp>
              <boolProp name="SUCCESFULL">true</boolProp>
              <stringProp name="RESPONSE_CODE">200</stringProp>
              <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
              <stringProp name="REQUEST_DATA"></stringProp>
              <stringProp name="RESPONSE_DATA"></stringProp>
              <stringProp name="RESPONSE_TIME">0</stringProp>
              <stringProp name="LATENCY">0</stringProp>
              <stringProp name="CONNECT"></stringProp>
            </kg.apc.jmeter.samplers.DummySampler>
            <hashTree>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
                <stringProp name="scriptLanguage">groovy</stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="script">import ru.yandex.load.imap.replay.*;
import java.util.concurrent.ThreadLocalRandom;

ScenarioStorage ss = ScenarioStorage.getInstance();
long start = System.nanoTime();
sleep_time = 0;

Scenario s = ss.getScenario(Integer.parseInt(vars.get(&quot;script_id&quot;)));

def generate_seq(int size, String type, int count) {
//+ 133423 all
//+  89111 sequentially
//+  43442 unknown
//+  10651 last
//?   1919 random
	if( type.equals(&quot;all&quot;)) {
		return &quot;1:*&quot;;
	} else if (type.equals(&quot;sequentially&quot;) || (type.equals(&quot;random&quot;) &amp;&amp; count &gt; 1)) {
		if(count &gt;= size) {
			return &quot;1:*&quot;
		}
		int right = ThreadLocalRandom.current().nextInt(count, size + 1);
		int left = right - count + 1;
		return String.valueOf(left) + &quot;:&quot; + String.valueOf(right);
	} else if ( type.equals(&quot;last&quot;) ) {
		int left = size - 10;
		if(left &lt; 1) left = 1; 
		return String.valueOf(left) + &quot;:*&quot;; 
	} else if (type.equals(&quot;random&quot;) &amp;&amp; count == 1) {
		int random = ThreadLocalRandom.current().nextInt(1, size + 1);
		return String.valueOf(random);
	}
	return null;
}

def handle_request(Scenario s) {
	Scenario.IMAPRequest request = s.nextCommand();
	if(request == null) {
		vars.put(&quot;run&quot;, &quot;false&quot;);
	} else {
		String command = request.getRequest();
		vars.put(&quot;command&quot;, command);
		String[] args = request.getArgs();

		if(command.equals(&quot;sleep&quot;)) {
			sleep_time = Integer.parseInt(args[0]);
			if(sleep_time &gt; 15) {
				//Thread.sleep(sleep_time);
				return false;
			}
		} else if (command.equals(&quot;list&quot;) || command.equals(&quot;select&quot;) || command.equals(&quot;examine&quot;) || command.equals(&quot;lsub&quot;)) {
			vars.put(&quot;reference_mailbox&quot;, args[0]);
		} else if (command.equals(&quot;status&quot;)) {
			vars.put(&quot;folder&quot;, args[0]);
			vars.put(&quot;flags&quot;, args[1]);
		} else if (command.equals(&quot;disconnect&quot;)) {
			vars.put(&quot;run&quot;, &quot;false&quot;);
		} else if (command.equals(&quot;uid search&quot;) || command.equals(&quot;uid fetch&quot;) || command.equals(&quot;fetch&quot; ) || command.equals(&quot;uid store&quot;) || command.equals(&quot;search&quot;)) {
			String type = args[0];
			String payload;
			int count = 0;
			if(type.equals(&quot;random&quot;) || type.equals(&quot;sequentially&quot;)) count = Integer.parseInt(args[1]);
			int exists = Integer.parseInt(vars.get(&quot;exists&quot;));
			String flags = args[2];
			if(flags == &quot;null&quot;)	return false;
			String seq = generate_seq(exists, type, count);
			if( seq == null ) {
				payload = flags;
			} else { 
				payload = seq + &quot; &quot; + flags;
			}
			vars.put(&quot;payload&quot;, payload);

		}
	}
	return true;
}

while(handle_request(s) == false) {
}

long end = System.nanoTime();
//log.info(&quot;handle time: &quot; + String.valueOf((int)(end - start)/1000) + &quot; mks, sleep: &quot; + String.valueOf(sleep_time) + &quot;ms&quot;);
</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if capability" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;capability&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_capability" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">CAPABILITY</stringProp>
                <stringProp name="IMAPSampler.command">NOOP</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if noop" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;noop&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_noop" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">NOOP</stringProp>
                <stringProp name="IMAPSampler.command">NOOP</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if close" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;close&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_close" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">CLOSE</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if idle" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;idle&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_idle_noop" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">NOOP</stringProp>
                <stringProp name="IMAPSampler.command">NOOP</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if done" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;done&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_done_noop" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">NOOP</stringProp>
                <stringProp name="IMAPSampler.command">NOOP</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if logout" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;logout&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_logout" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">LOGOUT</stringProp>
                <stringProp name="IMAPSampler.command">NOOP</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if list" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;list&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_list" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">LIST</stringProp>
                <stringProp name="IMAPSampler.command_args">${reference_mailbox}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;reference_mailbox&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if lsub" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;lsub&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_lsub" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">LSUB</stringProp>
                <stringProp name="IMAPSampler.command_args">${reference_mailbox}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;reference_mailbox&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if status" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;status&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_status" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">STATUS</stringProp>
                <stringProp name="IMAPSampler.command_args">${folder} ${flags}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;folder&quot;);
vars.remove(&quot;flags&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if select" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;select&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_select" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">SELECT</stringProp>
                <stringProp name="IMAPSampler.command_args">${reference_mailbox}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;reference_mailbox&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="extract_data_from_select" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String[] lines = new String(prev.getResponseData()).split(&apos;\n&apos;);

// get exists count
int l_idx = lines[1].indexOf(&apos; &apos;) + 1;
int r_idx = lines[1].indexOf(&apos; &apos;, l_idx);
//log.info(&quot;#&quot; + String.valueOf(lines[1].substring(l_idx, r_idx)));
vars.put(&quot;exists&quot;, String.valueOf(lines[1].substring(l_idx, r_idx)));

//get uid next
l_idx = lines[5].indexOf(&apos;UIDNEXT&apos;) + 8;
r_idx = lines[5].indexOf(&apos;]&apos;);
vars.put(&quot;uid_next&quot;, String.valueOf(lines[5].substring(l_idx, r_idx)));</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if examine" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;examine&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_examine" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">EXAMINE</stringProp>
                <stringProp name="IMAPSampler.command_args">${reference_mailbox}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;reference_mailbox&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="extract_data_from_select" enabled="false">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">String[] lines = new String(prev.getResponseData()).split(&apos;\n&apos;);

// get exists count
int l_idx = lines[1].indexOf(&apos; &apos;) + 1;
int r_idx = lines[1].indexOf(&apos; &apos;, l_idx);
//log.info(&quot;#&quot; + String.valueOf(lines[1].substring(l_idx, r_idx)));
vars.put(&quot;exists&quot;, String.valueOf(lines[1].substring(l_idx, r_idx)));

//get uid next
l_idx = lines[5].indexOf(&apos;UIDNEXT&apos;) + 8;
r_idx = lines[5].indexOf(&apos;]&apos;);
vars.put(&quot;uid_next&quot;, String.valueOf(lines[5].substring(l_idx, r_idx)));</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if uid search" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;uid search&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_uid_search" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">UID</stringProp>
                <stringProp name="IMAPSampler.command_args">SEARCH ${payload}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if uid fetch" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;uid fetch&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_uid_fetch" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">UID</stringProp>
                <stringProp name="IMAPSampler.command_args">FETCH ${payload}</stringProp>
                <boolProp name="IMAPSampler.check_successful">false</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if uid store" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;uid store&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_uid_store" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">UID</stringProp>
                <stringProp name="IMAPSampler.command_args">STORE ${payload}</stringProp>
                <boolProp name="IMAPSampler.check_successful">false</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if search" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;search&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_search" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">SEARCH</stringProp>
                <stringProp name="IMAPSampler.command_args">${payload}</stringProp>
                <boolProp name="IMAPSampler.check_successful">false</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if fetch" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;fetch&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_fetch" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">FETCH</stringProp>
                <stringProp name="IMAPSampler.command_args">${payload}</stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if check" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;check&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_check" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">CHECK</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if expunge" enabled="true">
              <stringProp name="IfController.condition">${__jexl2(&quot;${command}&quot; == &quot;expunge&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
              <boolProp name="IfController.useExpression">true</boolProp>
            </IfController>
            <hashTree>
              <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_expunge" enabled="true">
                <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
                <stringProp name="IMAPSampler.operation">COMMAND</stringProp>
                <stringProp name="IMAPSampler.command">EXPUNGE</stringProp>
                <stringProp name="IMAPSampler.command_args"></stringProp>
                <boolProp name="IMAPSampler.check_successful">true</boolProp>
                <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
                <intProp name="IMAPSampler.port">993</intProp>
                <stringProp name="IMAPSampler.local_addr"></stringProp>
                <intProp name="IMAPSampler.default_timeout">1000</intProp>
                <intProp name="IMAPSampler.so_timeout">1000</intProp>
                <intProp name="IMAPSampler.connection_timeout">1000</intProp>
                <stringProp name="IMAPSampler.ciphers"></stringProp>
                <boolProp name="IMAPSampler.use_ssl">true</boolProp>
                <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
                <boolProp name="IMAPSampler.use_starttls">false</boolProp>
                <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
                <stringProp name="IMAPSampler.client_password">123321</stringProp>
              </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
              <hashTree>
                <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="reset_fields" enabled="true">
                  <stringProp name="scriptLanguage">groovy</stringProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="cacheKey">true</stringProp>
                  <stringProp name="script">vars.remove(&quot;payload&quot;);</stringProp>
                </JSR223PostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <me.schiz.jmeter.protocol.imap.sampler.IMAPSampler guiclass="me.schiz.jmeter.protocol.imap.gui.IMAPSamplerGUI" testclass="me.schiz.jmeter.protocol.imap.sampler.IMAPSampler" testname="collector_disconnect" enabled="true">
          <stringProp name="IMAPSampler.client">${__threadNum}</stringProp>
          <stringProp name="IMAPSampler.operation">DISCONNECT</stringProp>
          <stringProp name="IMAPSampler.command">NOOP</stringProp>
          <stringProp name="IMAPSampler.command_args"></stringProp>
          <boolProp name="IMAPSampler.check_successful">true</boolProp>
          <stringProp name="IMAPSampler.hostname">webtest-pg.yandex.ru</stringProp>
          <intProp name="IMAPSampler.port">993</intProp>
          <stringProp name="IMAPSampler.local_addr"></stringProp>
          <intProp name="IMAPSampler.default_timeout">1000</intProp>
          <intProp name="IMAPSampler.so_timeout">1000</intProp>
          <intProp name="IMAPSampler.connection_timeout">1000</intProp>
          <stringProp name="IMAPSampler.ciphers"></stringProp>
          <boolProp name="IMAPSampler.use_ssl">true</boolProp>
          <boolProp name="IMAPSampler.tcp_nodelay">true</boolProp>
          <boolProp name="IMAPSampler.use_starttls">false</boolProp>
          <stringProp name="IMAPSampler.client_name">mailtestuser8000</stringProp>
          <stringProp name="IMAPSampler.client_password">123321</stringProp>
        </me.schiz.jmeter.protocol.imap.sampler.IMAPSampler>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="release" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import ru.yandex.load.imap.replay.*;

String pool = &quot;collectors&quot;;

prop = &quot;collector_ptr_&quot; + ctx.getThread().getThreadName();

ScenarioStorage ss = ScenarioStorage.getInstance();

if(props.get(prop) != null) {
        //log.info(&amp;quot;properties: &amp;quot; + props.get(prop));
        int last;
        if(props.get(prop) instanceof Integer) {
                last = props.get(prop);
        }
        if(last != -1) {
               ss.getScenario(pool, last).reset();
               ss.getScenario(pool, last).release();
        }
        props.remove(prop);
        log.info(pool + &quot;# released session &quot; + last + &quot; with thread: &quot; + prop);
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="release" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import ru.yandex.load.imap.replay.*;

prop = &quot;user_ptr_&quot; + ctx.getThread().getThreadName();

ScenarioStorage ss = ScenarioStorage.getInstance();

if(props.get(prop) != null) {
        //log.info(&amp;quot;properties: &amp;quot; + props.get(prop));
        int last;
        if(props.get(prop) instanceof Integer) {
                last = props.get(prop);
        }
        if(last != -1) {
               ss.getScenario(&quot;users&quot;, last).reset();
               ss.getScenario(&quot;users&quot;, last).release();
        }
        props.remove(prop);
        log.info(&quot;released session &quot; + last + &quot; with thread: &quot; + prop);
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
