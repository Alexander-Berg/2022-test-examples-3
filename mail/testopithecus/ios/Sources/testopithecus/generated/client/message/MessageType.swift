// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM client/message/message-type.ts >>>

import Foundation

public typealias MessageTypeFlag = Int32

open class MessageTypeFlags {
  public static var delivery: MessageTypeFlag = 1 << 0
  public static var registration: MessageTypeFlag = 1 << 1
  public static var social: MessageTypeFlag = 1 << 2
  public static var people: MessageTypeFlag = 1 << 3
  public static var eticket: MessageTypeFlag = 1 << 4
  public static var eshop: MessageTypeFlag = 1 << 5
  public static var notification: MessageTypeFlag = 1 << 6
  public static var bounce: MessageTypeFlag = 1 << 7
  public static var official: MessageTypeFlag = 1 << 8
  public static var script: MessageTypeFlag = 1 << 9
  public static var dating: MessageTypeFlag = 1 << 10
  public static var greeting: MessageTypeFlag = 1 << 11
  public static var news: MessageTypeFlag = 1 << 12
  public static var sGrouponsite: MessageTypeFlag = 1 << 13
  public static var sDatingsite: MessageTypeFlag = 1 << 14
  public static var sETicket: MessageTypeFlag = 1 << 15
  public static var sBank: MessageTypeFlag = 1 << 16
  public static var sSocial: MessageTypeFlag = 1 << 17
  public static var sTravel: MessageTypeFlag = 1 << 18
  public static var sZDTicket: MessageTypeFlag = 1 << 19
  public static var sRealty: MessageTypeFlag = 1 << 20
  public static var sEShop: MessageTypeFlag = 1 << 21
  public static var sCompany: MessageTypeFlag = 1 << 22
  public static var sHotels: MessageTypeFlag = 1 << 23
  public static var transact: MessageTypeFlag = 1 << 24
  public static var personal: MessageTypeFlag = 1 << 25
  public static var tNews: MessageTypeFlag = 1 << 26
  public static var tSocial: MessageTypeFlag = 1 << 27
  public static var tNotification: MessageTypeFlag = 1 << 28
  public static var tPeople: MessageTypeFlag = 1 << 29
}

@discardableResult
public func messageTypeMaskFromServerMessageTypes(_ types: YSArray<Int32>) -> MessageTypeFlag {
  var result: MessageTypeFlag = 0
  for type in types {
    let converted: Int32! = serverMessageTypeFromInt32(type)
    if converted != nil {
      result = result | converted
    }
  }
  return result
}

@discardableResult
private func serverMessageTypeFromInt32(_ value: Int32) -> MessageTypeFlag! {
  switch value {
  case 1:
    return MessageTypeFlags.delivery
  case 2:
    return MessageTypeFlags.registration
  case 3:
    return MessageTypeFlags.social
  case 4:
    return MessageTypeFlags.people
  case 5:
    return MessageTypeFlags.eticket
  case 6:
    return MessageTypeFlags.eshop
  case 7:
    return MessageTypeFlags.notification
  case 8:
    return MessageTypeFlags.bounce
  case 9:
    return MessageTypeFlags.official
  case 10:
    return MessageTypeFlags.script
  case 11:
    return MessageTypeFlags.dating
  case 12:
    return MessageTypeFlags.greeting
  case 13:
    return MessageTypeFlags.news
  case 14:
    return MessageTypeFlags.sGrouponsite
  case 15:
    return MessageTypeFlags.sDatingsite
  case 16:
    return MessageTypeFlags.sETicket
  case 17:
    return MessageTypeFlags.sBank
  case 18:
    return MessageTypeFlags.sSocial
  case 19:
    return MessageTypeFlags.sTravel
  case 20:
    return MessageTypeFlags.sZDTicket
  case 21:
    return MessageTypeFlags.sRealty
  case 23:
    return MessageTypeFlags.sEShop
  case 24:
    return MessageTypeFlags.sCompany
  case 35:
    return MessageTypeFlags.sHotels
  case 64:
    return MessageTypeFlags.transact
  case 65:
    return MessageTypeFlags.personal
  case 100:
    return MessageTypeFlags.tNews
  case 101:
    return MessageTypeFlags.tSocial
  case 102:
    return MessageTypeFlags.tNotification
  case 103:
    return MessageTypeFlags.tPeople
  default:
    return nil
  }
}
