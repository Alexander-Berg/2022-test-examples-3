// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM client/result.ts >>>

import Foundation

public func getVoid() {}

open class Result<T> {
  private let value: T!
  private let error: Failure!
  public init(_ value: T!, _ error: Failure!) {
    self.value = value
    self.error = error
  }

  @discardableResult
  open func isValue() -> Bool {
    return error == nil
  }

  @discardableResult
  open func isError() -> Bool {
    return error != nil
  }

  @discardableResult
  open func getValue() -> T {
    return value!
  }

  @discardableResult
  open func getError() -> Failure {
    return error!
  }

  @discardableResult
  open func withValue<U>(_ f: @escaping (T) -> U) -> U! {
    if isValue() {
      return f(getValue())
    }
    return nil
  }
}
