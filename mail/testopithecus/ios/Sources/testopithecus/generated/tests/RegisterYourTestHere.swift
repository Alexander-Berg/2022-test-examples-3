// <<< AUTOGENERATED BY YANDEX.SCRIPT FROM tests/register-your-test-here.ts >>>

import Foundation

open class TestsRegistry {
  public static var testToDebug: MBTTest!
  public static var shouldBeFixedInApp: YSArray<MBTTest> = YSArray()
  private var tests: YSArray<MBTTest> = YSArray(YandexLoginTest(), SwitchAccountTest(), SendMessageWithBody(), SendMessageWithToAddedFromSuggestTest(), MoveToSpamFirstMessageTest(), MarkUnreadAfterReadTest(), ChangeFoldersTest(), CreateFoldersTest(), MoveToFolderTest(), ReadMessageAfterOpeningTest(), MarkAllThreadMessagesReadByMarkingMainMessageTest(), ReceiveMessageTest(), ReplyMessageTest(), GroupMarkAsReadDifferentMessagesTest(), GroupMarkAsReadMessagesTest(), GroupDeleteMessagesTest(), CanOpenMessageAfterGroupActionTest(), DeleteThreadTest(), DeleteMessageBySwipeTest(), DeleteCurrentMessageTest(), MarkAsImportantTest(), LabelAllThreadMessagesImportantByLabellingMainMessageTest(), FormatTextTest(), MySuperTest(), ArchiveFirstMessageTest(), GroupBySubjectTest(), InboxTopBarDisplayTest(), GroupModeViewTest(), SwipeToReadTest(), SwipeToUndeadTest(), MoveToFolderFromContextMenuTest())
  private var generators: YSArray<MBTTestGenerator> = YSArray()
  private var logger: Logger
  public init(_ logger: Logger) {
    self.logger = logger
  }

  @discardableResult
  open class func failsBecauseBugInApp(_ test: MBTTest) -> Bool {
    return shouldBeFixedInApp.map {
      t in
      t.description
    }.includes(test.description)
  }

  @discardableResult
  open func getAllTests() -> YSArray<MBTTest> {
    let testToDebugSnapshot: MBTTest! = TestsRegistry.testToDebug
    if testToDebugSnapshot != nil {
      return YSArray(testToDebugSnapshot)
    }
    let tests = self.tests
    for generator in generators {
      for test in generator.generateTests() {
        tests.push(test)
      }
    }
    return tests
  }
}
