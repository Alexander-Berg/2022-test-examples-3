{
    "test.test_get_lab_segment_table_columns_with_id_types": [
        {
            "columns": [
                {
                    "idTypes": [
                        "crypta_id",
                        "phone",
                        "puid"
                    ],
                    "name": "crypta_id"
                },
                {
                    "idTypes": [
                        "client_id",
                        "crypta_id",
                        "login",
                        "phone",
                        "puid"
                    ],
                    "name": "different"
                }
            ]
        }
    ],
    "test_segment.test_add_segment": {
        "response": {
            "description": "desc",
            "name": "test segment",
            "parentId": "segment-test",
            "tickets": [
                "CRYPTA-1"
            ],
            "type": "HEURISTIC"
        },
        "segment": {
            "description_ru": "desc",
            "name_ru": "test segment",
            "parent_id": "segment-test",
            "ticket": "CRYPTA-1",
            "type": "HEURISTIC"
        }
    },
    "test_segment.test_add_segment_bad_description_ru[    ]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "    ",
                    "message": "must not be blank",
                    "name": "descriptionRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_description_ru[None]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "message": "must not be blank",
                    "name": "descriptionRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_description_ru[]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "",
                    "message": "must not be blank",
                    "name": "descriptionRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_name_ru[    ]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "    ",
                    "message": "must not be blank",
                    "name": "nameRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_name_ru[None]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "message": "must not be blank",
                    "name": "nameRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_name_ru[]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "",
                    "message": "must not be blank",
                    "name": "nameRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_parent_id[   ]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "   ",
                    "message": "must not be blank",
                    "name": "parentId"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_parent_id[None]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "message": "must not be blank",
                    "name": "parentId"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_parent_id[]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "",
                    "message": "must not be blank",
                    "name": "parentId"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_parent_id[test]": {
        "response": {
            "code": "NOT_FOUND",
            "message": "Parent segment with id test is not found"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_responsible[   ]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Responsible must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_responsible[]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Responsible must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_stakeholder[   ]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Stakeholder must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_stakeholder[]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Stakeholder must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_ticket[   ]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Ticket must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_ticket[None]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": [],
                    "message": "must not be empty",
                    "name": "tickets"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_bad_ticket[]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Ticket must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_group[None]": {
        "response": {
            "description": "desc",
            "name": "test segment",
            "parentId": "root",
            "tickets": null,
            "type": null
        },
        "segment": {
            "description_ru": "desc",
            "name_ru": "test segment",
            "parent_id": "root",
            "ticket": "CRYPTR-46",
            "type": "GROUP"
        }
    },
    "test_segment.test_add_segment_group[root]": {
        "response": {
            "description": "desc",
            "name": "test segment",
            "parentId": "root",
            "tickets": null,
            "type": null
        },
        "segment": {
            "description_ru": "desc",
            "name_ru": "test segment",
            "parent_id": "root",
            "ticket": "CRYPTR-46",
            "type": "GROUP"
        }
    },
    "test_segment.test_add_segment_group_bad_description_ru[   ]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "   ",
                    "message": "must not be blank",
                    "name": "descriptionRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_group_bad_description_ru[]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "",
                    "message": "must not be blank",
                    "name": "descriptionRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_group_bad_name_ru[   ]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "   ",
                    "message": "must not be blank",
                    "name": "nameRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_group_bad_name_ru[]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "",
                    "message": "must not be blank",
                    "name": "nameRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_group_bad_parent_id[   ]": {
        "response": {
            "message": "Unknown parent groupId, segment group not created"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_group_bad_parent_id[]": {
        "response": {
            "message": "Unknown parent groupId, segment group not created"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_segment_group_bad_parent_id[test]": {
        "response": {
            "message": "Unknown parent groupId, segment group not created"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_user_segment": {
        "response": {
            "description": "desc",
            "name": "test segment",
            "parentId": "root-users",
            "tickets": [
                "CRYPTA-1"
            ],
            "type": "USER_SEGMENT"
        },
        "segment": {
            "description_ru": "desc",
            "name_ru": "test segment",
            "parent_id": "root-users",
            "ticket": "CRYPTA-1",
            "type": "USER_SEGMENT"
        }
    },
    "test_segment.test_add_user_segment_bad_description_ru[    ]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "    ",
                    "message": "must not be blank",
                    "name": "descriptionRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_user_segment_bad_description_ru[None]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "message": "must not be blank",
                    "name": "descriptionRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_user_segment_bad_description_ru[]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "",
                    "message": "must not be blank",
                    "name": "descriptionRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_user_segment_bad_name_ru[    ]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "    ",
                    "message": "must not be blank",
                    "name": "nameRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_user_segment_bad_name_ru[None]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "message": "must not be blank",
                    "name": "nameRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_user_segment_bad_name_ru[]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": "",
                    "message": "must not be blank",
                    "name": "nameRu"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_user_segment_bad_ticket[   ]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Ticket must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_add_user_segment_bad_ticket[None]": {
        "response": {
            "message": "Parameter validation failed",
            "violations": [
                {
                    "invalidValue": [],
                    "message": "must not be empty",
                    "name": "tickets"
                }
            ]
        },
        "segment": "Not found"
    },
    "test_segment.test_add_user_segment_bad_ticket[]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Ticket must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_get_segment[segment-test]": {
        "response": {
            "description": "",
            "name": "",
            "parentId": "root",
            "tickets": [
                "CRYPTA-1564"
            ],
            "type": "CRYPTA_SEGMENT"
        },
        "segment": {
            "description_ru": "",
            "name_ru": "",
            "parent_id": "root",
            "ticket": "CRYPTA-1564",
            "type": "CRYPTA_SEGMENT"
        }
    },
    "test_segment.test_get_segment[test]": {
        "response": {
            "message": "Not found"
        },
        "segment": "Not found"
    },
    "test_segment.test_update_segment_description[   ]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Description must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_update_segment_description[]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Description must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_update_segment_description[new description]": {
        "response": {
            "description": "new description",
            "name": "name",
            "parentId": "root",
            "tickets": [
                "CRYPTA-1564"
            ],
            "type": "CRYPTA_SEGMENT"
        },
        "segment": {
            "description_ru": "new description",
            "name_ru": "name",
            "parent_id": "root",
            "ticket": "CRYPTA-1564",
            "type": "CRYPTA_SEGMENT"
        }
    },
    "test_segment.test_update_segment_description_not_found": {
        "response": {
            "message": "Not found"
        },
        "segment": "Not found"
    },
    "test_segment.test_update_segment_name[   ]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Name must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_update_segment_name[]": {
        "response": {
            "code": "VALIDATION_FAILED",
            "message": "Name must not be blank"
        },
        "segment": "Not found"
    },
    "test_segment.test_update_segment_name[new name]": {
        "response": {
            "description": "desc",
            "name": "new name",
            "parentId": "root",
            "tickets": [
                "CRYPTA-1564"
            ],
            "type": "CRYPTA_SEGMENT"
        },
        "segment": {
            "description_ru": "desc",
            "name_ru": "new name",
            "parent_id": "root",
            "ticket": "CRYPTA-1564",
            "type": "CRYPTA_SEGMENT"
        }
    },
    "test_segment.test_update_segment_name_not_found": {
        "response": {
            "message": "Not found"
        },
        "segment": "Not found"
    },
    "test_segment_export.test_add_segment_export[false]": {
        "coverage_bigb_timestamp": 0,
        "coverage_bigb_value": 0,
        "coverage_profiles_timestamp": 0,
        "coverage_profiles_value": 0,
        "export_keyword_id": 557,
        "export_segment_id": 0,
        "export_to_bb": true,
        "export_type_id": "yandexuid",
        "expression": null,
        "id": "export-id",
        "lal": null,
        "next_activity_check_timestamp": 0,
        "rule_has_errors": false,
        "rule_id": null,
        "segment_id": "segment-test",
        "state": "CREATED",
        "type": "DEFAULT"
    },
    "test_segment_export.test_add_segment_export[true]": {
        "coverage_bigb_timestamp": 0,
        "coverage_bigb_value": 0,
        "coverage_profiles_timestamp": 0,
        "coverage_profiles_value": 0,
        "export_keyword_id": 557,
        "export_segment_id": 0,
        "export_to_bb": true,
        "export_type_id": "crypta_id",
        "expression": null,
        "id": "export-id",
        "lal": null,
        "next_activity_check_timestamp": 0,
        "rule_has_errors": false,
        "rule_id": null,
        "segment_id": "segment-test",
        "state": "CREATED",
        "type": "DEFAULT"
    },
    "test_segment_export.test_get_segment_export": {
        "coverages": {
            "bigb": {
                "timestamp": 0,
                "value": 0
            },
            "profiles": {
                "timestamp": 0,
                "value": 0
            }
        },
        "exportToBb": true,
        "exportTypeId": "yandexuid",
        "expressions": [],
        "fullExpressions": [],
        "hasExpressionErrors": false,
        "id": "export-test0001",
        "keywordId": 557,
        "lal": "",
        "nextActivityCheckTimestamp": 0,
        "ruleHasErrors": false,
        "ruleId": "",
        "segmentId": 0,
        "state": "CREATED",
        "tags": [],
        "type": "HEURISTIC"
    },
    "test_update_next_activity_check_timestamp.test_update_next_activity_check_timestamp": {
        "coverages": {
            "bigb": {
                "timestamp": 0,
                "value": 0
            },
            "profiles": {
                "timestamp": 0,
                "value": 0
            }
        },
        "exportToBb": true,
        "exportTypeId": "yandexuid",
        "expressions": [],
        "fullExpressions": [],
        "hasExpressionErrors": false,
        "id": "export-1",
        "keywordId": 557,
        "lal": "",
        "nextActivityCheckTimestamp": 1657549375,
        "ruleHasErrors": false,
        "ruleId": "",
        "segmentId": 12000001,
        "state": "CREATED",
        "tags": [],
        "type": "HEURISTIC"
    }
}
