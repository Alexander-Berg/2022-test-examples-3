// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Base Menu check menu click 1`] = `
<div
  className="menu_block"
>
  <div
    className="interactive menu_title_container  "
    id="my_chats"
    onClick={[Function]}
  >
    <Component
      className="my_chats"
      size="l"
    />
    <span>
      Мои 
    </span>
    <strong>
      10
    </strong>
  </div>
  <div
    className="menu_item interactive "
    key="0"
    onClick={[Function]}
  >
    <div
      onClick={[Function]}
    >
      <Memo()
        chatsCount={10}
        isImportant={false}
      />
    </div>
    <span
      className="menu_item_title "
      title="Тасочка"
    >
      Тасочка
    </span>
    <span
      className="count"
    >
      <span>
        10
      </span>
    </span>
  </div>
  <div
    className="menu_item interactive "
    key="1"
    onClick={[Function]}
  >
    <div
      onClick={[Function]}
    >
      <Memo()
        chatsCount={5}
        isImportant={false}
      />
    </div>
    <span
      className="menu_item_title "
      title="Тасочка1"
    >
      Тасочка1
    </span>
    <span
      className="count"
    >
      <span>
        5
      </span>
    </span>
  </div>
</div>
`;

exports[`Base Menu correct render 1`] = `
<div
  className="menu_block"
>
  <div
    className="interactive menu_title_container  "
    id="my_chats"
    onClick={[Function]}
  >
    <Component
      className="my_chats"
      size="l"
    />
    <span>
      Мои 
    </span>
    <strong>
      10
    </strong>
  </div>
  <div
    className="menu_item interactive "
    key="0"
    onClick={[Function]}
  >
    <div
      onClick={[Function]}
    >
      <Memo()
        chatsCount={10}
        isImportant={false}
      />
    </div>
    <span
      className="menu_item_title "
      title="Тасочка"
    >
      Тасочка
    </span>
    <span
      className="count"
    >
      <span>
        10
      </span>
    </span>
  </div>
  <div
    className="menu_item interactive "
    key="1"
    onClick={[Function]}
  >
    <div
      onClick={[Function]}
    >
      <Memo()
        chatsCount={5}
        isImportant={false}
      />
    </div>
    <span
      className="menu_item_title "
      title="Тасочка1"
    >
      Тасочка1
    </span>
    <span
      className="count"
    >
      <span>
        5
      </span>
    </span>
  </div>
</div>
`;

exports[`Lines list correct lines list render 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Memo()
    additionalControls={
      Array [
        Object {
          "onClick": [Function],
          "state": Object {
            "isLoading": false,
          },
          "type": "UPDATE_BUTTON",
        },
      ]
    }
    additionalMenus={Array []}
    linesListData={
      Array [
        Object {
          "data": Array [
            "my_chats",
            Object {
              "info": Object {
                "totalItems": 10,
              },
              "items": Array [
                Object {
                  "chats_count": 10,
                  "display_name": "Тасочка",
                  "name": "task",
                },
                Object {
                  "chats_count": 5,
                  "display_name": "Тасочка1",
                  "name": "task1",
                },
              ],
            },
          ],
          "onFavClick": [Function],
          "onMenuClick": [Function],
          "selectedItems": Object {
            "menuItem": null,
            "subMenuItem": null,
          },
        },
      ]
    }
    onSelectLine={[Function]}
    openFavouritesConfirm={[Function]}
    selectedItems={
      Object {
        "menuItem": "my_chats",
        "submenuItem": "task",
      }
    }
  >
    <div
      className="component"
    >
      <div
        className="update"
      >
        <Link
          className="update_button"
          onClick={[Function]}
        >
          <a
            className="link link_interactive update_button "
            href="/"
            onClick={[Function]}
            rel="noopener"
          >
            Обновить
          </a>
        </Link>
      </div>
      <Memo()
        data={
          Array [
            "0",
            Object {
              "data": Array [
                "my_chats",
                Object {
                  "info": Object {
                    "totalItems": 10,
                  },
                  "items": Array [
                    Object {
                      "chats_count": 10,
                      "display_name": "Тасочка",
                      "name": "task",
                    },
                    Object {
                      "chats_count": 5,
                      "display_name": "Тасочка1",
                      "name": "task1",
                    },
                  ],
                },
              ],
              "onFavClick": [Function],
              "onMenuClick": [Function],
              "selectedItems": Object {
                "menuItem": null,
                "subMenuItem": null,
              },
            },
          ]
        }
        isLoading={false}
        key="0"
        onFavClick={[Function]}
        onMenuClick={[Function]}
        selectedItems={
          Object {
            "menuItem": "my_chats",
            "submenuItem": "task",
          }
        }
      >
        <div
          className="menu_block"
        >
          <div
            className="interactive menu_title_containerempty  "
            id="0"
            onClick={[Function]}
          >
            <Component
              className="0"
              size="l"
            >
              <icon-mock
                className="star size_l 0"
              />
            </Component>
            <span />
            <strong />
          </div>
        </div>
      </Memo()>
    </div>
  </Memo()>
</Provider>
`;

exports[`Lines list has additional menu 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Memo()
    additionalControls={
      Array [
        Object {
          "onClick": [Function],
          "state": Object {
            "isLoading": false,
          },
          "type": "UPDATE_BUTTON",
        },
      ]
    }
    additionalMenus={
      Array [
        Object {
          "onClick": [Function],
          "title": "Архив",
          "type": "archive_chats",
        },
      ]
    }
    linesListData={
      Array [
        Object {
          "data": Array [
            "my_chats",
            Object {
              "info": Object {
                "totalItems": 10,
              },
              "items": Array [
                Object {
                  "chats_count": 10,
                  "display_name": "Тасочка",
                  "name": "task",
                },
                Object {
                  "chats_count": 5,
                  "display_name": "Тасочка1",
                  "name": "task1",
                },
              ],
            },
          ],
          "onFavClick": [Function],
          "onMenuClick": [Function],
          "selectedItems": Object {
            "menuItem": null,
            "subMenuItem": null,
          },
        },
      ]
    }
    onSelectLine={[Function]}
    openFavouritesConfirm={[Function]}
    selectedItems={
      Object {
        "menuItem": "my_chats",
        "submenuItem": "task",
      }
    }
  >
    <div
      className="component"
    >
      <div
        className="update"
      >
        <Link
          className="update_button"
          onClick={[Function]}
        >
          <a
            className="link link_interactive update_button "
            href="/"
            onClick={[Function]}
            rel="noopener"
          >
            Обновить
          </a>
        </Link>
      </div>
      <Memo()
        data={
          Array [
            "0",
            Object {
              "data": Array [
                "my_chats",
                Object {
                  "info": Object {
                    "totalItems": 10,
                  },
                  "items": Array [
                    Object {
                      "chats_count": 10,
                      "display_name": "Тасочка",
                      "name": "task",
                    },
                    Object {
                      "chats_count": 5,
                      "display_name": "Тасочка1",
                      "name": "task1",
                    },
                  ],
                },
              ],
              "onFavClick": [Function],
              "onMenuClick": [Function],
              "selectedItems": Object {
                "menuItem": null,
                "subMenuItem": null,
              },
            },
          ]
        }
        isLoading={false}
        key="0"
        onFavClick={[Function]}
        onMenuClick={[Function]}
        selectedItems={
          Object {
            "menuItem": "my_chats",
            "submenuItem": "task",
          }
        }
      >
        <div
          className="menu_block"
        >
          <div
            className="interactive menu_title_containerempty  "
            id="0"
            onClick={[Function]}
          >
            <Component
              className="0"
              size="l"
            >
              <icon-mock
                className="star size_l 0"
              />
            </Component>
            <span />
            <strong />
          </div>
        </div>
      </Memo()>
      <div
        className="interactive  menu_title"
        id="archive_chats"
        key="archive_chats"
        onClick={[Function]}
      >
        <Component
          className="archive_chats"
          size="l"
        >
          <icon-mock
            className="star size_l archive_chats"
          />
        </Component>
        Архив
      </div>
    </div>
  </Memo()>
</Provider>
`;
