<DaemonConfig>
    LoggerType : ${LOG_DIR}current-global-telematics${LOG_POSTFIX}
    LogLevel : ${LOG_LEVEL or 6}
    LogRotation : false
    StdOut: ${LOG_DIR}current-telematics-stdout${LOG_POSTFIX}
    StdErr: ${LOG_DIR}current-telematics-stderr${LOG_POSTFIX}
    <Controller>
        ClientTimeout : 200
        ConfigsControl : false
        ConfigsRoot : ${WorkDir}/configs/
        Log : ${LOG_DIR}current-controller-telematics${LOG_POSTFIX}
        Port : ${BasePort + 3}
        StateRoot : ${StateRootDir and StateRootDir or _BIN_DIRECTORY}/controller_state
        Threads : 4
    </Controller>
</DaemonConfig>
<Server>
    EventLog: ${LOG_DIR}current-unified-client${LOG_POSTFIX}
    UnifiedAgentEventLog: unix://${WorkDir}/unified_agent.sock
    RigorMortisThreshold: 60
    PingerInterval: 11
    SensorInterval: 7200
    FastDataInterval: 128
    LogLoaderInterval: 1200
    SimSwitcherInterval: 60
    KnownBeaconsSynchronizationInterval: 60
    TraceInputTraffic: true
    ProtocolType: vega
    <Sensors>
        # sersor: code [update period]
        device_type: 1
        mcu_firmware: 2
        input_buffer: 7
        gps_jammed: 116
        gps_spoof: 218
        gps_active: 219

        horn_dout3: 1063 1200s

        mcc: 2001
        mnc: 2002
        lac: 2003
        cellid: 2004
        gsm_signal_level: 2005
        gsm_base_stations: 2017 600s

        fuel_level_p: 2107 300s
        engine_on: 2211

        driver_door: 2213
        passenger_door: 2214
        left_door: 2215
        right_door: 2216
        hood: 2217
        trunk: 2218
        ble_passkey: 5070-1 300s
        ble_mac: 33003 300s
    </Sensors>
    <ClientServer>
        Port: ${ BasePort + 1 }
        Threads: ${ NCPU }
    </ClientServer>
    <TelematicsServer>
        Port: 16000
        Threads: ${ 4 * NCPU }
    </TelematicsServer>
    <Pusher>
        Endpoint: https://testing.carsharing.yandex.net/api/telematics/push
        DestinationClientId: 2010062
        SensorIds: engine_on
        Type: Backend
    </Pusher>
    <Pusher>
        Endpoint: https://testing.telematics-cache-api.carsharing.yandex.net/api/telematics-cache-api/v1/data/bulk-store
        TrafficPercent: ${TRAFFIC_PERCENT or 0}
        Type: TelematicsCacheApi
    </Pusher>
    <Pusher>
        Type: SaasPusher
        ServiceName: drive_telematics
        TvmSource: 2017773
        TvmToken: ${TVM_TOKEN}
        TvmDestination: 2001059
        MaxInFlightCount: 1500
        NoWriteQueue: true
        Codec: LZOP
        ThreadsBlockingMode: false
        <SearchMapInputSettings>
            Ctype: prestable_drive
            DMPort: 80
            DMHost: saas-dm-proxy.n.yandex-team.ru
            StaticaPort: 80
            StaticaHost: saas-searchmap.s3.mds.yandex.net
            StaticaQuery: prestable_drive
        </SearchMapInputSettings>
    </Pusher>
    <Locator>
        LBSToken: ${LBS_TOKEN}
        LinkerHost: saas-searchproxy-maps.yandex.net
        SensorHost: prestable-drive.saas.yandex.net
        SensorService: drive_telematics
        SensorAPIName: saas_sensors
        SensorPort: 80
        SensorSpMetaSearch: multi_proxy
        SensorSaasTvmId: 2026977
        TracksHost: saas-searchproxy-maps-prestable.yandex.net
        GeocoderHost: addrs-testing.search.yandex.net
        GeocoderClientId: 2008261
        EnableClusterization: false
        LinkEnableProjection: true
    </Locator>
    <Tvm>
        Token: ${TVM_TOKEN}
        SelfClientId: 2017773
        AcceptedClientIds: 2008771,2010062,2027033
    </Tvm>
    <Validation>
        FilterOdometerEnabled: false
        FilterSkipZeroEnabled: false
    </Validation>
    <Storage>
        Type: Postgres
        <Postgres>
            ConnectionString: host=sas-4ocxw7u2b6apa84v.db.yandex.net,vla-1j1mus81r3kbts1c.db.yandex.net,man-pwpo1pl1bb0ogpky.db.yandex.net dbname=test_drivesmall_db port=6432 target_session_attrs=read-write user=robot_carsharing password=${AUX_DB_PASSWORD}
            TableName: drive_telematics_prestable_misc
        </Postgres>
    </Storage>
    <Executor>
        <Queue>
            QueueIdentifier: QueueDrivePrestable
            Type: VStorage
            <Storage>
                Type: Postgres
                <Postgres>
                    ConnectionString: host=sas-4ocxw7u2b6apa84v.db.yandex.net,vla-1j1mus81r3kbts1c.db.yandex.net,man-pwpo1pl1bb0ogpky.db.yandex.net dbname=test_drivesmall_db port=6432 target_session_attrs=read-write user=robot_carsharing password=${AUX_DB_PASSWORD}
                    TableName: drive_telematics_prestable_queue
                    AgeForKillConnection: 30s
                </Postgres>
            </Storage>
        </Queue>
        <Storage>
            Type: VStorage
            <Storage>
                Type: Postgres
                <Postgres>
                    ConnectionString: host=sas-4ocxw7u2b6apa84v.db.yandex.net,vla-1j1mus81r3kbts1c.db.yandex.net,man-pwpo1pl1bb0ogpky.db.yandex.net dbname=test_drivesmall_db port=6432 target_session_attrs=read-write user=robot_carsharing password=${AUX_DB_PASSWORD}
                    TableName: drive_telematics_prestable_storage
                    AgeForKillConnection: 30s
                </Postgres>
            </Storage>
        </Storage>
    </Executor>
</Server>
