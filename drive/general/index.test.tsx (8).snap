// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LeftMenu Should render with active=false 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(LeftMenu)
    active={false}
    toggleSideBar={[MockFunction]}
  >
    <LeftMenu
      Lang={
        Object {
          "currentLang": "eng",
          "localizations": Object {
            "admin_settings_home": Object {
              "eng": Object {
                "value": "Home",
              },
              "rus": Object {
                "value": "Дом",
              },
            },
            "admin_settings_major": Object {
              "eng": Object {
                "value": "Major",
              },
              "rus": Object {
                "value": "Major",
              },
            },
            "admin_settings_service": Object {
              "eng": Object {
                "value": "Major-TO",
              },
              "rus": Object {
                "value": "Major-TO",
              },
            },
            "admin_settings_storage": Object {
              "eng": Object {
                "value": "Storage",
              },
              "rus": Object {
                "value": "Шины (схрон)",
              },
            },
            "admin_settings_user-tags": Object {
              "eng": Object {
                "value": "Clients",
              },
              "rus": Object {
                "value": "Клиенты",
              },
            },
            "admin_settings_wheels": Object {
              "eng": Object {
                "value": "Wheels",
              },
              "rus": Object {
                "value": "Колёса",
              },
            },
          },
        }
      }
      active={false}
      dispatch={[Function]}
      rules={
        Object {
          "major/*": true,
          "major2/*": false,
        }
      }
      toggleSideBar={[MockFunction]}
    >
      <AbstractMenuSideBar
        active={false}
        menuId="menu-main"
        toggleSideBar={[MockFunction]}
      >
        <div
          className="menu menu-main "
          onKeyUp={[Function]}
          tabIndex={-1}
        />
      </AbstractMenuSideBar>
    </LeftMenu>
  </Connect(LeftMenu)>
</Provider>
`;

exports[`LeftMenu Should render with active=true 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(LeftMenu)
    active={true}
    toggleSideBar={[MockFunction]}
  >
    <LeftMenu
      Lang={
        Object {
          "currentLang": "eng",
          "localizations": Object {
            "admin_settings_home": Object {
              "eng": Object {
                "value": "Home",
              },
              "rus": Object {
                "value": "Дом",
              },
            },
            "admin_settings_major": Object {
              "eng": Object {
                "value": "Major",
              },
              "rus": Object {
                "value": "Major",
              },
            },
            "admin_settings_service": Object {
              "eng": Object {
                "value": "Major-TO",
              },
              "rus": Object {
                "value": "Major-TO",
              },
            },
            "admin_settings_storage": Object {
              "eng": Object {
                "value": "Storage",
              },
              "rus": Object {
                "value": "Шины (схрон)",
              },
            },
            "admin_settings_user-tags": Object {
              "eng": Object {
                "value": "Clients",
              },
              "rus": Object {
                "value": "Клиенты",
              },
            },
            "admin_settings_wheels": Object {
              "eng": Object {
                "value": "Wheels",
              },
              "rus": Object {
                "value": "Колёса",
              },
            },
          },
        }
      }
      active={true}
      dispatch={[Function]}
      rules={
        Object {
          "major/*": true,
          "major2/*": false,
        }
      }
      toggleSideBar={[MockFunction]}
    >
      <AbstractMenuSideBar
        active={true}
        menuId="menu-main"
        toggleSideBar={[MockFunction]}
      >
        <div
          className="menu menu-main active"
          onKeyUp={[Function]}
          tabIndex={-1}
        >
          <div
            className="left_side"
          >
            <Input
              className="searchInput"
              dontShowPlaceholderIfFocused={true}
              onChange={[Function]}
              placeholder="Фильтр"
              value=""
            >
              <div
                className="input  searchInput    "
              >
                <div
                  className="input_container "
                  onFocus={[Function]}
                  tabIndex={0}
                >
                  <input
                    className=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onKeyUp={[Function]}
                    placeholder="Фильтр  "
                    type=""
                    value=""
                  />
                  <div
                    className="controls controlsFocusedNoPlaceholder"
                  >
                    <Memo()
                      onClick={[Function]}
                    >
                      <div
                        className="close "
                        onClick={[Function]}
                      />
                    </Memo()>
                  </div>
                </div>
              </div>
            </Input>
            <MenuItem
              filterValue=""
              href="#"
              resetFilterValue={[Function]}
              t={
                Translate {
                  "_translateText": Object {
                    "currentLang": "eng",
                    "localizations": Object {
                      "admin_settings_home": Object {
                        "eng": Object {
                          "value": "Home",
                        },
                        "rus": Object {
                          "value": "Дом",
                        },
                      },
                      "admin_settings_major": Object {
                        "eng": Object {
                          "value": "Major",
                        },
                        "rus": Object {
                          "value": "Major",
                        },
                      },
                      "admin_settings_service": Object {
                        "eng": Object {
                          "value": "Major-TO",
                        },
                        "rus": Object {
                          "value": "Major-TO",
                        },
                      },
                      "admin_settings_storage": Object {
                        "eng": Object {
                          "value": "Storage",
                        },
                        "rus": Object {
                          "value": "Шины (схрон)",
                        },
                      },
                      "admin_settings_user-tags": Object {
                        "eng": Object {
                          "value": "Clients",
                        },
                        "rus": Object {
                          "value": "Клиенты",
                        },
                      },
                      "admin_settings_wheels": Object {
                        "eng": Object {
                          "value": "Wheels",
                        },
                        "rus": Object {
                          "value": "Колёса",
                        },
                      },
                    },
                  },
                }
              }
              toggleMenu={[MockFunction]}
              uri="home"
            >
              <div>
                <Link
                  className="menu-item"
                  disablePreventDefault={true}
                  href="#"
                  onClick={[Function]}
                >
                  <a
                    className="link link_interactive menu-item "
                    href="#"
                    onClick={[Function]}
                    rel="noopener"
                  >
                    <span>
                      <span
                        className="found"
                      />
                      Home
                    </span>
                  </a>
                </Link>
              </div>
            </MenuItem>
            <Component
              filterValue=""
              resetFilterValue={[Function]}
              rules={
                Object {
                  "major/*": true,
                  "major2/*": false,
                }
              }
              t={
                Translate {
                  "_translateText": Object {
                    "currentLang": "eng",
                    "localizations": Object {
                      "admin_settings_home": Object {
                        "eng": Object {
                          "value": "Home",
                        },
                        "rus": Object {
                          "value": "Дом",
                        },
                      },
                      "admin_settings_major": Object {
                        "eng": Object {
                          "value": "Major",
                        },
                        "rus": Object {
                          "value": "Major",
                        },
                      },
                      "admin_settings_service": Object {
                        "eng": Object {
                          "value": "Major-TO",
                        },
                        "rus": Object {
                          "value": "Major-TO",
                        },
                      },
                      "admin_settings_storage": Object {
                        "eng": Object {
                          "value": "Storage",
                        },
                        "rus": Object {
                          "value": "Шины (схрон)",
                        },
                      },
                      "admin_settings_user-tags": Object {
                        "eng": Object {
                          "value": "Clients",
                        },
                        "rus": Object {
                          "value": "Клиенты",
                        },
                      },
                      "admin_settings_wheels": Object {
                        "eng": Object {
                          "value": "Wheels",
                        },
                        "rus": Object {
                          "value": "Колёса",
                        },
                      },
                    },
                  },
                }
              }
              toggleMenu={[MockFunction]}
            >
              <MenuItem
                filterValue=""
                href="#/major"
                key="14"
                resetFilterValue={[Function]}
                t={
                  Translate {
                    "_translateText": Object {
                      "currentLang": "eng",
                      "localizations": Object {
                        "admin_settings_home": Object {
                          "eng": Object {
                            "value": "Home",
                          },
                          "rus": Object {
                            "value": "Дом",
                          },
                        },
                        "admin_settings_major": Object {
                          "eng": Object {
                            "value": "Major",
                          },
                          "rus": Object {
                            "value": "Major",
                          },
                        },
                        "admin_settings_service": Object {
                          "eng": Object {
                            "value": "Major-TO",
                          },
                          "rus": Object {
                            "value": "Major-TO",
                          },
                        },
                        "admin_settings_storage": Object {
                          "eng": Object {
                            "value": "Storage",
                          },
                          "rus": Object {
                            "value": "Шины (схрон)",
                          },
                        },
                        "admin_settings_user-tags": Object {
                          "eng": Object {
                            "value": "Clients",
                          },
                          "rus": Object {
                            "value": "Клиенты",
                          },
                        },
                        "admin_settings_wheels": Object {
                          "eng": Object {
                            "value": "Wheels",
                          },
                          "rus": Object {
                            "value": "Колёса",
                          },
                        },
                      },
                    },
                  }
                }
                tabs={
                  Array [
                    Object {
                      "order": 1,
                      "ui": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "uri": "wheels",
                    },
                    Object {
                      "order": 1,
                      "ui": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "uri": "service",
                    },
                    Object {
                      "order": 1,
                      "ui": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "uri": "storage",
                    },
                  ]
                }
                toggleMenu={[MockFunction]}
                uri="major"
              >
                <div>
                  <Link
                    className="menu-item"
                    disablePreventDefault={true}
                    href="#/major"
                    onClick={[Function]}
                  >
                    <a
                      className="link link_interactive menu-item "
                      href="#/major"
                      onClick={[Function]}
                      rel="noopener"
                    >
                      <span>
                        <span
                          className="found"
                        />
                        Major
                      </span>
                    </a>
                  </Link>
                  <Link
                    className="menu-sub-item"
                    disablePreventDefault={true}
                    href="#/major/wheels"
                    key="0"
                    onClick={[Function]}
                  >
                    <a
                      className="link link_interactive menu-sub-item "
                      href="#/major/wheels"
                      onClick={[Function]}
                      rel="noopener"
                    >
                      <span>
                        <span
                          className="found"
                        />
                        Wheels
                      </span>
                    </a>
                  </Link>
                  <Link
                    className="menu-sub-item"
                    disablePreventDefault={true}
                    href="#/major/service"
                    key="1"
                    onClick={[Function]}
                  >
                    <a
                      className="link link_interactive menu-sub-item "
                      href="#/major/service"
                      onClick={[Function]}
                      rel="noopener"
                    >
                      <span>
                        <span
                          className="found"
                        />
                        Major-TO
                      </span>
                    </a>
                  </Link>
                  <Link
                    className="menu-sub-item"
                    disablePreventDefault={true}
                    href="#/major/storage"
                    key="2"
                    onClick={[Function]}
                  >
                    <a
                      className="link link_interactive menu-sub-item "
                      href="#/major/storage"
                      onClick={[Function]}
                      rel="noopener"
                    >
                      <span>
                        <span
                          className="found"
                        />
                        Storage
                      </span>
                    </a>
                  </Link>
                </div>
              </MenuItem>
            </Component>
          </div>
        </div>
      </AbstractMenuSideBar>
    </LeftMenu>
  </Connect(LeftMenu)>
</Provider>
`;

exports[`LeftMenu Should render with empty active props 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(LeftMenu)
    toggleSideBar={[MockFunction]}
  >
    <LeftMenu
      Lang={
        Object {
          "currentLang": "eng",
          "localizations": Object {
            "admin_settings_home": Object {
              "eng": Object {
                "value": "Home",
              },
              "rus": Object {
                "value": "Дом",
              },
            },
            "admin_settings_major": Object {
              "eng": Object {
                "value": "Major",
              },
              "rus": Object {
                "value": "Major",
              },
            },
            "admin_settings_service": Object {
              "eng": Object {
                "value": "Major-TO",
              },
              "rus": Object {
                "value": "Major-TO",
              },
            },
            "admin_settings_storage": Object {
              "eng": Object {
                "value": "Storage",
              },
              "rus": Object {
                "value": "Шины (схрон)",
              },
            },
            "admin_settings_user-tags": Object {
              "eng": Object {
                "value": "Clients",
              },
              "rus": Object {
                "value": "Клиенты",
              },
            },
            "admin_settings_wheels": Object {
              "eng": Object {
                "value": "Wheels",
              },
              "rus": Object {
                "value": "Колёса",
              },
            },
          },
        }
      }
      dispatch={[Function]}
      rules={
        Object {
          "major/*": true,
          "major2/*": false,
        }
      }
      toggleSideBar={[MockFunction]}
    >
      <AbstractMenuSideBar
        active={false}
        menuId="menu-main"
        toggleSideBar={[MockFunction]}
      >
        <div
          className="menu menu-main "
          onKeyUp={[Function]}
          tabIndex={-1}
        />
      </AbstractMenuSideBar>
    </LeftMenu>
  </Connect(LeftMenu)>
</Provider>
`;

exports[`LeftMenu Should render with empty localization object 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(LeftMenu)
    active={true}
    toggleSideBar={[MockFunction]}
  >
    <LeftMenu
      Lang={
        Object {
          "currentLang": "eng",
          "localizations": null,
        }
      }
      active={true}
      dispatch={[Function]}
      rules={
        Object {
          "major/*": true,
          "major2/*": false,
        }
      }
      toggleSideBar={[MockFunction]}
    >
      <AbstractMenuSideBar
        active={true}
        menuId="menu-main"
        toggleSideBar={[MockFunction]}
      >
        <div
          className="menu menu-main active"
          onKeyUp={[Function]}
          tabIndex={-1}
        >
          <div
            className="left_side"
          >
            <Input
              className="searchInput"
              dontShowPlaceholderIfFocused={true}
              onChange={[Function]}
              placeholder="Фильтр"
              value=""
            >
              <div
                className="input  searchInput    "
              >
                <div
                  className="input_container "
                  onFocus={[Function]}
                  tabIndex={0}
                >
                  <input
                    className=""
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onKeyUp={[Function]}
                    placeholder="Фильтр  "
                    type=""
                    value=""
                  />
                  <div
                    className="controls controlsFocusedNoPlaceholder"
                  >
                    <Memo()
                      onClick={[Function]}
                    >
                      <div
                        className="close "
                        onClick={[Function]}
                      />
                    </Memo()>
                  </div>
                </div>
              </div>
            </Input>
            <MenuItem
              filterValue=""
              href="#"
              resetFilterValue={[Function]}
              t={
                Translate {
                  "_translateText": Object {
                    "currentLang": "eng",
                    "localizations": null,
                  },
                }
              }
              toggleMenu={[MockFunction]}
              uri="home"
            >
              <div>
                <Link
                  className="menu-item"
                  disablePreventDefault={true}
                  href="#"
                  onClick={[Function]}
                >
                  <a
                    className="link link_interactive menu-item "
                    href="#"
                    onClick={[Function]}
                    rel="noopener"
                  >
                    <Component
                      textId="admin_settings_home"
                    >
                      <span
                        data-type="translate_error_text"
                      >
                        <sup
                          className="global_error"
                        >
                          *
                        </sup>
                        admin_settings_home
                      </span>
                    </Component>
                  </a>
                </Link>
              </div>
            </MenuItem>
            <Component
              filterValue=""
              resetFilterValue={[Function]}
              rules={
                Object {
                  "major/*": true,
                  "major2/*": false,
                }
              }
              t={
                Translate {
                  "_translateText": Object {
                    "currentLang": "eng",
                    "localizations": null,
                  },
                }
              }
              toggleMenu={[MockFunction]}
            >
              <MenuItem
                filterValue=""
                href="#/major"
                key="14"
                resetFilterValue={[Function]}
                t={
                  Translate {
                    "_translateText": Object {
                      "currentLang": "eng",
                      "localizations": null,
                    },
                  }
                }
                tabs={
                  Array [
                    Object {
                      "order": 1,
                      "ui": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "uri": "wheels",
                    },
                    Object {
                      "order": 1,
                      "ui": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "uri": "service",
                    },
                    Object {
                      "order": 1,
                      "ui": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "uri": "storage",
                    },
                  ]
                }
                toggleMenu={[MockFunction]}
                uri="major"
              >
                <div>
                  <Link
                    className="menu-item"
                    disablePreventDefault={true}
                    href="#/major"
                    onClick={[Function]}
                  >
                    <a
                      className="link link_interactive menu-item "
                      href="#/major"
                      onClick={[Function]}
                      rel="noopener"
                    >
                      <Component
                        textId="admin_settings_major"
                      >
                        <span
                          data-type="translate_error_text"
                        >
                          <sup
                            className="global_error"
                          >
                            *
                          </sup>
                          admin_settings_major
                        </span>
                      </Component>
                    </a>
                  </Link>
                  <Link
                    className="menu-sub-item"
                    disablePreventDefault={true}
                    href="#/major/wheels"
                    key="0"
                    onClick={[Function]}
                  >
                    <a
                      className="link link_interactive menu-sub-item "
                      href="#/major/wheels"
                      onClick={[Function]}
                      rel="noopener"
                    >
                      <Component
                        textId="admin_settings_wheels"
                      >
                        <span
                          data-type="translate_error_text"
                        >
                          <sup
                            className="global_error"
                          >
                            *
                          </sup>
                          admin_settings_wheels
                        </span>
                      </Component>
                    </a>
                  </Link>
                  <Link
                    className="menu-sub-item"
                    disablePreventDefault={true}
                    href="#/major/service"
                    key="1"
                    onClick={[Function]}
                  >
                    <a
                      className="link link_interactive menu-sub-item "
                      href="#/major/service"
                      onClick={[Function]}
                      rel="noopener"
                    >
                      <Component
                        textId="admin_settings_service"
                      >
                        <span
                          data-type="translate_error_text"
                        >
                          <sup
                            className="global_error"
                          >
                            *
                          </sup>
                          admin_settings_service
                        </span>
                      </Component>
                    </a>
                  </Link>
                  <Link
                    className="menu-sub-item"
                    disablePreventDefault={true}
                    href="#/major/storage"
                    key="2"
                    onClick={[Function]}
                  >
                    <a
                      className="link link_interactive menu-sub-item "
                      href="#/major/storage"
                      onClick={[Function]}
                      rel="noopener"
                    >
                      <Component
                        textId="admin_settings_storage"
                      >
                        <span
                          data-type="translate_error_text"
                        >
                          <sup
                            className="global_error"
                          >
                            *
                          </sup>
                          admin_settings_storage
                        </span>
                      </Component>
                    </a>
                  </Link>
                </div>
              </MenuItem>
            </Component>
          </div>
        </div>
      </AbstractMenuSideBar>
    </LeftMenu>
  </Connect(LeftMenu)>
</Provider>
`;

exports[`LeftMenu Should render with empty toggleSideBar props 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(LeftMenu)
    active={false}
  >
    <LeftMenu
      Lang={
        Object {
          "currentLang": "eng",
          "localizations": Object {
            "admin_settings_home": Object {
              "eng": Object {
                "value": "Home",
              },
              "rus": Object {
                "value": "Дом",
              },
            },
            "admin_settings_major": Object {
              "eng": Object {
                "value": "Major",
              },
              "rus": Object {
                "value": "Major",
              },
            },
            "admin_settings_service": Object {
              "eng": Object {
                "value": "Major-TO",
              },
              "rus": Object {
                "value": "Major-TO",
              },
            },
            "admin_settings_storage": Object {
              "eng": Object {
                "value": "Storage",
              },
              "rus": Object {
                "value": "Шины (схрон)",
              },
            },
            "admin_settings_user-tags": Object {
              "eng": Object {
                "value": "Clients",
              },
              "rus": Object {
                "value": "Клиенты",
              },
            },
            "admin_settings_wheels": Object {
              "eng": Object {
                "value": "Wheels",
              },
              "rus": Object {
                "value": "Колёса",
              },
            },
          },
        }
      }
      active={false}
      dispatch={[Function]}
      rules={
        Object {
          "major/*": true,
          "major2/*": false,
        }
      }
    >
      <AbstractMenuSideBar
        active={false}
        menuId="menu-main"
        toggleSideBar={[Function]}
      >
        <div
          className="menu menu-main "
          onKeyUp={[Function]}
          tabIndex={-1}
        />
      </AbstractMenuSideBar>
    </LeftMenu>
  </Connect(LeftMenu)>
</Provider>
`;

exports[`LeftMenu Should render with non valid toggleSideBar props 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(LeftMenu)
    active={false}
    toggleSideBar="string"
  >
    <LeftMenu
      Lang={
        Object {
          "currentLang": "eng",
          "localizations": Object {
            "admin_settings_home": Object {
              "eng": Object {
                "value": "Home",
              },
              "rus": Object {
                "value": "Дом",
              },
            },
            "admin_settings_major": Object {
              "eng": Object {
                "value": "Major",
              },
              "rus": Object {
                "value": "Major",
              },
            },
            "admin_settings_service": Object {
              "eng": Object {
                "value": "Major-TO",
              },
              "rus": Object {
                "value": "Major-TO",
              },
            },
            "admin_settings_storage": Object {
              "eng": Object {
                "value": "Storage",
              },
              "rus": Object {
                "value": "Шины (схрон)",
              },
            },
            "admin_settings_user-tags": Object {
              "eng": Object {
                "value": "Clients",
              },
              "rus": Object {
                "value": "Клиенты",
              },
            },
            "admin_settings_wheels": Object {
              "eng": Object {
                "value": "Wheels",
              },
              "rus": Object {
                "value": "Колёса",
              },
            },
          },
        }
      }
      active={false}
      dispatch={[Function]}
      rules={
        Object {
          "major/*": true,
          "major2/*": false,
        }
      }
      toggleSideBar="string"
    >
      <AbstractMenuSideBar
        active={false}
        menuId="menu-main"
        toggleSideBar="string"
      >
        <div
          className="menu menu-main "
          onKeyUp={[Function]}
          tabIndex={-1}
        />
      </AbstractMenuSideBar>
    </LeftMenu>
  </Connect(LeftMenu)>
</Provider>
`;

exports[`LeftMenu Should render with non valid toggleSideBar props 2`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(LeftMenu)
    active={false}
    toggleSideBar="string"
  >
    <LeftMenu
      Lang={
        Object {
          "currentLang": "eng",
          "localizations": Object {
            "admin_settings_home": Object {
              "eng": Object {
                "value": "Home",
              },
              "rus": Object {
                "value": "Дом",
              },
            },
            "admin_settings_major": Object {
              "eng": Object {
                "value": "Major",
              },
              "rus": Object {
                "value": "Major",
              },
            },
            "admin_settings_service": Object {
              "eng": Object {
                "value": "Major-TO",
              },
              "rus": Object {
                "value": "Major-TO",
              },
            },
            "admin_settings_storage": Object {
              "eng": Object {
                "value": "Storage",
              },
              "rus": Object {
                "value": "Шины (схрон)",
              },
            },
            "admin_settings_user-tags": Object {
              "eng": Object {
                "value": "Clients",
              },
              "rus": Object {
                "value": "Клиенты",
              },
            },
            "admin_settings_wheels": Object {
              "eng": Object {
                "value": "Wheels",
              },
              "rus": Object {
                "value": "Колёса",
              },
            },
          },
        }
      }
      active={false}
      dispatch={[Function]}
      rules={
        Object {
          "major/*": true,
          "major2/*": false,
        }
      }
      toggleSideBar="string"
    >
      <AbstractMenuSideBar
        active={false}
        menuId="menu-main"
        toggleSideBar="string"
      >
        <div
          className="menu menu-main "
          onKeyUp={[Function]}
          tabIndex={-1}
        />
      </AbstractMenuSideBar>
    </LeftMenu>
  </Connect(LeftMenu)>
</Provider>
`;
