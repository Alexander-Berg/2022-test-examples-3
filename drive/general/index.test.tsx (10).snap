// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Webphone buttons Call button - call a client 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)
    client=""
    userInfo={
      Object {
        "id": "1",
        "name": "Test",
      }
    }
  >
    <Component
      callEnded={false}
      callFromWebphone={[Function]}
      client=""
      setCallMetaInfo={[Function]}
      userInfo={
        Object {
          "id": "1",
          "name": "Test",
        }
      }
    >
      <div
        className="callButtonContainer "
      >
        <Component
          client=""
          setCallRecipient={[Function]}
          userId="1"
          userName="  "
        >
          <Component
            buttonClassName="button "
            colorType="positive"
            icon="phone"
            iconClassName=""
            onClick={[Function]}
            text="Позвонить"
          >
            <Button
              className="button "
              colorType="positive"
              onClick={[Function]}
            >
              <button
                className="button positive button "
                onClick={[Function]}
              >
                <span
                  className=""
                >
                  <span
                    className="webphoneButton"
                  >
                    <icon-mock
                      className="webphoneButton_icon "
                    />
                    <span
                      className="webphoneButton_text"
                    >
                      Позвонить
                    </span>
                  </span>
                </span>
              </button>
            </Button>
          </Component>
        </Component>
        <Component
          callSource="default_call_source"
          onSelect={[Function]}
        >
          <Component
            colorType="positive"
            displayArrowIcon={true}
            id="call-source-1"
            initialSelectedValue="default_call_source"
            markIfNonDefaultChoice={true}
            onSelect={[Function]}
            options={
              Array [
                Object {
                  "isDefault": true,
                  "label": "Позвонить на номер",
                  "value": "default_call_source",
                },
                Object {
                  "label": "Позвонить от лица клиента",
                  "value": "custom_call_source",
                },
              ]
            }
          >
            <Component
              className=""
              colorType="positive"
              displayArrowIcon={true}
              popupContent={
                <Unknown
                  className="options"
                  colorType="positive"
                  id="call-source-1"
                  initialSelectedValue="default_call_source"
                  onSelect={[Function]}
                  options={
                    Array [
                      Object {
                        "isDefault": true,
                        "label": "Позвонить на номер",
                        "value": "default_call_source",
                      },
                      Object {
                        "label": "Позвонить от лица клиента",
                        "value": "custom_call_source",
                      },
                    ]
                  }
                />
              }
            >
              <div
                className="container containerColor_positive verticalDropDirection_down horizontalDropDirection_right dropDirection_down_right"
              >
                <Button
                  basic={true}
                  buttonRef={
                    Object {
                      "current": <button
                        class="button positive basic popupButton  displayArrowIcon "
                      >
                        <span
                          class=""
                        >
                          ▲
                        </span>
                      </button>,
                    }
                  }
                  childrenRef={
                    Object {
                      "current": <span
                        class=""
                      >
                        ▲
                      </span>,
                    }
                  }
                  className="popupButton  displayArrowIcon "
                  colorType="positive"
                  onClick={[Function]}
                >
                  <button
                    className="button positive basic popupButton  displayArrowIcon "
                    onClick={[Function]}
                  >
                    <span
                      className=""
                    >
                      ▲
                    </span>
                  </button>
                </Button>
              </div>
            </Component>
          </Component>
        </Component>
      </div>
    </Component>
  </Connect(Component)>
</Provider>
`;

exports[`Webphone buttons Call button - call not a client 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(Component)
    client=""
  >
    <Component
      callEnded={false}
      callFromWebphone={[Function]}
      client=""
      setCallMetaInfo={[Function]}
    >
      <div
        className="callButtonContainer "
      >
        <Component
          client=""
          setCallRecipient={[Function]}
          userName=""
        >
          <Component
            buttonClassName="button "
            colorType="positive"
            icon="phone"
            iconClassName=""
            onClick={[Function]}
            text="Позвонить не клиенту"
          >
            <Button
              className="button "
              colorType="positive"
              onClick={[Function]}
            >
              <button
                className="button positive button "
                onClick={[Function]}
              >
                <span
                  className=""
                >
                  <span
                    className="webphoneButton"
                  >
                    <icon-mock
                      className="webphoneButton_icon "
                    />
                    <span
                      className="webphoneButton_text"
                    >
                      Позвонить не клиенту
                    </span>
                  </span>
                </span>
              </button>
            </Button>
          </Component>
        </Component>
        <Component
          callSource="default_call_source"
          onSelect={[Function]}
        >
          <Component
            colorType="positive"
            displayArrowIcon={true}
            id="call-source-1"
            initialSelectedValue="default_call_source"
            markIfNonDefaultChoice={true}
            onSelect={[Function]}
            options={
              Array [
                Object {
                  "isDefault": true,
                  "label": "Позвонить на номер",
                  "value": "default_call_source",
                },
                Object {
                  "label": "Позвонить от лица клиента",
                  "value": "custom_call_source",
                },
              ]
            }
          >
            <Component
              className=""
              colorType="positive"
              displayArrowIcon={true}
              popupContent={
                <Unknown
                  className="options"
                  colorType="positive"
                  id="call-source-1"
                  initialSelectedValue="default_call_source"
                  onSelect={[Function]}
                  options={
                    Array [
                      Object {
                        "isDefault": true,
                        "label": "Позвонить на номер",
                        "value": "default_call_source",
                      },
                      Object {
                        "label": "Позвонить от лица клиента",
                        "value": "custom_call_source",
                      },
                    ]
                  }
                />
              }
            >
              <div
                className="container containerColor_positive verticalDropDirection_down horizontalDropDirection_right dropDirection_down_right"
              >
                <Button
                  basic={true}
                  buttonRef={
                    Object {
                      "current": <button
                        class="button positive basic popupButton  displayArrowIcon "
                      >
                        <span
                          class=""
                        >
                          ▲
                        </span>
                      </button>,
                    }
                  }
                  childrenRef={
                    Object {
                      "current": <span
                        class=""
                      >
                        ▲
                      </span>,
                    }
                  }
                  className="popupButton  displayArrowIcon "
                  colorType="positive"
                  onClick={[Function]}
                >
                  <button
                    className="button positive basic popupButton  displayArrowIcon "
                    onClick={[Function]}
                  >
                    <span
                      className=""
                    >
                      ▲
                    </span>
                  </button>
                </Button>
              </div>
            </Component>
          </Component>
        </Component>
      </div>
    </Component>
  </Connect(Component)>
</Provider>
`;

exports[`Webphone buttons Call logs button 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Component>
    <Button
      basic={true}
      className="button"
      isLoading={false}
      onClick={[Function]}
    >
      <button
        className="button primary basic button"
        onClick={[Function]}
      >
        <span
          className=""
        >
          Скачать лог телефонии
        </span>
      </button>
    </Button>
  </Component>
</Provider>
`;

exports[`Webphone buttons End call button 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Component>
    <Button
      className="button"
      colorType="negative"
      onClick={[Function]}
    >
      <button
        className="button negative button"
        onClick={[Function]}
      >
        <span
          className=""
        >
          Завершить
        </span>
      </button>
    </Button>
  </Component>
</Provider>
`;

exports[`Webphone buttons Forward call popup 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Component>
    <div
      className="forwardCallContainer"
    >
      <Button
        basic={true}
        className=""
        colorType="warning"
        onClick={[Function]}
      >
        <button
          className="button warning basic"
          onClick={[Function]}
        >
          <span
            className=""
          >
            Переадресовать звонок
          </span>
        </button>
      </Button>
    </div>
  </Component>
</Provider>
`;

exports[`Webphone buttons Hold call button 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Component>
    <Component
      buttonClassName="button holdButton"
      colorType="warning"
      icon="pause"
      iconClassName="holdIcon"
      onClick={[Function]}
      text="Удержать"
    >
      <Button
        className="button holdButton"
        colorType="warning"
        onClick={[Function]}
      >
        <button
          className="button warning button holdButton"
          onClick={[Function]}
        >
          <span
            className=""
          >
            <span
              className="webphoneButton"
            >
              <icon-mock
                className="webphoneButton_icon holdIcon"
              />
              <span
                className="webphoneButton_text"
              >
                Удержать
              </span>
            </span>
          </span>
        </button>
      </Button>
    </Component>
  </Component>
</Provider>
`;

exports[`Webphone buttons Mute call button 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Component>
    <Component
      buttonClassName="button"
      colorType="warning"
      icon="microphone"
      iconClassName="microphoneIcon"
      onClick={[Function]}
      text="Выкл. микрофон"
    >
      <Button
        className="button"
        colorType="warning"
        onClick={[Function]}
      >
        <button
          className="button warning button"
          onClick={[Function]}
        >
          <span
            className=""
          >
            <span
              className="webphoneButton"
            >
              <icon-mock
                className="webphoneButton_icon microphoneIcon"
              />
              <span
                className="webphoneButton_text"
              >
                Выкл. микрофон
              </span>
            </span>
          </span>
        </button>
      </Button>
    </Component>
  </Component>
</Provider>
`;
