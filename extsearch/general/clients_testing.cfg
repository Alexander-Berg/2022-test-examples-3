DefaultTranscoderParams {
    OutputFormat: EHls
    SegmentLengthSec: 4
    PublishLowResFirst: true
    CaptureSceneChangeThumbs: true
    KeepAspectRatio: true
    CreateTimelineTiles: true
    S3Params: {
        Bucket: "transcoder-test"
    }
    CreateVideoPreview: true
    PreviewS3Params: {
        Bucket: "transcoder-test"
        DirInsideBucket: "video-preview/"
    }
    SignatureAlgo: "VisWord64v2"
    SignatureAlgo: "SoundChromaPrint"
    SignatureAlgo: "VideoPlusQueryV3CV"
    SignatureAlgo: "VideoClassifiers"
    SignatureAlgo: "VideoPlusQueryV5CV"
    SignatureAlgo: "VisWordFeatures"
    AvatarsParams: {
        Namespace: "vh"
    }
    GraphArgs {
        key: "max_screenshots_count"
        value: "10"
    }
    ThumbsInAvatars: true
}
DefaultUgcAdminApiParams {
    SplitToUserChannels: false
    NewChannelType: "regular"
    VideoDeduplication: false
    ChannelId: 9121713553694317554
    OptionalThumbnail: false
}
ClientService {
    Name: "testing"
    TranscoderQuota: "testingQuota"
    UgcAdminApiParams: {
        SplitToUserChannels: true
    }
}
ClientService {
    Name: "ping"
    IsDummy: true
}
ClientService {
    TvmId: 2010180
    Name: "testservice"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/testservice/"
        }
    }
    UniversalUrl: "https://ugc-test.vh.yandex.ru/callback"
}
ClientService {
    TvmId: 2001572
    Name: "districts-testing"
    TranscoderParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
    }
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2011038
    Name: "districts-unstable"
    TranscoderParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
    }
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2001409
    Name: "aura"
    IsDummy: true
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2011720
    Name: "selfservice-testing"
    TranscoderParams: {
        Graph: "regular"
        S3Params: {
            DirInsideBucket: "vod-content/selfservice-testing/"
        }
    }
    UseLegacyTranscoder: true
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2011836
    Name: "ugc"
    TranscoderParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
        PreprocessWebhookUrl: "https://moderation.vh.test.yandex.net/sqs_moderation/message?id=%s&type=rtt_status"
    }
    UserWillPublish: true
    UploadToIndex: true
    UploadToYt: true
    UgcAdminApiParams: {
        SplitToUserChannels: true
    }
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-special-converted"
            ABC: "strm"
        }
    }
}
ClientService {
    TvmId: 2013948
    Name: "maps-testing"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/maps-testing/"
        }
        SegmentLengthSec: 2
        UserRatios: {
            Items {
                RatioWidth: 9
                RatioHeight: 16
                Resolutions {
                    Name: "1080p"
                    AllowedFormats: EHls
                    Width: 1080
                    Height: 1920
                    VideoBitrate: 3800000
                    AudioBitrate: 128000
                    AudioSampleRate: 44100
                }
                Resolutions {
                    Name: "960p"
                    AllowedFormats: EHls
                    Width: 960
                    Height: 1706
                    VideoBitrate: 3000000
                    AudioBitrate: 128000
                    AudioSampleRate: 44100
                }
                Resolutions {
                    Name: "768p"
                    AllowedFormats: EHls
                    Width: 768
                    Height: 1366
                    VideoBitrate: 2000000
                    AudioBitrate: 128000
                    AudioSampleRate: 44100
                }
            }
            SmallVidResolution: {
                Name: "720p"
                AllowedFormats: EHls
                Width: 720
                Height: 1280
                VideoBitrate: 1800000
                AudioBitrate: 128000
                AudioSampleRate: 44100
            }
        }
    }
    UniversalUrl: "https://discovery-admin.tst.c.maps.yandex-team.ru/video/callback"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2002672
    Name: "games-testing"
    TranscoderParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "games"
        GraphArgs {
            key: "output_formats"
            value: "hls,mp4"
        }
        GraphArgs {
            key: "thumbs_required"
            value: "1"
        }
    }
    UniversalUrl: "https://admin-api.games-test.yandex.ru/vh/v1/callback"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 50
    Name: "morda-testing"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/morda-testing/"
        }
    }
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2000484
    Name: "q-testing"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/q-testing/"
        }
        WatermarkProps: {
            WatermarkUrl: "https://s3.mds.yandex.net/vh-q-converted/q-mask.png"
            DistanceFromRight: 40
            DistanceFromBottom: 40
            DefaultInputWidth: 1920
        }
        Graph: "regular-fast"
        GraphArgs {
            key: "thumbs_required"
            value: "1"
        }
    }
    UserWillPublish: true
    Moderation: {
        Cleanweb: {
            Require: "file"
            Require: "title"
            Require: "description"
            Require: "thumbnail"
        }
        Zen: {
            OnSuccess: "zen_yang_video"
            OnlyVerdicts {
                Key: "zen_yang_video"
                Values: "zen_other_ban"
            }
        }
    }
}
ClientService {
    TvmId: 2000795
    Name: "q-prestable"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/q-prestable/"
        }
        WatermarkProps: {
            WatermarkUrl: "https://s3.mds.yandex.net/vh-q-converted/q-mask.png"
            DistanceFromRight: 40
            DistanceFromBottom: 40
            DefaultInputWidth: 1920
        }
        Graph: "regular-fast"
        GraphArgs {
            key: "thumbs_required"
            value: "1"
        }
    }
    UniversalUrl: "https://answers-admin-testing.n.yandex-team.ru/znatoki/admin/api/v2/videos_callback"
    UserWillPublish: true
    Moderation: {
        Cleanweb: {
            Require: "file"
            Require: "title"
            Require: "description"
            Require: "thumbnail"
        }
        Zen: {
            OnSuccess: "zen_yang_video"
            OnlyVerdicts {
                Key: "zen_yang_video"
                Values: "zen_other_ban"
            }
        }
    }
}
ClientService {
    TvmId: 2000223
    Name: "zen_publishers-testing"
    TranscoderParams: {
        S3Params: {
            Bucket: "zen-vod"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
        GraphArgs {
            key: "auto_subtitles"
            value: "1"
        }
        GraphArgs {
            key: "vertical_mode"
            value: "1"
        }
        SignatureAlgo: "VideoLogotypes"
        SignatureAlgo: "Cropdetect"
        SignatureAlgo: "VideoQuality"
        SignatureAlgo: "VideoToDocV1CV"
    }
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-zen-test-converted"
            ABC: "ugclive"
        }
    }
    TranscoderQuota: "zen-test"
    UniversalUrl: "http://awacs-balancer-int.zen.zeta.kaizen.yandex.ru/platform/internal-api/vh-ugc-callback"
    UgcAdminApiParams: {
        SplitToUserChannels: true
    }
}
ClientService {
    TvmId: 2023530
    Name: "zen_stories-testing"
    TranscoderParams: {
        S3Params: {
            Bucket: "zen-vod"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
        GraphArgs {
            key: "auto_subtitles"
            value: "1"
        }
        GraphArgs {
            key: "vertical_mode"
            value: "1"
        }
        SignatureAlgo: "VideoLogotypes"
        SignatureAlgo: "Cropdetect"
        SignatureAlgo: "VideoQuality"
        SignatureAlgo: "VideoToDocV1CV"
    }
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-zen-test-converted"
            ABC: "ugclive"
        }
    }
    TranscoderQuota: "zen-stories-test"
    UniversalUrl: "http://awacs-balancer-int.zen.zeta.kaizen.yandex.ru/platform/internal-api/vh-ugc-callback"
    UgcAdminApiParams: {
        SplitToUserChannels: true
    }
}
ClientService {
    TvmId: 2019313
    Name: "zen_cinema-testing"
    TranscoderParams: {
        S3Params: {
            Bucket: "zen-vod"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
        GraphArgs {
            key: "auto_subtitles"
            value: "1"
        }
        GraphArgs {
            key: "vertical_mode"
            value: "1"
        }
        SignatureAlgo: "VideoLogotypes"
        SignatureAlgo: "Cropdetect"
        SignatureAlgo: "VideoQuality"
        SignatureAlgo: "VideoToDocV1CV"
    }
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-special-converted"
            ABC: "strm"
        }
    }
    TranscoderQuota: "zen-test"
    UniversalUrl: "http://awacs-balancer-int.zen.zeta.kaizen.yandex.ru/platform/internal-api/vh-ugc-callback"
    UploadToIndex: true
    UgcAdminApiParams: {
        SplitToUserChannels: true
    }
}
ClientService {
    TvmId: 2014702
    Name: "market_front_white-development-testing"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/market_front_white-development-testing/"
        }
    }
    UniversalUrl: "https://pers-author.tst.vs.market.yandex.net/video/callback"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2014700
    Name: "market_front_white-development-mimino"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/market_front_white-development-mimino/"
        }
    }
    UniversalUrl: "https://pers-author.tst.vs.market.yandex.net/video/callback"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2014704
    Name: "market_front_white-testing-mimino"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/market_front_white-testing-mimino/"
        }
    }
    UniversalUrl: "https://pers-author.tst.vs.market.yandex.net/video/callback"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2014708
    Name: "market_front_white-testing-testing"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/market_front_white-testing-testing/"
        }
    }
    UniversalUrl: "https://pers-author.tst.vs.market.yandex.net/video/callback"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2018908
    Name: "ugc-internal"
    TranscoderParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
    }
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2019087
    Name: "ether-testing"
    TranscoderParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
    }
    UniversalUrl: "http://ether-backend.yandex-team.ru/ugc_cut"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2014118
    Name: "taxi-testing"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/taxi-testing/"
        }
    }
    UniversalUrl: "https://promotions-l7.taxi.tst.yandex.net/admin/promotions/upload/vh/status"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2002414
    Name: "uslugi"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/uslugi/"
        }
        Graph: "regular-fast"
    }
    UniversalUrl: "https://shared-dev.hamster.yandex.ru/ydo/api/process_video_callback"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2012208
    Name: "canvas-testing"
    TranscoderParams: {
        Graph: "ad"
        GraphArgs {
            key: "measure_video_quality"
            value: "1"
        }
        GraphArgs {
            key: "thumbs_required"
            value: "1"
        }
        GraphArgs {
            key: "output_formats"
            value: "kaltura,hls,mp4,webm,webm_vp9"
        }
        GraphArgs {
            key: "zero_pass"
            value: "1"
        }
        GraphArgs {
            key: "crf"
            value: "19"
        }
        GraphArgs {
            key: "vertical_mode"
            value: "1"
        }
        CreateVideoPreview: false
        S3Params: {
            Bucket: "vh-canvas-converted"
            DirInsideBucket: "vod-content/testing/"
        }
    }
    TranscoderQuota: "canvas-test"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2009921
    Name: "canvas-development"
    TranscoderParams: {
        Graph: "ad"
        GraphArgs {
            key: "measure_video_quality"
            value: "1"
        }
        GraphArgs {
            key: "thumbs_required"
            value: "1"
        }
         GraphArgs {
            key: "output_formats"
            value: "mp4,webm,webm_vp9"
        }
        PublishLowResFirst: false
        CreateVideoPreview: false
        S3Params: {
            DirInsideBucket: "vod-content/canvas/"
        }
    }
    TranscoderQuota: "canvas-test"
    Moderation: {
        Cleanweb: {
            Require: "file"
        }
    }
}
ClientService {
    TvmId: 2021037
    Name: "youtube-low"
    TranscoderParams: {
        Graph: "regular"
        S3Params: {
            DirInsideBucket: "vod-content/youtube/"
            KeyPrefix: "%TASK_ID%"
        }
        SignatureAlgo: "Cropdetect"
        SignatureAlgo: "VideoQuality"
        SignatureAlgo: "VideoToDocV1CV"
    }
}
ClientService {
    TvmId: 2021039
    Name: "youtube-high"
    TranscoderParams: {
        Graph: "regular"
        S3Params: {
            DirInsideBucket: "vod-content/youtube/"
            KeyPrefix: "%TASK_ID%"
        }
        SignatureAlgo: "Cropdetect"
        SignatureAlgo: "VideoQuality"
    }
}
ClientService {
    TvmId: 2000149
    Name: "music-test"
    TranscoderParams: {
        Graph: "audio"
        S3Params: {
            DirInsideBucket: "vod-content/music/"
        }
        SignatureAlgo: "SoundChromaPrint”"
    }
}
ClientService {
    TvmId: 2016721
    Name: "live-test"
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-special-converted"
            ABC: "strm"
        }
        DRMParams: {
            Service: "ya-video"
        }
    }
}
ClientService {
    TvmId: 2025618
    Name: "news-test"
    UgcAdminApiParams: {
        VideoDeduplication: true
    }
    UploadToLogbroker: true
    LogbrokerConfig: {
        Host: "lbkx.logbroker.yandex.net"
        Topic: "/news/test/vh/notifications"
    }
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/news/"
        }
        Graph: "regular-fast"
    }
}
ClientService {
    TvmId: 2001015
    Name: "muz-test"
    TranscoderParams: {
        S3Params: {
            DirInsideBucket: "vod-content/muz/"
        }
        Graph: "music-videoshots"
    }
}
ClientService {
    TvmId: 2000490
    Name: "pythia-test"
    TranscoderParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        GraphArgs {
            key: "output_formats"
            value: "kaltura"
        }
        Graph: "regular-fast"
    }
    UniversalUrl: "https://pythia-staging.common.yandex.ru/api/v0/resource/vh/push"
}
ClientService {
    TvmId: 2018025
    Name: "ott-content-api"
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-special-converted"
            ABC: "strm"
        }
        DRMParams: {
            Service: "ott-content-api"
        }
    }
}
ClientService {
    TvmId: 2001764
    Name: "geoadv"
    TranscoderParams: {
        Graph: "regular-fast"
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
    }
}
ClientService {
    TvmId: 2033030
    Name: "vh-ugc-ya-internal"
    TranscoderParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
        PreprocessWebhookUrl: "https://moderation.vh.test.yandex.net/sqs_moderation/message?id=%s&type=rtt_status"
    }
    UserWillPublish: true
    UploadToIndex: true
    UploadToYt: true
    UgcAdminApiParams: {
        SplitToUserChannels: true
    }
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-special-converted"
            ABC: "strm"
        }
        DRMParams: {
            Service: "ya-video"
        }
    }
}
ClientService {
    TvmId: 2020715
    Name: "telemost"
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            ABC: "strm"
        }
        DRMParams: {
            Service: "telemost"
        }
    }
}
ClientService {
    TvmId: 2033034
    Name: "vh-ugc-ya-external"
    TranscoderParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
        PreprocessWebhookUrl: "https://moderation.vh.test.yandex.net/sqs_moderation/message?id=%s&type=rtt_status"
    }
    UserWillPublish: true
    UploadToIndex: true
    UploadToYt: true
    UgcAdminApiParams: {
        SplitToUserChannels: true
    }
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-special-converted"
            ABC: "strm"
        }
        DRMParams: {
            Service: "ya-video"
        }
    }
}

ClientService {
    TvmId: 2034027
    Name: "vh-ugc-lkpo-music"
    UgcAdminApiParams: {
        SplitToUserChannels: true
    }
}
ClientService {
    TvmId: 2031959
    Name: "ott-dataset-sport-cg-generator"
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-special-converted"
            ABC: "strm"
        }
        DRMParams: {
            Service: "ott-dataset-sport-cg-generator"
        }
    }
}
ClientService {
    TvmId: 2015323
    Name: "vh-ugc-vconf-internal"
    BroadcastParams: {
        S3Params: {
            Bucket: "vh-special-converted"
            ABC: "strm"
        }
        DRMParams: {
            Service: "ya-video"
        }
    }
}
ClientService {
    TvmId: 2034691
    Name: "vh-ugc-partners"
    TranscoderParams: {
        S3Params: {
            Bucket: "vh-strm-test-converted"
            DirInsideBucket: "vod-content/"
            KeyPrefix: "%TASK_ID%"
        }
        Graph: "regular-fast"
        PreprocessWebhookUrl: "https://moderation.vh.test.yandex.net/sqs_moderation/message?id=%s&type=rtt_status"
    }
    UserWillPublish: true
    UploadToIndex: true
    UploadToYt: true
    UgcAdminApiParams: {
        SplitToUserChannels: true
    }
}
