// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src/components/editor/touch-editor should call ref callback and set initial data to editor on mount 1`] = `
<TouchEditor
  disabled={false}
  onInput={[MockFunction]}
  onPasteLimitExceeded={[MockFunction]}
  onSetRef={
    [MockFunction] {
      "calls": Array [
        Array [
          <div
            class="touch-editor__content"
            contenteditable="true"
          />,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setInitialData={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className={
      BemNamingEntity {
        "entity": Object {
          "block": "touch-editor",
          "elem": "content",
        },
        "entityMixes": Array [],
        "entityMods": Object {},
        "naming": Object {
          "stringify": [Function],
        },
      }
    }
    contentEditable={true}
    onInput={[MockFunction]}
    onPaste={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
  />
</TouchEditor>
`;

exports[`src/components/editor/touch-editor should set contenteditable attribute to false if editor is disabled 1`] = `
<TouchEditor
  disabled={true}
  onInput={[MockFunction]}
  onPasteLimitExceeded={[MockFunction]}
  onSetRef={
    [MockFunction] {
      "calls": Array [
        Array [
          <div
            class="touch-editor__content"
            contenteditable="false"
          />,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setInitialData={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div
    className={
      BemNamingEntity {
        "entity": Object {
          "block": "touch-editor",
          "elem": "content",
        },
        "entityMixes": Array [],
        "entityMods": Object {},
        "naming": Object {
          "stringify": [Function],
        },
      }
    }
    contentEditable={false}
    onInput={[MockFunction]}
    onPaste={[Function]}
    onTouchEnd={[Function]}
    onTouchStart={[Function]}
  />
</TouchEditor>
`;
