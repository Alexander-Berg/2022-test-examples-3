// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResourceRenameDialog: should render 1`] = `
<ResourceRenameDialog
  isIosSafari={false}
  onClose={[MockFunction]}
  onSubmit={[MockFunction]}
  resource={
    Object {
      "ext": "pdf",
      "name": "file.pdf",
    }
  }
  title="Переименовать"
  visible={false}
>
  <RenameDialog
    actionButton="submit"
    autofocusButton={true}
    closeButtonAriaLabel="Закрыть"
    cls={
      BemNamingEntity {
        "entity": Object {
          "block": "resource-rename-dialog",
        },
        "entityMixes": Array [
          "js-prevent-deselect",
        ],
        "entityMods": Object {
          "hidden": undefined,
        },
        "naming": Object {
          "stringify": [Function],
        },
      }
    }
    dontSelectExtention={true}
    isIosSafari={false}
    onCancel={[Function]}
    onClose={[Function]}
    onExtraButtonClick={[Function]}
    onSubmit={[Function]}
    onTextChange={[Function]}
    renameText="file.pdf"
    submitButtonText="Сохранить"
    submitDisabled={false}
    theme="normal"
    title="Переименовать"
    visible={false}
  >
    <ConfirmDialog
      actionButton="submit"
      autofocusButton={true}
      closeButtonAriaLabel="Закрыть"
      cls={
        BemNamingEntity {
          "entity": Object {
            "block": "resource-rename-dialog",
          },
          "entityMixes": Array [
            "js-prevent-deselect",
          ],
          "entityMods": Object {
            "hidden": undefined,
          },
          "naming": Object {
            "stringify": [Function],
          },
        }
      }
      dontSelectExtention={true}
      isIosSafari={false}
      onAnimationEnd={[Function]}
      onCancel={[Function]}
      onClose={[Function]}
      onExtraButtonClick={[Function]}
      onSubmit={[Function]}
      onTextChange={[Function]}
      renameText="file.pdf"
      submitButtonText="Сохранить"
      submitDisabled={false}
      theme="normal"
      title="Переименовать"
      visible={false}
    >
      <Dialog
        actionButton="submit"
        autofocusButton={true}
        closeButtonAriaLabel="Закрыть"
        cls={
          BemNamingEntity {
            "entity": Object {
              "block": "confirmation-dialog",
            },
            "entityMixes": Array [
              BemNamingEntity {
                "entity": Object {
                  "block": "resource-rename-dialog",
                },
                "entityMixes": Array [
                  "js-prevent-deselect",
                ],
                "entityMods": Object {
                  "hidden": undefined,
                },
                "naming": Object {
                  "stringify": [Function],
                },
              },
            ],
            "entityMods": Object {},
            "naming": Object {
              "stringify": [Function],
            },
          }
        }
        dontSelectExtention={true}
        isIosSafari={false}
        keepMounted={false}
        onAnimationEnd={[Function]}
        onCancel={[Function]}
        onClose={[Function]}
        onExtraButtonClick={[Function]}
        onRender={[Function]}
        onSubmit={[Function]}
        onTextChange={[Function]}
        renameText="file.pdf"
        submitButtonText="Сохранить"
        submitDisabled={false}
        theme="normal"
        title="Переименовать"
        visible={false}
      >
        <Modal
          className={
            BemNamingEntity {
              "entity": Object {
                "block": "dialog",
              },
              "entityMixes": Array [
                BemNamingEntity {
                  "entity": Object {
                    "block": "confirmation-dialog",
                  },
                  "entityMixes": Array [
                    BemNamingEntity {
                      "entity": Object {
                        "block": "resource-rename-dialog",
                      },
                      "entityMixes": Array [
                        "js-prevent-deselect",
                      ],
                      "entityMods": Object {
                        "hidden": undefined,
                      },
                      "naming": Object {
                        "stringify": [Function],
                      },
                    },
                  ],
                  "entityMods": Object {},
                  "naming": Object {
                    "stringify": [Function],
                  },
                },
              ],
              "entityMods": Object {},
              "naming": Object {
                "stringify": [Function],
              },
            }
          }
          keepMounted={false}
          onAnimationEnd={[Function]}
          onClose={[Function]}
          onRender={[Function]}
          theme="normal"
          visible={false}
        >
          <lego-components_modal
            className={
              BemNamingEntity {
                "entity": Object {
                  "block": "dialog",
                },
                "entityMixes": Array [
                  BemNamingEntity {
                    "entity": Object {
                      "block": "confirmation-dialog",
                    },
                    "entityMixes": Array [
                      BemNamingEntity {
                        "entity": Object {
                          "block": "resource-rename-dialog",
                        },
                        "entityMixes": Array [
                          "js-prevent-deselect",
                        ],
                        "entityMods": Object {
                          "hidden": undefined,
                        },
                        "naming": Object {
                          "stringify": [Function],
                        },
                      },
                    ],
                    "entityMods": Object {},
                    "naming": Object {
                      "stringify": [Function],
                    },
                  },
                ],
                "entityMods": Object {},
                "naming": Object {
                  "stringify": [Function],
                },
              }
            }
            keepMounted={false}
            onAnimationEnd={[Function]}
            onClose={[Function]}
            onRender={[Function]}
            theme="normal"
            visible={false}
          >
            <div
              className={
                BemNamingEntity {
                  "entity": Object {
                    "block": "dialog",
                    "elem": "wrap",
                  },
                  "entityMixes": Array [],
                  "entityMods": Object {},
                  "naming": Object {
                    "stringify": [Function],
                  },
                }
              }
            >
              <h2
                className={
                  BemNamingEntity {
                    "entity": Object {
                      "block": "dialog",
                      "elem": "title",
                    },
                    "entityMixes": Array [],
                    "entityMods": Object {},
                    "naming": Object {
                      "stringify": [Function],
                    },
                  }
                }
                tabIndex={0}
              >
                Переименовать
              </h2>
              <Button
                aria-label="Закрыть"
                className={
                  BemNamingEntity {
                    "entity": Object {
                      "block": "dialog",
                      "elem": "close",
                    },
                    "entityMixes": Array [],
                    "entityMods": Object {},
                    "naming": Object {
                      "stringify": [Function],
                    },
                  }
                }
                icon={[Function]}
                onClick={[Function]}
                size="s"
                view="clear"
              >
                <lego-components_button
                  aria-label="Закрыть"
                  className={
                    BemNamingEntity {
                      "entity": Object {
                        "block": "dialog",
                        "elem": "close",
                      },
                      "entityMixes": Array [],
                      "entityMods": Object {},
                      "naming": Object {
                        "stringify": [Function],
                      },
                    }
                  }
                  icon={[Function]}
                  onClick={[Function]}
                  size="s"
                  view="clear"
                />
              </Button>
              <div
                className={
                  BemNamingEntity {
                    "entity": Object {
                      "block": "dialog",
                      "elem": "body",
                    },
                    "entityMixes": Array [],
                    "entityMods": Object {},
                    "naming": Object {
                      "stringify": [Function],
                    },
                  }
                }
              >
                <div
                  className={
                    BemNamingEntity {
                      "entity": Object {
                        "block": "confirmation-dialog",
                        "elem": "content",
                      },
                      "entityMixes": Array [],
                      "entityMods": Object {},
                      "naming": Object {
                        "stringify": [Function],
                      },
                    }
                  }
                >
                  <div
                    className={
                      BemNamingEntity {
                        "entity": Object {
                          "block": "rename-dialog",
                          "elem": "content",
                        },
                        "entityMixes": Array [],
                        "entityMods": Object {},
                        "naming": Object {
                          "stringify": [Function],
                        },
                      }
                    }
                  >
                    <form
                      className={
                        BemNamingEntity {
                          "entity": Object {
                            "block": "rename-dialog",
                            "elem": "rename-form",
                          },
                          "entityMixes": Array [],
                          "entityMods": Object {},
                          "naming": Object {
                            "stringify": [Function],
                          },
                        }
                      }
                      onSubmit={[Function]}
                    >
                      <TextInputWithState
                        controlRef={[Function]}
                        onChange={[Function]}
                        size="m"
                        text="file.pdf"
                        view="default"
                      >
                        <SimpleComposeWrapper [size: 4 mods]
                          controlRef={[Function]}
                          onChange={[Function]}
                          size="m"
                          text="file.pdf"
                          value="file.pdf"
                          view="default"
                        >
                          <SimpleComposeWrapper [view: 5 mods]
                            className="Textinput Textinput_size_m"
                            controlRef={[Function]}
                            onChange={[Function]}
                            size="m"
                            text="file.pdf"
                            value="file.pdf"
                            view="default"
                          >
                            <SimpleComposeWrapper [pin:round-brick|round-clear|round-round]
                              className="Textinput Textinput_view_default Textinput_size_m"
                              controlRef={[Function]}
                              onChange={[Function]}
                              size="m"
                              text="file.pdf"
                              value="file.pdf"
                              view="default"
                            >
                              <SimpleComposeWrapper [pin: 6 mods]
                                className="Textinput Textinput_view_default Textinput_size_m"
                                controlRef={[Function]}
                                onChange={[Function]}
                                size="m"
                                text="file.pdf"
                                value="file.pdf"
                                view="default"
                              >
                                <RegistryResolver(Textinput)
                                  className="Textinput Textinput_view_default Textinput_size_m"
                                  controlRef={[Function]}
                                  onChange={[Function]}
                                  size="m"
                                  text="file.pdf"
                                  value="file.pdf"
                                  view="default"
                                >
                                  <WithBemMod(Textinput)[hasClear:true]
                                    className="Textinput Textinput_view_default Textinput_size_m"
                                    controlRef={[Function]}
                                    onChange={[Function]}
                                    size="m"
                                    text="file.pdf"
                                    value="file.pdf"
                                    view="default"
                                  >
                                    <WithIconClassName
                                      className="Textinput Textinput_view_default Textinput_size_m"
                                      controlRef={[Function]}
                                      onChange={[Function]}
                                      size="m"
                                      text="file.pdf"
                                      value="file.pdf"
                                      view="default"
                                    >
                                      <RegistryResolver(Textinput)
                                        className="Textinput Textinput_view_default Textinput_size_m"
                                        controlRef={[Function]}
                                        onChange={[Function]}
                                        size="m"
                                        text="file.pdf"
                                        value="file.pdf"
                                        view="default"
                                      >
                                        <WithControl@desktop(withAutoFocus(TextinputPresenter))
                                          className="Textinput Textinput_view_default Textinput_size_m"
                                          controlRef={[Function]}
                                          onChange={[Function]}
                                          size="m"
                                          text="file.pdf"
                                          value="file.pdf"
                                          view="default"
                                        >
                                          <withAutoFocus(TextinputPresenter)
                                            className="Textinput Textinput_view_default Textinput_size_m"
                                            controlRef={[Function]}
                                            onChange={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            size="m"
                                            text="file.pdf"
                                            value="file.pdf"
                                            view="default"
                                          >
                                            <TextinputPresenter
                                              className="Textinput Textinput_view_default Textinput_size_m"
                                              controlRef={[Function]}
                                              onChange={[Function]}
                                              onMouseEnter={[Function]}
                                              onMouseLeave={[Function]}
                                              size="m"
                                              text="file.pdf"
                                              value="file.pdf"
                                              view="default"
                                            >
                                              <WithControl(Textinput)
                                                className="Textinput Textinput_view_default Textinput_size_m"
                                                controlRef={[Function]}
                                                onChange={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                size="m"
                                                text="file.pdf"
                                                value="file.pdf"
                                                view="default"
                                              >
                                                <Textinput
                                                  className="Textinput Textinput_view_default Textinput_size_m"
                                                  controlRef={[Function]}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseEnter={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  size="m"
                                                  text="file.pdf"
                                                  value="file.pdf"
                                                  view="default"
                                                >
                                                  <span
                                                    className="Textinput Textinput_view_default Textinput_size_m"
                                                    onMouseEnter={[Function]}
                                                    onMouseLeave={[Function]}
                                                  >
                                                    <RenderOverride
                                                      aria-invalid={false}
                                                      controlRef={[Function]}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseUp={[Function]}
                                                      text="file.pdf"
                                                      value="file.pdf"
                                                    >
                                                      <TextinputControl
                                                        aria-invalid={false}
                                                        controlRef={[Function]}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseUp={[Function]}
                                                        text="file.pdf"
                                                        value="file.pdf"
                                                      >
                                                        <input
                                                          aria-invalid={false}
                                                          autoComplete="off"
                                                          className="Textinput-Control"
                                                          onBlur={[Function]}
                                                          onChange={[Function]}
                                                          onFocus={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseUp={[Function]}
                                                          text="file.pdf"
                                                          value="file.pdf"
                                                        />
                                                      </TextinputControl>
                                                    </RenderOverride>
                                                    <TextinputBox>
                                                      <span
                                                        className="Textinput-Box"
                                                      />
                                                    </TextinputBox>
                                                  </span>
                                                </Textinput>
                                              </WithControl(Textinput)>
                                            </TextinputPresenter>
                                          </withAutoFocus(TextinputPresenter)>
                                        </WithControl@desktop(withAutoFocus(TextinputPresenter))>
                                      </RegistryResolver(Textinput)>
                                    </WithIconClassName>
                                  </WithBemMod(Textinput)[hasClear:true]>
                                </RegistryResolver(Textinput)>
                              </SimpleComposeWrapper [pin: 6 mods]>
                            </SimpleComposeWrapper [pin:round-brick|round-clear|round-round]>
                          </SimpleComposeWrapper [view: 5 mods]>
                        </SimpleComposeWrapper [size: 4 mods]>
                      </TextInputWithState>
                    </form>
                    <div
                      className={
                        BemNamingEntity {
                          "entity": Object {
                            "block": "rename-dialog",
                            "elem": "rename-error",
                          },
                          "entityMixes": Array [],
                          "entityMods": Object {},
                          "naming": Object {
                            "stringify": [Function],
                          },
                        }
                      }
                    />
                  </div>
                </div>
                <div
                  className={
                    BemNamingEntity {
                      "entity": Object {
                        "block": "confirmation-dialog",
                        "elem": "footer",
                      },
                      "entityMixes": Array [],
                      "entityMods": Object {},
                      "naming": Object {
                        "stringify": [Function],
                      },
                    }
                  }
                >
                  <Button
                    className={
                      BemNamingEntity {
                        "entity": Object {
                          "block": "confirmation-dialog",
                          "elem": "button",
                        },
                        "entityMixes": Array [
                          "",
                        ],
                        "entityMods": Object {
                          "submit": true,
                        },
                        "naming": Object {
                          "stringify": [Function],
                        },
                      }
                    }
                    disabled={false}
                    innerRef={[Function]}
                    onClick={[Function]}
                    size="m"
                    view="action"
                  >
                    <lego-components_button
                      className={
                        BemNamingEntity {
                          "entity": Object {
                            "block": "confirmation-dialog",
                            "elem": "button",
                          },
                          "entityMixes": Array [
                            "",
                          ],
                          "entityMods": Object {
                            "submit": true,
                          },
                          "naming": Object {
                            "stringify": [Function],
                          },
                        }
                      }
                      disabled={false}
                      innerRef={[Function]}
                      onClick={[Function]}
                      size="m"
                      view="action"
                    >
                      Сохранить
                    </lego-components_button>
                  </Button>
                </div>
              </div>
            </div>
          </lego-components_modal>
        </Modal>
      </Dialog>
    </ConfirmDialog>
  </RenameDialog>
  <ConfirmDialog
    actionButton="submit"
    autofocusButton={true}
    cancelButtonText="Оставить .pdf"
    closeButtonAriaLabel="Закрыть"
    cls={
      BemNamingEntity {
        "entity": Object {
          "block": "resource-rename-dialog",
          "elem": "confirmation-dialog",
        },
        "entityMixes": Array [
          "js-prevent-deselect",
        ],
        "entityMods": Object {},
        "naming": Object {
          "stringify": [Function],
        },
      }
    }
    onCancel={[Function]}
    onClose={[Function]}
    onExtraButtonClick={[Function]}
    onSubmit={[Function]}
    submitButtonText="Использовать .pdf"
    theme="normal"
    title="Расширение будет изменено!"
    visible={false}
  >
    <Dialog
      actionButton="submit"
      autofocusButton={true}
      cancelButtonText="Оставить .pdf"
      closeButtonAriaLabel="Закрыть"
      cls={
        BemNamingEntity {
          "entity": Object {
            "block": "confirmation-dialog",
          },
          "entityMixes": Array [
            BemNamingEntity {
              "entity": Object {
                "block": "resource-rename-dialog",
                "elem": "confirmation-dialog",
              },
              "entityMixes": Array [
                "js-prevent-deselect",
              ],
              "entityMods": Object {},
              "naming": Object {
                "stringify": [Function],
              },
            },
          ],
          "entityMods": Object {},
          "naming": Object {
            "stringify": [Function],
          },
        }
      }
      keepMounted={false}
      onCancel={[Function]}
      onClose={[Function]}
      onExtraButtonClick={[Function]}
      onRender={[Function]}
      onSubmit={[Function]}
      submitButtonText="Использовать .pdf"
      theme="normal"
      title="Расширение будет изменено!"
      visible={false}
    >
      <Modal
        className={
          BemNamingEntity {
            "entity": Object {
              "block": "dialog",
            },
            "entityMixes": Array [
              BemNamingEntity {
                "entity": Object {
                  "block": "confirmation-dialog",
                },
                "entityMixes": Array [
                  BemNamingEntity {
                    "entity": Object {
                      "block": "resource-rename-dialog",
                      "elem": "confirmation-dialog",
                    },
                    "entityMixes": Array [
                      "js-prevent-deselect",
                    ],
                    "entityMods": Object {},
                    "naming": Object {
                      "stringify": [Function],
                    },
                  },
                ],
                "entityMods": Object {},
                "naming": Object {
                  "stringify": [Function],
                },
              },
            ],
            "entityMods": Object {},
            "naming": Object {
              "stringify": [Function],
            },
          }
        }
        keepMounted={false}
        onAnimationEnd={[Function]}
        onClose={[Function]}
        onRender={[Function]}
        theme="normal"
        visible={false}
      >
        <lego-components_modal
          className={
            BemNamingEntity {
              "entity": Object {
                "block": "dialog",
              },
              "entityMixes": Array [
                BemNamingEntity {
                  "entity": Object {
                    "block": "confirmation-dialog",
                  },
                  "entityMixes": Array [
                    BemNamingEntity {
                      "entity": Object {
                        "block": "resource-rename-dialog",
                        "elem": "confirmation-dialog",
                      },
                      "entityMixes": Array [
                        "js-prevent-deselect",
                      ],
                      "entityMods": Object {},
                      "naming": Object {
                        "stringify": [Function],
                      },
                    },
                  ],
                  "entityMods": Object {},
                  "naming": Object {
                    "stringify": [Function],
                  },
                },
              ],
              "entityMods": Object {},
              "naming": Object {
                "stringify": [Function],
              },
            }
          }
          keepMounted={false}
          onAnimationEnd={[Function]}
          onClose={[Function]}
          onRender={[Function]}
          theme="normal"
          visible={false}
        >
          <div
            className={
              BemNamingEntity {
                "entity": Object {
                  "block": "dialog",
                  "elem": "wrap",
                },
                "entityMixes": Array [],
                "entityMods": Object {},
                "naming": Object {
                  "stringify": [Function],
                },
              }
            }
          >
            <h2
              className={
                BemNamingEntity {
                  "entity": Object {
                    "block": "dialog",
                    "elem": "title",
                  },
                  "entityMixes": Array [],
                  "entityMods": Object {},
                  "naming": Object {
                    "stringify": [Function],
                  },
                }
              }
              tabIndex={0}
            >
              Расширение будет изменено!
            </h2>
            <Button
              aria-label="Закрыть"
              className={
                BemNamingEntity {
                  "entity": Object {
                    "block": "dialog",
                    "elem": "close",
                  },
                  "entityMixes": Array [],
                  "entityMods": Object {},
                  "naming": Object {
                    "stringify": [Function],
                  },
                }
              }
              icon={[Function]}
              onClick={[Function]}
              size="s"
              view="clear"
            >
              <lego-components_button
                aria-label="Закрыть"
                className={
                  BemNamingEntity {
                    "entity": Object {
                      "block": "dialog",
                      "elem": "close",
                    },
                    "entityMixes": Array [],
                    "entityMods": Object {},
                    "naming": Object {
                      "stringify": [Function],
                    },
                  }
                }
                icon={[Function]}
                onClick={[Function]}
                size="s"
                view="clear"
              />
            </Button>
            <div
              className={
                BemNamingEntity {
                  "entity": Object {
                    "block": "dialog",
                    "elem": "body",
                  },
                  "entityMixes": Array [],
                  "entityMods": Object {},
                  "naming": Object {
                    "stringify": [Function],
                  },
                }
              }
            >
              <div
                className={
                  BemNamingEntity {
                    "entity": Object {
                      "block": "confirmation-dialog",
                      "elem": "content",
                    },
                    "entityMixes": Array [],
                    "entityMods": Object {},
                    "naming": Object {
                      "stringify": [Function],
                    },
                  }
                }
              >
                <div
                  className="rename-dialog__content"
                >
                  После изменения расширения этот файл может перестать открываться в программах
                </div>
              </div>
              <div
                className={
                  BemNamingEntity {
                    "entity": Object {
                      "block": "confirmation-dialog",
                      "elem": "footer",
                    },
                    "entityMixes": Array [],
                    "entityMods": Object {},
                    "naming": Object {
                      "stringify": [Function],
                    },
                  }
                }
              >
                <Button
                  className={
                    BemNamingEntity {
                      "entity": Object {
                        "block": "confirmation-dialog",
                        "elem": "button",
                      },
                      "entityMixes": Array [
                        "",
                      ],
                      "entityMods": Object {
                        "cancel": true,
                      },
                      "naming": Object {
                        "stringify": [Function],
                      },
                    }
                  }
                  innerRef={[Function]}
                  onClick={[Function]}
                  size="m"
                  view="default"
                >
                  <lego-components_button
                    className={
                      BemNamingEntity {
                        "entity": Object {
                          "block": "confirmation-dialog",
                          "elem": "button",
                        },
                        "entityMixes": Array [
                          "",
                        ],
                        "entityMods": Object {
                          "cancel": true,
                        },
                        "naming": Object {
                          "stringify": [Function],
                        },
                      }
                    }
                    innerRef={[Function]}
                    onClick={[Function]}
                    size="m"
                    view="default"
                  >
                    Оставить .pdf
                  </lego-components_button>
                </Button>
                <Button
                  className={
                    BemNamingEntity {
                      "entity": Object {
                        "block": "confirmation-dialog",
                        "elem": "button",
                      },
                      "entityMixes": Array [
                        "",
                      ],
                      "entityMods": Object {
                        "submit": true,
                      },
                      "naming": Object {
                        "stringify": [Function],
                      },
                    }
                  }
                  innerRef={[Function]}
                  onClick={[Function]}
                  size="m"
                  view="action"
                >
                  <lego-components_button
                    className={
                      BemNamingEntity {
                        "entity": Object {
                          "block": "confirmation-dialog",
                          "elem": "button",
                        },
                        "entityMixes": Array [
                          "",
                        ],
                        "entityMods": Object {
                          "submit": true,
                        },
                        "naming": Object {
                          "stringify": [Function],
                        },
                      }
                    }
                    innerRef={[Function]}
                    onClick={[Function]}
                    size="m"
                    view="action"
                  >
                    Использовать .pdf
                  </lego-components_button>
                </Button>
              </div>
            </div>
          </div>
        </lego-components_modal>
      </Modal>
    </Dialog>
  </ConfirmDialog>
</ResourceRenameDialog>
`;
