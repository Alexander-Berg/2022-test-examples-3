// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`disableEditPromo 1`] = `
Object {
  "docActions": Object {
    "edit": Object {
      "editPromoDisabled": true,
    },
  },
  "type": "UPDATE_DOC_ACTIONS",
}
`;

exports[`goToPage should call CALL_HISTORY action with pushState 1`] = `
Array [
  Array [
    [Function],
  ],
  Array [
    Object {
      "method": "pushState",
      "query": Object {
        "page": 2,
      },
      "state": Object {},
      "type": "CALL_HISTORY",
    },
  ],
]
`;

exports[`goToPage should call CALL_HISTORY action with replaceState 1`] = `
Array [
  Array [
    [Function],
  ],
  Array [
    Object {
      "method": "replaceState",
      "query": Object {
        "page": 2,
      },
      "state": Object {},
      "type": "CALL_HISTORY",
    },
  ],
]
`;

exports[`goToPage should call CALL_HISTORY and UPDATE_CONTEXT actions 1`] = `
Array [
  Array [
    [Function],
  ],
  Array [
    Object {
      "method": "replaceState",
      "query": Object {
        "page": 3,
      },
      "state": Object {},
      "type": "CALL_HISTORY",
    },
  ],
  Array [
    Object {
      "context": Object {
        "pageChangeTimestamp": 12345678,
        "previousPage": 2,
      },
      "type": "UPDATE_CONTEXT",
    },
  ],
]
`;

exports[`goToPage should load neighbours in single page mode 1`] = `
Array [
  Array [
    [Function],
  ],
  Array [
    Object {
      "method": "pushState",
      "query": Object {
        "page": 7,
      },
      "state": Object {},
      "type": "CALL_HISTORY",
    },
  ],
]
`;

exports[`goToPage should switch to last page if page > last 1`] = `
Array [
  Array [
    [Function],
  ],
  Array [
    Object {
      "method": "pushState",
      "query": Object {
        "page": 5,
      },
      "state": Object {},
      "type": "CALL_HISTORY",
    },
  ],
]
`;

exports[`goToPage should switch to last page if page > last 2`] = `
Array [
  Array [
    [Function],
  ],
  Array [
    Object {
      "method": "pushState",
      "query": Object {
        "page": 5,
      },
      "state": Object {},
      "type": "CALL_HISTORY",
    },
  ],
]
`;

exports[`goToPage should switch to page 1 if page <= 0 1`] = `
Array [
  Array [
    [Function],
  ],
  Array [
    Object {
      "method": "pushState",
      "query": Object {
        "page": 1,
      },
      "state": Object {},
      "type": "CALL_HISTORY",
    },
  ],
]
`;

exports[`goToPage should switch to page 1 if page <= 0 2`] = `
Array [
  Array [
    [Function],
  ],
  Array [
    Object {
      "method": "pushState",
      "query": Object {
        "page": 1,
      },
      "state": Object {},
      "type": "CALL_HISTORY",
    },
  ],
]
`;

exports[`goToPageWithoutSize 1`] = `
Array [
  Array [
    Object {
      "doc": Object {
        "pages": Array [
          Object {
            "index": 1,
          },
          Object {
            "index": 2,
          },
          Object {
            "index": 3,
          },
          Object {
            "index": 4,
          },
          Object {
            "index": 5,
          },
          Object {
            "index": 6,
          },
        ],
      },
      "type": "UPDATE_DOC",
    },
  ],
  Array [
    [Function],
  ],
  Array [
    [Function],
  ],
]
`;

exports[`loadNeighboursFor should correctly handle out-of-bounds page 1`] = `
Array [
  1,
  2,
]
`;

exports[`loadNeighboursFor should correctly handle out-of-bounds page 2`] = `
Array [
  1,
  2,
]
`;

exports[`loadNeighboursFor should load neighbours 1`] = `
Array [
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
]
`;

exports[`loadNeighboursFor should not load neighbours because they're already loaded/loading 1`] = `
Array [
  1,
  2,
  3,
]
`;

exports[`mpfsStatus 1`] = `
Object {
  "method": "mpfs-status",
  "params": Object {
    "meta": undefined,
    "oid": "oid-123",
  },
  "type": "CALL_API",
}
`;

exports[`saveToDisk 1`] = `
Object {
  "method": "save-to-disk",
  "params": Object {
    "archivePath": "archive/path",
    "lang": "ru",
    "name": "name",
    "publish": "publish",
  },
  "type": "CALL_API",
}
`;

exports[`share 1`] = `
Object {
  "method": "share",
  "params": undefined,
  "type": "CALL_API",
}
`;

exports[`updateAction 1`] = `
Object {
  "docActions": Object {
    "save": Object {
      "allow": true,
      "buttonUrl": "some/button/url",
      "state": "READY",
    },
  },
  "type": "UPDATE_DOC_ACTIONS",
}
`;

exports[`updateAction 2`] = `
Object {
  "docActions": Object {
    "edit": Object {
      "allow": true,
      "url": "some/edit/url",
    },
  },
  "type": "UPDATE_DOC_ACTIONS",
}
`;

exports[`updateAction 3`] = `
Object {
  "docActions": Object {
    "share": Object {
      "allow": true,
      "state": "FAIL",
    },
  },
  "type": "UPDATE_DOC_ACTIONS",
}
`;

exports[`updateAction 4`] = `
Object {
  "docActions": Object {
    "print": Object {
      "allow": false,
      "state": "WAIT",
    },
  },
  "type": "UPDATE_DOC_ACTIONS",
}
`;

exports[`updateAction 5`] = `
Object {
  "docActions": Object {
    "download": Object {
      "allow": false,
    },
  },
  "type": "UPDATE_DOC_ACTIONS",
}
`;

exports[`updateActions 1`] = `[Function]`;

exports[`updateArchiveAction 1`] = `
Object {
  "fileActions": Object {
    "save": Object {
      "allow": true,
      "folderUrl": "/another/folder/urrrl",
      "name": "another-name.doc",
      "state": "READY",
    },
  },
  "type": "UPDATE_ARCHIVE_ACTIONS",
}
`;

exports[`updateArchiveAction 2`] = `
Object {
  "fileActions": Object {
    "download": Object {
      "allow": true,
    },
  },
  "type": "UPDATE_ARCHIVE_ACTIONS",
}
`;

exports[`updateArchivePath 1`] = `
Object {
  "path": "some/archive/path",
  "type": "UPDATE_ARCHIVE_PATH",
}
`;

exports[`updateArchiveSelectedFile 1`] = `
Object {
  "selectedFile": Object {
    "encrypted": true,
    "name": "file-name.ext",
    "path": "some-folder/another-folder/file-name.ext",
    "viewable": true,
  },
  "type": "UPDATE_ARCHIVE_SELECTED_FILE",
}
`;

exports[`updateCfg 1`] = `
Object {
  "cfg": Object {},
  "type": "UPDATE_CFG",
}
`;

exports[`updateDoc 1`] = `
Object {
  "doc": Object {},
  "type": "UPDATE_DOC",
}
`;

exports[`updateDocIframe 1`] = `[Function]`;

exports[`updateDocPage 1`] = `[Function]`;

exports[`updateDocStatus 1`] = `[Function]`;

exports[`updateOfficeEditorUrl 1`] = `[Function]`;

exports[`updateURL 1`] = `
Object {
  "hostname": "",
  "pathname": "",
  "query": Object {},
  "type": "UPDATE_URL",
}
`;

exports[`updateUser 1`] = `
Object {
  "type": "UPDATE_USER",
  "user": Object {},
}
`;
