// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshots Attachment all file types 1`] = `
<div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#ffe755",
        }
      }
    >
      7z
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#f29718",
        }
      }
    >
      ai
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#60605a",
        }
      }
    >
      appli...
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#ffe755",
        }
      }
    >
      archi...
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#eeece9",
        }
      }
    >
      attach
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#37a3e9",
        }
      }
    >
      audio
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#8f70d9",
        }
      }
    >
      avi
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#6794d3",
        }
      }
    >
      bmp
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#b1907e",
        }
      }
    >
      book
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#10af00",
        }
      }
    >
      cdr
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#989898",
        }
      }
    >
      css
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#207347",
        }
      }
    >
      csv
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#60605a",
        }
      }
    >
      disk
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#b1907e",
        }
      }
    >
      djvu
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#989898",
        }
      }
    >
      dll
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#2b579a",
        }
      }
    >
      doc
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#2b579a",
        }
      }
    >
      docx
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#60605a",
        }
      }
    >
      eml
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#b1907e",
        }
      }
    >
      epub
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#989898",
        }
      }
    >
      exe
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#b1907e",
        }
      }
    >
      fb2
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#e5001b",
        }
      }
    >
      flash
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment folder"
    style={Object {}}
  >
    <div />
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#60605a",
        }
      }
    >
      font
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#60605a",
        }
      }
    >
      gener...
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#6794d3",
        }
      }
    >
      gif
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#989898",
        }
      }
    >
      html
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#6794d3",
        }
      }
    >
      image
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#989898",
        }
      }
    >
      ini
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#6794d3",
        }
      }
    >
      jpg
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#989898",
        }
      }
    >
      js
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#60605a",
        }
      }
    >
      mail
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#1d82c5",
        }
      }
    >
      mov
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#37a3e9",
        }
      }
    >
      mp3
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#8f70d9",
        }
      }
    >
      mp4
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#37a3e9",
        }
      }
    >
      music
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#f47c1e",
        }
      }
    >
      odp
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#88bf77",
        }
      }
    >
      ods
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#33abdf",
        }
      }
    >
      odt
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#6794d3",
        }
      }
    >
      pcx
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#e75a5a",
        }
      }
    >
      pdf
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#37a3e9",
        }
      }
    >
      pls
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#6794d3",
        }
      }
    >
      png
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#d04727",
        }
      }
    >
      ppt
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#d04727",
        }
      }
    >
      pptx
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#376da3",
        }
      }
    >
      psd
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#ffe755",
        }
      }
    >
      rar
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#63abe1",
        }
      }
    >
      rtf
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#ffbe33",
        }
      }
    >
      sketch
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#8f70d9",
        }
      }
    >
      str
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#ff9900",
        }
      }
    >
      svg
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#a5a4a3",
        }
      }
    >
      text
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#6794d3",
        }
      }
    >
      tiff
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#33abdf",
        }
      }
    >
      txt
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#8f70d9",
        }
      }
    >
      video
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#e33933",
        }
      }
    >
      virus
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#37a3e9",
        }
      }
    >
      wav
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#37a3e9",
        }
      }
    >
      wma
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#8f70d9",
        }
      }
    >
      wmv
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#207347",
        }
      }
    >
      xls
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#207347",
        }
      }
    >
      xlsx
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#ffe755",
        }
      }
    >
      zip
    </div>
  </div>
</div>
`;

exports[`Snapshots Attachment all in one demo 1`] = `
<div>
  <div
    className="attachments-container"
  >
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
  </div>
  <div
    className="attachments-container"
  >
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Attachment all in one, dark side 1`] = `
<div
  className="is-dark phone-frame is-dark-theme"
>
  <div
    className="attachments-container"
  >
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
  </div>
  <div
    className="attachments-container"
  >
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext is-disk"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Attachment className prop 1`] = `
<div
  className="js-attachment-wrapper some-class-name"
  style={Object {}}
/>
`;

exports[`Snapshots Attachment isDisk, no ext, zero size 1`] = `
<div
  className="js-attachment-wrapper"
  style={Object {}}
>
  <div
    className="ext is-disk no-ext"
    style={
      Object {
        "backgroundColor": "#a5a4a3",
      }
    }
  />
  <div
    className={undefined}
  >
    name name
  </div>
</div>
`;

exports[`Snapshots Attachment letter 1`] = `
<div
  className="attachments-container"
>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#e75a5a",
        }
      }
    >
      pdf
    </div>
    <div
      className={undefined}
    >
      5 Гб
    </div>
    <div
      className={undefined}
    >
      Куча страниц, еще более длинное название файла
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#e75a5a",
        }
      }
    >
      pdf
    </div>
    <div
      className={undefined}
    >
      5 Гб
    </div>
    <div
      className={undefined}
    >
      Хлебные крошкиииииииииииииииии
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#e75a5a",
        }
      }
    >
      pdf
    </div>
    <div
      className={undefined}
    >
      5 Гб
    </div>
    <div
      className={undefined}
    >
      Супердлиннющееназваниефайла
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#1d82c5",
        }
      }
    >
      mov
    </div>
    <div
      className={undefined}
    >
      12 Мб
    </div>
    <div
      className={undefined}
    >
      0F86142B-43B7-46C2-B6A1-FD6A59E59A19
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#1d82c5",
        }
      }
    >
      mov
    </div>
    <div
      className={undefined}
    >
      5 Гб
    </div>
    <div
      className={undefined}
    >
      0F86142B-43B7-46C2-B6A1-FD6A59E59A19
    </div>
  </div>
</div>
`;

exports[`Snapshots Attachment letter with image 1`] = `
<div
  className="js-attachment-wrapper withPreview"
  style={
    Object {
      "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
    }
  }
>
  <div
    className="ext"
    style={
      Object {
        "backgroundColor": "#6794d3",
      }
    }
  >
    jpg
  </div>
</div>
`;

exports[`Snapshots Attachment list 1`] = `
<div
  className="attachments-container"
>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#207347",
        }
      }
    >
      xlsx
    </div>
    <div
      className={undefined}
    >
      1,2 Мб
    </div>
    <div
      className={undefined}
    >
      Таблица с данными
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#e75a5a",
        }
      }
    >
      pdf
    </div>
    <div
      className={undefined}
    >
      5 Гб
    </div>
    <div
      className={undefined}
    >
      Куча страниц, еще более длинное название файла
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#e75a5a",
        }
      }
    >
      pdf
    </div>
    <div
      className={undefined}
    >
      5 Гб
    </div>
    <div
      className={undefined}
    >
      Хлебные крошкиииииииииииииииии
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#e75a5a",
        }
      }
    >
      pdf
    </div>
    <div
      className={undefined}
    >
      5 Гб
    </div>
    <div
      className={undefined}
    >
      Супердлиннющееназваниефайла
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#1d82c5",
        }
      }
    >
      mov
    </div>
    <div
      className={undefined}
    >
      12 Мб
    </div>
    <div
      className={undefined}
    >
      0F86142B-43B7-46C2-B6A1-FD6A59E59A19
    </div>
  </div>
  <div
    className="js-attachment-wrapper inline-attachment"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#1d82c5",
        }
      }
    >
      mov
    </div>
    <div
      className={undefined}
    >
      5 Гб
    </div>
    <div
      className={undefined}
    >
      0F86142B-43B7-46C2-B6A1-FD6A59E59A19
    </div>
  </div>
</div>
`;

exports[`Snapshots Attachment list with image 1`] = `
<div
  className="js-attachment-wrapper withPreview"
  style={
    Object {
      "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
    }
  }
>
  <div
    className="ext"
    style={
      Object {
        "backgroundColor": "#6794d3",
      }
    }
  >
    jpg
  </div>
</div>
`;

exports[`Snapshots Attachment misc folders 1`] = `
<div>
  <div
    className="attachments-container"
  >
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          short name
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          not so short name
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          longlonglongname
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          very very long folder name
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          самое длинное название папки во всей истории
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          расписка_клиент
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          расписка_клиент и еще немного букв
        </div>
      </div>
    </div>
  </div>
  <div
    className="attachments-container"
  >
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          short name
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          not so short name
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          longlonglongname
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          very very long folder name
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          самое длинное название папки во всей истории
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          расписка_клиент
        </div>
      </div>
    </div>
    <div
      className="js-attachment-wrapper inline-attachment folder"
      style={Object {}}
    >
      <div>
        <div
          className={undefined}
        >
          расписка_клиент и еще немного букв
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Attachment non existing ext 1`] = `
<div
  className="js-attachment-wrapper"
  style={Object {}}
>
  <div
    className="ext"
    style={
      Object {
        "backgroundColor": "#a5a4a3",
      }
    }
  >
    mp9
  </div>
</div>
`;

exports[`Snapshots Attachment onClick prop 1`] = `
<div
  className="js-attachment-wrapper"
  onClick={[Function]}
  style={Object {}}
>
  <div
    className="ext"
    style={
      Object {
        "backgroundColor": "#33abdf",
      }
    }
  >
    txt
  </div>
  <div
    className={undefined}
  >
    click me
  </div>
</div>
`;

exports[`Snapshots Attachments disk only 1`] = `
<div
  className="phone-frame"
>
  <div
    aria-label={undefined}
    className="attachments"
    role="group"
  >
    <div
      aria-label="1 Кб"
      className="header"
      role="text"
    >
      
      1 Кб
      <div
        className="links"
      >
        <a
          aria-label={undefined}
          className="js-save-all-disk link is-disk"
          onClick={[Function]}
          role="button"
        />
      </div>
    </div>
    <ul
      aria-label={undefined}
      className="js-attachments items"
      role="list"
    >
      <li
        aria-hidden={true}
        className="placeholder"
      />
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        aria-hidden={true}
        className="placeholder"
      />
    </ul>
  </div>
</div>
`;

exports[`Snapshots Attachments few 1`] = `
<div
  className="phone-frame"
>
  <div
    aria-label={undefined}
    className="attachments"
    role="group"
  >
    <div
      aria-label="2 файла, 1 Кб"
      className="header"
      role="text"
    >
      2 файла
      , 
      1 Кб
      <div
        className="links"
      >
        <a
          aria-label={undefined}
          className="link is-download"
          onClick={[Function]}
          role="button"
        />
        <a
          aria-label={undefined}
          className="js-save-all-disk link is-disk"
          onClick={[Function]}
          role="button"
        />
      </div>
    </div>
    <ul
      aria-label={undefined}
      className="js-attachments items"
      role="list"
    >
      <li
        aria-hidden={true}
        className="placeholder"
      />
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        aria-hidden={true}
        className="placeholder"
      />
    </ul>
  </div>
</div>
`;

exports[`Snapshots Attachments header with only count (no disk, no download, no size) 1`] = `
<div
  className="phone-frame"
>
  <div
    aria-label={undefined}
    className="attachments"
    role="group"
  >
    <div
      aria-label="8 files"
      className="header"
      role="text"
    >
      8 files
      
      <div
        className="links"
      />
    </div>
    <ul
      aria-label={undefined}
      className="js-attachments items"
      role="list"
    >
      <li
        aria-hidden={true}
        className="placeholder"
      />
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        aria-hidden={true}
        className="placeholder"
      />
    </ul>
  </div>
</div>
`;

exports[`Snapshots Attachments loading 1`] = `
<div
  className="phone-frame"
>
  <div
    aria-label={undefined}
    className="attachments"
    role="group"
  >
    <div
      aria-label="1 файл"
      className="header"
      role="text"
    >
      1 файл
      
      <div
        className="links"
      >
        <a
          aria-label={undefined}
          className="link is-download"
          onClick={[Function]}
          role="button"
        />
        <a
          aria-label={undefined}
          className="js-save-all-disk link is-disk is-loading"
          onClick={[Function]}
          role="button"
        >
          <div
            className="js-save-all-disk-loading loading"
          >
            <svg
              className="rotating"
              height={18}
              viewBox="0 0 32 32"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 0v1.846c7.817 0 14.154 6.337 14.154 14.154s-6.337 14.154-14.154 14.154v1.846c8.837 0 16-7.163 16-16s-7.163-16-16-16z"
                fill="#666666"
              />
            </svg>
          </div>
        </a>
      </div>
    </div>
    <ul
      aria-label={undefined}
      className="js-attachments items"
      role="list"
    >
      <li
        aria-hidden={true}
        className="placeholder"
      />
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        aria-hidden={true}
        className="placeholder"
      />
    </ul>
  </div>
</div>
`;

exports[`Snapshots Attachments loading, disk only 1`] = `
<div
  className="phone-frame"
>
  <div
    aria-label={undefined}
    className="attachments"
    role="group"
  >
    <div
      aria-label="2 файла, 1 Кб"
      className="header"
      role="text"
    >
      2 файла
      , 
      1 Кб
      <div
        className="links"
      >
        <a
          aria-label={undefined}
          className="js-save-all-disk link is-disk is-loading"
          onClick={[Function]}
          role="button"
        >
          <div
            className="js-save-all-disk-loading loading"
          >
            <svg
              className="rotating"
              height={18}
              viewBox="0 0 32 32"
              width={18}
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 0v1.846c7.817 0 14.154 6.337 14.154 14.154s-6.337 14.154-14.154 14.154v1.846c8.837 0 16-7.163 16-16s-7.163-16-16-16z"
                fill="#666666"
              />
            </svg>
          </div>
        </a>
      </div>
    </div>
    <ul
      aria-label={undefined}
      className="js-attachments items"
      role="list"
    >
      <li
        aria-hidden={true}
        className="placeholder"
      />
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        aria-hidden={true}
        className="placeholder"
      />
    </ul>
  </div>
</div>
`;

exports[`Snapshots Attachments many 1`] = `
<div
  className="phone-frame"
>
  <div
    aria-label={undefined}
    className="attachments"
    role="group"
  >
    <div
      aria-label="10 файлов, 1 Кб"
      className="header"
      role="text"
    >
      10 файлов
      , 
      1 Кб
      <div
        className="links"
      >
        <a
          aria-label={undefined}
          className="link is-download"
          onClick={[Function]}
          role="button"
        />
        <a
          aria-label={undefined}
          className="js-save-all-disk link is-disk"
          onClick={[Function]}
          role="button"
        />
      </div>
    </div>
    <ul
      aria-label={undefined}
      className="js-attachments items"
      role="list"
    >
      <li
        aria-hidden={true}
        className="placeholder"
      />
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        aria-hidden={true}
        className="placeholder"
      />
    </ul>
  </div>
</div>
`;

exports[`Snapshots Attachments many, dark side 1`] = `
<div
  className="is-dark phone-frame is-dark-theme"
>
  <div
    aria-label={undefined}
    className="attachments"
    role="group"
  >
    <div
      aria-label="10 файлов, 1 Кб"
      className="header"
      role="text"
    >
      10 файлов
      , 
      1 Кб
      <div
        className="links"
      >
        <a
          aria-label={undefined}
          className="link is-download"
          onClick={[Function]}
          role="button"
        />
        <a
          aria-label={undefined}
          className="js-save-all-disk link is-disk"
          onClick={[Function]}
          role="button"
        />
      </div>
    </div>
    <ul
      aria-label={undefined}
      className="js-attachments items"
      role="list"
    >
      <li
        aria-hidden={true}
        className="placeholder"
      />
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        aria-hidden={true}
        className="placeholder"
      />
    </ul>
  </div>
</div>
`;

exports[`Snapshots Attachments no disk 1`] = `
<div
  className="phone-frame"
>
  <div
    aria-label={undefined}
    className="attachments"
    role="group"
  >
    <div
      aria-label="1 Кб"
      className="header"
      role="text"
    >
      
      1 Кб
      <div
        className="links"
      />
    </div>
    <ul
      aria-label={undefined}
      className="js-attachments items"
      role="list"
    >
      <li
        aria-hidden={true}
        className="placeholder"
      />
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        aria-hidden={true}
        className="placeholder"
      />
    </ul>
  </div>
</div>
`;

exports[`Snapshots Attachments no header (no disk, no download, no size) 1`] = `
<div
  className="phone-frame"
>
  <div
    aria-label={undefined}
    className="attachments"
    role="group"
  >
    <div
      className="header"
    />
    <ul
      aria-label={undefined}
      className="js-attachments items"
      role="list"
    >
      <li
        aria-hidden={true}
        className="placeholder"
      />
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        className={undefined}
      >
        <div
          className="js-attachment-wrapper inline-attachment"
          style={Object {}}
        >
          <div
            className="ext"
            style={
              Object {
                "backgroundColor": "#33abdf",
              }
            }
          >
            txt
          </div>
          <div
            className={undefined}
          >
            1 Кб
          </div>
          <div
            className={undefined}
          >
            filename
          </div>
        </div>
      </li>
      <li
        aria-hidden={true}
        className="placeholder"
      />
    </ul>
  </div>
</div>
`;

exports[`Snapshots BasePopup alignment bottom 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots BasePopup alignment middle 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots BasePopup alignment top 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots BasePopup default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots BasePopup imposible to close 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots BasePopup many lines 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots Button default 1`] = `
<button
  className="button"
  onClick={[Function]}
>
  <div>
    <div
      className="button-content"
    >
      Button
    </div>
  </div>
</button>
`;

exports[`Snapshots Button link 1`] = `
<a
  className="button"
  href="javascript:void(0)"
  onClick={[Function]}
  target="_blank"
>
  <div>
    <div
      className="button-content"
    >
      Link
    </div>
  </div>
</a>
`;

exports[`Snapshots Button outlined 1`] = `
<button
  className="button button_outlined"
  onClick={[Function]}
>
  <div>
    <div
      className="button-content"
    >
      Outlined
    </div>
  </div>
</button>
`;

exports[`Snapshots Button primary default 1`] = `
<button
  className="button primary"
  onClick={[Function]}
>
  <div>
    <div
      className="button-content"
    >
      Button
    </div>
  </div>
</button>
`;

exports[`Snapshots Button primary link 1`] = `
<a
  className="button primary"
  href="javascript:void(0)"
  onClick={[Function]}
  target="_blank"
>
  <div>
    <div
      className="button-content"
    >
      Link
    </div>
  </div>
</a>
`;

exports[`Snapshots CalendarBubble bubble 1`] = `
<div>
  <div>
    <div
      className="bubble calendarBubble"
      onClick={[Function]}
    >
      <div
        className="title"
      >
        Календарь в почте
      </div>
      <div
        className="subtitle"
      >
        Теперь вы можете ставить встречи не выходя из почты
      </div>
      <div
        className="js-calendar-bubble-close close"
        onClick={[Function]}
      />
    </div>
  </div>
</div>
`;

exports[`Snapshots CalendarBubble narrow screen 1`] = `
<div
  style={
    Object {
      "width": 280,
    }
  }
>
  <div>
    <div>
      <div
        className="bubble calendarBubble"
        onClick={[Function]}
      >
        <div
          className="title"
        >
          Календарь в почте
        </div>
        <div
          className="subtitle"
        >
          Теперь вы можете ставить встречи не выходя из почты
        </div>
        <div
          className="js-calendar-bubble-close close"
          onClick={[Function]}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Checkbox default 1`] = `
<button
  className="checkbox"
  onClick={[Function]}
>
  <span
    className="check"
  />
  <span
    className="label"
  >
    Lorem ipsum
  </span>
</button>
`;

exports[`Snapshots Checkbox without label 1`] = `
<button
  className="checkbox"
  onClick={[Function]}
>
  <span
    className="check"
  />
</button>
`;

exports[`Snapshots Classifier type android 1`] = `
<span>
  <div
    className="classifier"
  >
    <div
      className="classifier_body"
    >
      <div
        className="title"
      >
        Это рассылка?
      </div>
      <div
        className="subtitle"
      >
        Яндекс Почта классифицировала данное письма как Рассылку.
      </div>
    </div>
    <div
      className="controls controls_android"
    >
      <div
        className="btn_accept btn"
        onClick={[Function]}
      >
        Рассылка
      </div>
      <div
        className="btn_deny btn"
        onClick={[Function]}
      >
        Отмена
      </div>
    </div>
  </div>
</span>
`;

exports[`Snapshots Classifier type dark android 1`] = `
<span>
  <div
    className="classifier dark"
  >
    <div
      className="classifier_body"
    >
      <div
        className="title"
      >
        Это рассылка?
      </div>
      <div
        className="subtitle"
      >
        Яндекс Почта классифицировала данное письма как Рассылку.
      </div>
    </div>
    <div
      className="controls controls_android"
    >
      <div
        className="btn_accept btn"
        onClick={[Function]}
      >
        Рассылка
      </div>
      <div
        className="btn_deny btn"
        onClick={[Function]}
      >
        Отмена
      </div>
    </div>
  </div>
</span>
`;

exports[`Snapshots Classifier type dark ios 1`] = `
<span>
  <div
    className="classifier dark"
  >
    <div
      className="classifier_body"
    >
      <div
        className="title"
      >
        Это рассылка?
      </div>
      <div
        className="subtitle"
      >
        Яндекс Почта классифицировала данное письма как Рассылку.
      </div>
    </div>
    <div
      className="controls controls_ios"
    >
      <div
        className="btn_accept btn"
        onClick={[Function]}
      >
        Рассылка
      </div>
      <div
        className="btn_deny btn"
        onClick={[Function]}
      >
        Отмена
      </div>
    </div>
  </div>
</span>
`;

exports[`Snapshots Classifier type ios 1`] = `
<span>
  <div
    className="classifier"
  >
    <div
      className="classifier_body"
    >
      <div
        className="title"
      >
        Это рассылка?
      </div>
      <div
        className="subtitle"
      >
        Яндекс Почта классифицировала данное письма как Рассылку.
      </div>
    </div>
    <div
      className="controls controls_ios"
    >
      <div
        className="btn_accept btn"
        onClick={[Function]}
      >
        Рассылка
      </div>
      <div
        className="btn_deny btn"
        onClick={[Function]}
      >
        Отмена
      </div>
    </div>
  </div>
</span>
`;

exports[`Snapshots Classifier-new → CustomPopup default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots Classifier-new → HideBanner default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
  <div>
    <div
      className="hide-banner banner"
    >
      <div
        className="content"
      >
        <button
          className="close close"
          onClick={[Function]}
        >
          <div
            className="substrate"
          />
          <svg
            height={10}
            viewBox="0 0 10 10"
            width={10}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6.212 5l2.661 2.661a.857.857 0 0 1-1.212 1.212L5 6.213l-2.661 2.66a.857.857 0 0 1-1.212-1.212L3.787 5l-2.66-2.661a.857.857 0 0 1 1.212-1.212L5 3.787l2.661-2.66a.857.857 0 0 1 1.212 1.212L6.213 5z"
            />
          </svg>
        </button>
        <p
          className="text"
        >
          Очень жаль, что вы не ответили, напишите почему вы закрыли плашку?
        </p>
        <ul
          className="list"
        >
          <li
            className="list-item"
            onClick={[Function]}
          >
            <img
              alt=""
              src={
                Object {
                  "process": [Function],
                }
              }
              srcSet="[object Object] 2x"
              title=""
            />
            <span>
              Не понимаю вопрос
            </span>
          </li>
          <li
            className="list-item"
            onClick={[Function]}
          >
            <img
              alt=""
              src={
                Object {
                  "process": [Function],
                }
              }
              srcSet="[object Object] 2x"
              title=""
            />
            <span>
              Мешает
            </span>
          </li>
        </ul>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Classifier-new → MainBanner default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
  <div>
    <div
      className="main-banner banner"
    >
      <div
        className="content"
      >
        <h6
          className="title"
        >
          Это письмо от человека?
        </h6>
        <p
          className="text"
        >
          С большой вероятностью, это письмо написал человек. Помогите Яндекс.Почте — это верно?
        </p>
        <div
          className="buttons"
        >
          <div
            className="buttons-left"
          >
            <button
              className="button primary"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Да, верно
                </div>
              </div>
            </button>
            <button
              className="button"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Нет
                </div>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Classifier-new → MainBanner default, with close & custom buttons 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
  <div>
    <div
      className="main-banner banner"
    >
      <div
        className="content"
      >
        <button
          className="close close"
          onClick={[Function]}
        >
          <div
            className="substrate"
          />
          <svg
            height={10}
            viewBox="0 0 10 10"
            width={10}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6.212 5l2.661 2.661a.857.857 0 0 1-1.212 1.212L5 6.213l-2.661 2.66a.857.857 0 0 1-1.212-1.212L3.787 5l-2.66-2.661a.857.857 0 0 1 1.212-1.212L5 3.787l2.661-2.66a.857.857 0 0 1 1.212 1.212L6.213 5z"
            />
          </svg>
        </button>
        <h6
          className="title"
        >
          Это письмо от человека?
        </h6>
        <p
          className="text"
        >
          С большой вероятностью, это письмо написал человек. Помогите Яндекс.Почте — это верно?
        </p>
        <div
          className="buttons"
        >
          <div
            className="buttons-left"
          >
            <button
              className="button primary"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Да, верно
                </div>
              </div>
            </button>
            <button
              className="button"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Нет
                </div>
              </div>
            </button>
          </div>
          <div
            className="buttons-right"
          >
            <button
              className="button"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Свой вариант
                </div>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Classifier-new → MainBanner default, with close button 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
  <div>
    <div
      className="main-banner banner"
    >
      <div
        className="content"
      >
        <button
          className="close close"
          onClick={[Function]}
        >
          <div
            className="substrate"
          />
          <svg
            height={10}
            viewBox="0 0 10 10"
            width={10}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6.212 5l2.661 2.661a.857.857 0 0 1-1.212 1.212L5 6.213l-2.661 2.66a.857.857 0 0 1-1.212-1.212L3.787 5l-2.66-2.661a.857.857 0 0 1 1.212-1.212L5 3.787l2.661-2.66a.857.857 0 0 1 1.212 1.212L6.213 5z"
            />
          </svg>
        </button>
        <h6
          className="title"
        >
          Это письмо от человека?
        </h6>
        <p
          className="text"
        >
          С большой вероятностью, это письмо написал человек. Помогите Яндекс.Почте — это верно?
        </p>
        <div
          className="buttons"
        >
          <div
            className="buttons-left"
          >
            <button
              className="button primary"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Да, верно
                </div>
              </div>
            </button>
            <button
              className="button"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Нет
                </div>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Classifier-new → MainBanner default, with custom button 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
  <div>
    <div
      className="main-banner banner"
    >
      <div
        className="content"
      >
        <h6
          className="title"
        >
          Это письмо от человека?
        </h6>
        <p
          className="text"
        >
          С большой вероятностью, это письмо написал человек. Помогите Яндекс.Почте — это верно?
        </p>
        <div
          className="buttons"
        >
          <div
            className="buttons-left"
          >
            <button
              className="button primary"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Да, верно
                </div>
              </div>
            </button>
            <button
              className="button"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Нет
                </div>
              </div>
            </button>
          </div>
          <div
            className="buttons-right"
          >
            <button
              className="button"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Свой вариант
                </div>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Clickable with context (android) 1`] = `
<div
  onClick={[Function]}
>
  <button>
    CLICK ME
  </button>
</div>
`;

exports[`Snapshots Clickable with context (ios) 1`] = `
<div
  onClick={[Function]}
>
  <button>
    CLICK ME
  </button>
</div>
`;

exports[`Snapshots Clickable without context 1`] = `
<div
  onClick={[Function]}
>
  <button>
    CLICK ME
  </button>
</div>
`;

exports[`Snapshots Dropdown default 1`] = `
<div
  className={undefined}
>
  <button
    className={undefined}
    onClick={[Function]}
  >
    Show/hide
  </button>
  <div
    className={undefined}
  >
    target
  </div>
</div>
`;

exports[`Snapshots MenuPane default 1`] = `
<div
  style={
    Object {
      "background": "#ddd",
      "height": 768,
      "position": "relative",
      "width": 1024,
    }
  }
>
  <div
    style={
      Object {
        "position": "absolute",
        "zIndex": 100,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Show/hide
    </button>
  </div>
</div>
`;

exports[`Snapshots Newsletters → MessagePromo default 1`] = `
<div
  className="promo"
>
  <div
    className="body"
  >
    <button
      className="close close"
      onClick={[Function]}
    >
      <div
        className="substrate"
      />
      <svg
        height={14}
        viewBox="0 0 10 10"
        width={14}
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M6.212 5l2.661 2.661a.857.857 0 0 1-1.212 1.212L5 6.213l-2.661 2.66a.857.857 0 0 1-1.212-1.212L3.787 5l-2.66-2.661a.857.857 0 0 1 1.212-1.212L5 3.787l2.661-2.66a.857.857 0 0 1 1.212 1.212L6.213 5z"
        />
      </svg>
    </button>
    <div
      className="content"
    >
      <div
        className="content-info"
      >
        <div
          className="info"
        >
          <div
            className="info-avatar"
          >
            <div
              className="avatar"
            >
              <img
                alt=""
                height="100%"
                src="http://lorempixel.com/400/400/cats?0"
                title=""
                width="100%"
              />
            </div>
          </div>
          <div
            className="info-title"
          >
            <p
              className="title"
            >
              <span
                className="title-text"
              >
                Больше не получать рекламные письма от
              </span>
              <span
                className="title-name"
              >
                ООО «Беспощадное Очень Очень Длинное Название»
              </span>
            </p>
          </div>
        </div>
      </div>
      <div
        className="content-actions"
      >
        <div
          className="actions"
        >
          <div
            className="actions-item is-main"
          >
            <button
              className="button button is-primary primary"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Отписаться
                </div>
              </div>
            </button>
          </div>
          <div
            className="actions-item is-secondary"
          >
            <button
              className="button button"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Я это читаю
                </div>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Newsletters → MessagePromo subscribe 1`] = `
<div
  className="promo is-subscribe"
>
  <div
    className="body"
  >
    <button
      className="close close"
      onClick={[Function]}
    >
      <div
        className="substrate"
      />
      <svg
        height={14}
        viewBox="0 0 10 10"
        width={14}
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M6.212 5l2.661 2.661a.857.857 0 0 1-1.212 1.212L5 6.213l-2.661 2.66a.857.857 0 0 1-1.212-1.212L3.787 5l-2.66-2.661a.857.857 0 0 1 1.212-1.212L5 3.787l2.661-2.66a.857.857 0 0 1 1.212 1.212L6.213 5z"
        />
      </svg>
    </button>
    <div
      className="content"
    >
      <div
        className="content-info"
      >
        <div
          className="info"
        >
          <div
            className="info-avatar"
          >
            <div
              className="avatar"
            >
              <img
                alt=""
                height="100%"
                src="http://lorempixel.com/400/400/cats?0"
                title=""
                width="100%"
              />
            </div>
          </div>
          <div
            className="info-title"
          >
            <p
              className="title"
            >
              <span
                className="title-text"
              >
                Вы уже отписаны от
              </span>
              <span
                className="title-name"
              >
                ООО «Беспощадное Очень Очень Длинное Название»
              </span>
            </p>
          </div>
        </div>
      </div>
      <div
        className="content-actions"
      >
        <div
          className="actions"
        >
          <div
            className="actions-item is-main"
          >
            <button
              className="button button is-primary primary"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Активировать рассылку
                </div>
              </div>
            </button>
          </div>
          <div
            className="actions-item is-secondary"
          >
            <button
              className="button button"
              onClick={[Function]}
            >
              <div>
                <div
                  className="button-content"
                >
                  Я это не читаю
                </div>
              </div>
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Newsletters → SubscribePopup default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots Newsletters → SubscribeSuccessPopup default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots Newsletters → UnsubscribePopup default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots Newsletters → UnsubscribeSuccessPopup default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots NotificationToast alert toast with icon, impossible to close 1`] = `
<div
  style={
    Object {
      "background": "#ddd",
      "height": 768,
      "position": "relative",
      "width": 1024,
    }
  }
>
  <div
    style={
      Object {
        "position": "absolute",
        "zIndex": 100,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Show/hide
    </button>
  </div>
</div>
`;

exports[`Snapshots NotificationToast default 1`] = `
<div
  style={
    Object {
      "background": "#ddd",
      "height": 768,
      "position": "relative",
      "width": 1024,
    }
  }
>
  <div
    style={
      Object {
        "position": "absolute",
        "zIndex": 100,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Show/hide
    </button>
  </div>
</div>
`;

exports[`Snapshots NotificationToast toast with action line 1`] = `
<div
  style={
    Object {
      "background": "#ddd",
      "height": 768,
      "position": "relative",
      "width": 1024,
    }
  }
>
  <div
    style={
      Object {
        "position": "absolute",
        "zIndex": 100,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Show/hide
    </button>
  </div>
</div>
`;

exports[`Snapshots NotificationToast toast with icon 1`] = `
<div
  style={
    Object {
      "background": "#ddd",
      "height": 768,
      "position": "relative",
      "width": 1024,
    }
  }
>
  <div
    style={
      Object {
        "position": "absolute",
        "zIndex": 100,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Show/hide
    </button>
  </div>
</div>
`;

exports[`Snapshots NotificationToast toast with icon and action line 1`] = `
<div
  style={
    Object {
      "background": "#ddd",
      "height": 768,
      "position": "relative",
      "width": 1024,
    }
  }
>
  <div
    style={
      Object {
        "position": "absolute",
        "zIndex": 100,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Show/hide
    </button>
  </div>
</div>
`;

exports[`Snapshots NotificationToast toast with icon and action line, close with delay 1`] = `
<div
  style={
    Object {
      "background": "#ddd",
      "height": 768,
      "position": "relative",
      "width": 1024,
    }
  }
>
  <div
    style={
      Object {
        "position": "absolute",
        "zIndex": 100,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Show/hide
    </button>
  </div>
</div>
`;

exports[`Snapshots NotificationToast toast with icon, impossible to close 1`] = `
<div
  style={
    Object {
      "background": "#ddd",
      "height": 768,
      "position": "relative",
      "width": 1024,
    }
  }
>
  <div
    style={
      Object {
        "position": "absolute",
        "zIndex": 100,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Show/hide
    </button>
  </div>
</div>
`;

exports[`Snapshots NotificationToast toast, impossible to close 1`] = `
<div
  style={
    Object {
      "background": "#ddd",
      "height": 768,
      "position": "relative",
      "width": 1024,
    }
  }
>
  <div
    style={
      Object {
        "position": "absolute",
        "zIndex": 100,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Show/hide
    </button>
  </div>
</div>
`;

exports[`Snapshots Notifications → Banner default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
  <div>
    <div
      className="banner"
    >
      <div
        className="content"
      >
        <button
          className="close close"
          onClick={[Function]}
        >
          <div
            className="substrate"
          />
          <svg
            height={10}
            viewBox="0 0 10 10"
            width={10}
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M6.212 5l2.661 2.661a.857.857 0 0 1-1.212 1.212L5 6.213l-2.661 2.66a.857.857 0 0 1-1.212-1.212L3.787 5l-2.66-2.661a.857.857 0 0 1 1.212-1.212L5 3.787l2.661-2.66a.857.857 0 0 1 1.212 1.212L6.213 5z"
            />
          </svg>
        </button>
        Lorem ipsum dolor, sit amet consectetur adipisicing elit.
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Notifications → Banner default, impossible to close 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
  <div>
    <div
      className="banner"
    >
      <div
        className="content"
      >
        Lorem ipsum dolor, sit amet consectetur adipisicing elit.
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Notifications → Popup default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots Notifications → Popup default, impossible to close 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots Notifications → Popup fullscreen 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots Notifications → Popup fullscreen, impossible to close 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots OfflineBubble offline bubble 1`] = `
<div
  style={
    Object {
      "width": 280,
    }
  }
>
  <div>
    <div
      className="bubble offlineBubble"
      onClick={[Function]}
    >
      <div
        className="text"
      >
        Теперь Почта умеет работать в офлайн-режиме: вы сможете читать загруженные письма без интернета
      </div>
      <div
        className="buttons"
      >
        <button
          className="button buttons-close"
          onClick={[Function]}
        >
          <div>
            <div
              className="button-content"
            >
              Отключить
            </div>
          </div>
        </button>
        <button
          className="button buttons-agree"
          onClick={[Function]}
        >
          <div>
            <div
              className="button-content"
            >
              Отлично!
            </div>
          </div>
        </button>
      </div>
      <div
        className="js-offline-bubble-close close"
        onClick={[Function]}
      />
    </div>
  </div>
</div>
`;

exports[`Snapshots OptinSubscriptionsBubble bubble 1`] = `
<div
  className="root"
  onClick={[Function]}
>
  <div
    className="icon"
  />
  <div
    className="title"
  >
    Появились новые рассылки
  </div>
  <div
    className="js-optin-subscriptions-bubble-close close"
    onClick={[Function]}
  />
</div>
`;

exports[`Snapshots OptinSubscriptionsBubble narrow screen 1`] = `
<div
  style={
    Object {
      "width": 320,
    }
  }
>
  <div
    className="root"
    onClick={[Function]}
  >
    <div
      className="icon"
    />
    <div
      className="title"
    >
      Появились новые рассылки
    </div>
    <div
      className="js-optin-subscriptions-bubble-close close"
      onClick={[Function]}
    />
  </div>
</div>
`;

exports[`Snapshots PhishingAlert dark mode 1`] = `
<div
  style={
    Object {
      "width": 768,
    }
  }
>
  <div
    className="phishingAlert-header is-dark-theme"
  >
    <div
      className="phishingAlert-header_image"
    />
    <div
      className="phishingAlert-header_title"
    >
      Яндекс.Почта считает это письмо мошенническим
    </div>
  </div>
  <div
    className="phishingAlert-body is-dark-theme"
  >
    <div
      className="phishingAlert-body_text"
    >
      Не отвечайте на него и не совершайте никаких действий, которые описаны в тексте. Рекомендуем удалить это письмо.
    </div>
    <div
      className="phishingAlert-buttons"
    >
      <button
        className="button phishingAlert-buttons_action primary"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Удалить письмо
          </div>
        </div>
      </button>
      <button
        className="button phishingAlert-buttons_info"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Подробнее
          </div>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Snapshots PhishingAlert narrow screen 1`] = `
<div
  className="left-column"
>
  <div
    className="phishingAlert-header"
  >
    <div
      className="phishingAlert-header_image"
    />
    <div
      className="phishingAlert-header_title"
    >
      Яндекс.Почта считает это письмо мошенническим
    </div>
  </div>
  <div
    className="phishingAlert-body"
  >
    <div
      className="phishingAlert-body_text"
    >
      Не отвечайте на него и не совершайте никаких действий, которые описаны в тексте. Рекомендуем удалить это письмо.
    </div>
    <div
      className="phishingAlert-buttons"
    >
      <button
        className="button phishingAlert-buttons_action primary"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Удалить письмо
          </div>
        </div>
      </button>
      <button
        className="button phishingAlert-buttons_info"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Подробнее
          </div>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Snapshots PhishingAlert wide screen 1`] = `
<div
  style={
    Object {
      "width": 768,
    }
  }
>
  <div
    className="phishingAlert-header"
  >
    <div
      className="phishingAlert-header_image"
    />
    <div
      className="phishingAlert-header_title"
    >
      Яндекс.Почта считает это письмо мошенническим
    </div>
  </div>
  <div
    className="phishingAlert-body"
  >
    <div
      className="phishingAlert-body_text"
    >
      Не отвечайте на него и не совершайте никаких действий, которые описаны в тексте. Рекомендуем удалить это письмо.
    </div>
    <div
      className="phishingAlert-buttons"
    >
      <button
        className="button phishingAlert-buttons_action primary"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Удалить письмо
          </div>
        </div>
      </button>
      <button
        className="button phishingAlert-buttons_info"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Подробнее
          </div>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Snapshots Plus active 1`] = `
<div
  className="left-column"
>
  <a
    className="plus"
    href="https://plus.yandex.ru"
    target="_blank"
  >
    <div
      className="sign"
    />
    <div
      className="title"
    >
      Яндекс.Плюс
    </div>
    <div
      className="subtitle"
    >
      Активен
    </div>
  </a>
</div>
`;

exports[`Snapshots Plus custom titles active 1`] = `
<div
  className="left-column"
>
  <a
    className="plus"
    href="https://plus.yandex.ru"
    target="_blank"
  >
    <div
      className="sign"
    />
    <div
      className="title"
    >
      Yandex.Plus
    </div>
    <div
      className="subtitle"
    >
      Enabled
    </div>
  </a>
</div>
`;

exports[`Snapshots Plus custom titles inactive 1`] = `
<div
  className="left-column"
>
  <a
    className="plus"
    href="https://plus.yandex.ru"
    target="_blank"
  >
    <div
      className="title"
    >
      Enable Yandex.Plus
    </div>
    <div
      className="subtitle"
    >
      Discounts on Taxi, full access to Music, and more
    </div>
  </a>
</div>
`;

exports[`Snapshots Plus inactive 1`] = `
<div
  className="left-column"
>
  <a
    className="plus"
    href="https://plus.yandex.ru"
    target="_blank"
  >
    <div
      className="title"
    >
      Включить Яндекс.Плюс
    </div>
    <div
      className="subtitle"
    >
      Скидки в Такси, полный доступ к Музыке и другое
    </div>
  </a>
</div>
`;

exports[`Snapshots PopupCommon default 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
</div>
`;

exports[`Snapshots QuickReplyInput dark-themed 1`] = `
<div
  className="container container_dark"
>
  <div
    className="quickReplyInput quickReplyInput_dark quickReplyInput"
  >
    <span
      aria-hidden={true}
      aria-label="YOAI_ReactQuickReplyIcon"
      className="quickReply-icon"
    >
      <svg
        height="14"
        width="15"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M6.19 3.33v-2.1c0-.56-.46-1-1.03-1-.27 0-.53.1-.73.29L.3 4.62a.98.98 0 0 0 0 1.41l4.14 4.1c.4.4 1.05.4 1.45.02.2-.2.3-.45.3-.72v-2.1c3.95 0 6.12 2.79 6.93 5.05.12.33.27.96.76.96.34 0 .51-.67.51-2 0-4.43-3.67-8.01-8.2-8.01z"
        />
      </svg>
    </span>
    <div
      className="quickReplyInput-scrollBoundary"
    >
      <div
        aria-label="YOAI_ReactQuickReplyTextField"
        className="quickReplyInput-textarea"
        contentEditable="true"
        dangerouslySetInnerHTML={
          Object {
            "__html": undefined,
          }
        }
        id={undefined}
        onBlur={[Function]}
        onFocus={undefined}
        onInput={[Function]}
        placeholder="Быстрый ответ..."
        role="textbox"
      />
    </div>
    <span
      aria-disabled={true}
      aria-label="YOAI_ReactQuickReplySendButton"
      className="Tappable-inactive quickReplyInput-sendButton"
      disabled={undefined}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseMove={[Function]}
      onMouseOut={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      role="button"
      style={
        Object {
          "KhtmlUserSelect": "none",
          "MozUserSelect": "none",
          "WebkitTapHighlightColor": "rgba(0,0,0,0)",
          "WebkitTouchCallout": "none",
          "WebkitUserSelect": "none",
          "cursor": "pointer",
          "msUserSelect": "none",
          "userSelect": "none",
        }
      }
    >
      <span
        className="quickReplyInput-sendButton-icon"
      >
        <svg
          height="14"
          width="12"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.707.293a1 1 0 0 0-1.414 0l-5 5a1 1 0 0 0 1.414 1.414L5 3.414V13a1 1 0 1 0 2 0V3.414l3.293 3.293a1 1 0 1 0 1.414-1.414l-5-5z"
            fill="#a6a6a6"
          />
        </svg>
      </span>
    </span>
    <div
      className="quickReplyInput-bottom-padding"
    />
  </div>
</div>
`;

exports[`Snapshots QuickReplyInput default 1`] = `
<div
  className="container"
>
  <div
    className="quickReplyInput quickReplyInput"
  >
    <span
      aria-hidden={true}
      aria-label="YOAI_ReactQuickReplyIcon"
      className="quickReply-icon"
    >
      <svg
        height="14"
        width="15"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M6.19 3.33v-2.1c0-.56-.46-1-1.03-1-.27 0-.53.1-.73.29L.3 4.62a.98.98 0 0 0 0 1.41l4.14 4.1c.4.4 1.05.4 1.45.02.2-.2.3-.45.3-.72v-2.1c3.95 0 6.12 2.79 6.93 5.05.12.33.27.96.76.96.34 0 .51-.67.51-2 0-4.43-3.67-8.01-8.2-8.01z"
        />
      </svg>
    </span>
    <div
      className="quickReplyInput-scrollBoundary"
    >
      <div
        aria-label="YOAI_ReactQuickReplyTextField"
        className="quickReplyInput-textarea"
        contentEditable="true"
        dangerouslySetInnerHTML={
          Object {
            "__html": undefined,
          }
        }
        id={undefined}
        onBlur={[Function]}
        onFocus={undefined}
        onInput={[Function]}
        placeholder="Быстрый ответ..."
        role="textbox"
      />
    </div>
    <span
      aria-disabled={true}
      aria-label="YOAI_ReactQuickReplySendButton"
      className="Tappable-inactive quickReplyInput-sendButton"
      disabled={undefined}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseMove={[Function]}
      onMouseOut={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      role="button"
      style={
        Object {
          "KhtmlUserSelect": "none",
          "MozUserSelect": "none",
          "WebkitTapHighlightColor": "rgba(0,0,0,0)",
          "WebkitTouchCallout": "none",
          "WebkitUserSelect": "none",
          "cursor": "pointer",
          "msUserSelect": "none",
          "userSelect": "none",
        }
      }
    >
      <span
        className="quickReplyInput-sendButton-icon"
      >
        <svg
          height="14"
          width="12"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M6.707.293a1 1 0 0 0-1.414 0l-5 5a1 1 0 0 0 1.414 1.414L5 3.414V13a1 1 0 1 0 2 0V3.414l3.293 3.293a1 1 0 1 0 1.414-1.414l-5-5z"
            fill="#a6a6a6"
          />
        </svg>
      </span>
    </span>
    <div
      className="quickReplyInput-bottom-padding"
    />
  </div>
</div>
`;

exports[`Snapshots Removable folder 1`] = `
<div
  className="inline-attachment"
>
  <div
    className="js-attachment-wrapper folder"
    style={Object {}}
  >
    <div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
  </div>
  <div
    className={undefined}
    onClick={[Function]}
  >
    <div
      className="js-remove"
    />
  </div>
</div>
`;

exports[`Snapshots Removable image 1`] = `
<div
  className="inline-attachment"
>
  <div
    className="js-attachment-wrapper withPreview"
    style={
      Object {
        "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
      }
    }
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#6794d3",
        }
      }
    >
      jpg
    </div>
  </div>
  <div
    className={undefined}
    onClick={[Function]}
  >
    <div
      className="js-remove"
    />
  </div>
</div>
`;

exports[`Snapshots Removable multiple 1`] = `
<div
  className="attachments-container"
>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className={undefined}
      onClick={[Function]}
    >
      <div
        className="js-remove"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className={undefined}
      onClick={[Function]}
    >
      <div
        className="js-remove"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className={undefined}
      onClick={[Function]}
    >
      <div
        className="js-remove"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
      onClick={[Function]}
    >
      <div
        className="js-remove"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
      onClick={[Function]}
    >
      <div
        className="js-remove"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
      onClick={[Function]}
    >
      <div
        className="js-remove"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
      onClick={[Function]}
    >
      <div
        className="js-remove"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
      onClick={[Function]}
    >
      <div
        className="js-remove"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
      onClick={[Function]}
    >
      <div
        className="js-remove"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
      onClick={[Function]}
    >
      <div
        className="js-remove"
      />
    </div>
  </div>
</div>
`;

exports[`Snapshots Removable not image 1`] = `
<div
  className="inline-attachment"
>
  <div
    className="js-attachment-wrapper"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#33abdf",
        }
      }
    >
      txt
    </div>
    <div
      className={undefined}
    >
      1 Кб
    </div>
    <div
      className={undefined}
    >
      filename
    </div>
  </div>
  <div
    className={undefined}
    onClick={[Function]}
  >
    <div
      className="js-remove"
    />
  </div>
</div>
`;

exports[`Snapshots ResizeObserver default 1`] = `
<div
  style={
    Object {
      "backgroundColor": "blue",
      "height": "200px",
      "width": "100%",
    }
  }
/>
`;

exports[`Snapshots Selectable folder 1`] = `
<div
  className="inline-attachment"
>
  <div
    className="js-attachment-wrapper folder"
    style={Object {}}
  >
    <div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
  </div>
  <div
    className="area default"
    onClick={[Function]}
  >
    <div
      className="js-attachment-checkbox checkbox"
    />
  </div>
</div>
`;

exports[`Snapshots Selectable image 1`] = `
<div
  className="inline-attachment"
>
  <div
    className="js-attachment-wrapper withPreview"
    style={
      Object {
        "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
      }
    }
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#6794d3",
        }
      }
    >
      jpg
    </div>
  </div>
  <div
    className="area default"
    onClick={[Function]}
  >
    <div
      className="js-attachment-checkbox checkbox"
    />
  </div>
</div>
`;

exports[`Snapshots Selectable multiple 1`] = `
<div
  className="attachments-container"
>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className="area default"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox isSelected"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className="area default"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className="area default"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox isSelected"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="area default"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="area default"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox isSelected"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="area default"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="area default"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox isSelected"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="area default"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="area default"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox isSelected"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className="area default"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox"
      />
    </div>
  </div>
</div>
`;

exports[`Snapshots Selectable not image 1`] = `
<div
  className="inline-attachment"
>
  <div
    className="js-attachment-wrapper"
    style={Object {}}
  >
    <div
      className="ext"
      style={
        Object {
          "backgroundColor": "#33abdf",
        }
      }
    >
      txt
    </div>
    <div
      className={undefined}
    >
      1 Кб
    </div>
    <div
      className={undefined}
    >
      filename
    </div>
  </div>
  <div
    className="area default"
    onClick={[Function]}
  >
    <div
      className="js-attachment-checkbox checkbox"
    />
  </div>
</div>
`;

exports[`Snapshots Selectable theme centered 1`] = `
<div
  className="attachments-container"
>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className="area centered"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox isSelected"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className="area centered"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox"
      />
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className="area centered"
      onClick={[Function]}
    >
      <div
        className="js-attachment-checkbox checkbox isSelected"
      />
    </div>
  </div>
</div>
`;

exports[`Snapshots SmartReplies default 1`] = `
<div
  style={
    Object {
      "width": 200,
    }
  }
>
  <div
    className="smartReplies"
  >
    <button
      className="smartReplies-item"
      onClick={[Function]}
    >
      <span
        className="smartReplies-text"
      >
        test
      </span>
    </button>
  </div>
</div>
`;

exports[`Snapshots SubscriptionsBubble bubble 1`] = `
<div>
  <div>
    <div
      className="bubble subscriptionBubble"
      onClick={[Function]}
    >
      <div
        className="title"
      >
        Управляй рассылками
      </div>
      <div
        className="subtitle"
      >
        Избавься от надоедливых писем раз и на всегда
      </div>
      <div
        className="js-subscriptions-bubble-close close"
        onClick={[Function]}
      />
    </div>
  </div>
</div>
`;

exports[`Snapshots SubscriptionsBubble narrow screen 1`] = `
<div
  style={
    Object {
      "width": 200,
    }
  }
>
  <div>
    <div>
      <div
        className="bubble subscriptionBubble"
        onClick={[Function]}
      >
        <div
          className="title"
        >
          Управляй рассылками
        </div>
        <div
          className="subtitle"
        >
          Избавься от надоедливых писем раз и на всегда
        </div>
        <div
          className="js-subscriptions-bubble-close close"
          onClick={[Function]}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots SubscriptionsPopup default 1`] = `
<div
  style={
    Object {
      "background": "#ddd",
      "height": 768,
      "position": "relative",
      "width": 1024,
    }
  }
>
  <div
    style={
      Object {
        "position": "absolute",
        "zIndex": 100,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      показать / спрятать попап
    </button>
  </div>
  <div
    className="js-subs-popup popup"
  />
</div>
`;

exports[`Snapshots SuggestionBubble default 1`] = `
<div
  className="container"
>
  <span
    aria-label="YOAI_ReactSmartReplyItem"
    className="Tappable-inactive suggestionBubble"
    disabled={undefined}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "KhtmlUserSelect": "none",
        "MozUserSelect": "none",
        "WebkitTapHighlightColor": "rgba(0,0,0,0)",
        "WebkitTouchCallout": "none",
        "WebkitUserSelect": "none",
        "cursor": "pointer",
        "msUserSelect": "none",
        "userSelect": "none",
      }
    }
  >
    <span
      className="suggestionBubble-text"
    >
      default
    </span>
  </span>
  <span
    aria-label="YOAI_ReactSmartReplyItem"
    className="Tappable-inactive suggestionBubble_outlined suggestionBubble"
    disabled={undefined}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "KhtmlUserSelect": "none",
        "MozUserSelect": "none",
        "WebkitTapHighlightColor": "rgba(0,0,0,0)",
        "WebkitTouchCallout": "none",
        "WebkitUserSelect": "none",
        "cursor": "pointer",
        "msUserSelect": "none",
        "userSelect": "none",
      }
    }
  >
    <span
      className="suggestionBubble-text"
    >
      outlined
    </span>
  </span>
  <span
    aria-label="YOAI_ReactSmartReplyItem"
    className="Tappable-inactive suggestionBubble_removable suggestionBubble"
    disabled={undefined}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "KhtmlUserSelect": "none",
        "MozUserSelect": "none",
        "WebkitTapHighlightColor": "rgba(0,0,0,0)",
        "WebkitTouchCallout": "none",
        "WebkitUserSelect": "none",
        "cursor": "pointer",
        "msUserSelect": "none",
        "userSelect": "none",
      }
    }
  >
    <span
      className="suggestionBubble-text"
    >
      With button
    </span>
    <span
      aria-label="YOAI_ReactSmartReplyItemCloseButton"
      className="Tappable-inactive suggestionBubble-closeButton"
      disabled={undefined}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseMove={[Function]}
      onMouseOut={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      role="button"
      style={
        Object {
          "KhtmlUserSelect": "none",
          "MozUserSelect": "none",
          "WebkitTapHighlightColor": "rgba(0,0,0,0)",
          "WebkitTouchCallout": "none",
          "WebkitUserSelect": "none",
          "cursor": "pointer",
          "msUserSelect": "none",
          "userSelect": "none",
        }
      }
    >
      <svg
        height="11"
        width="11"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          clipRule="evenodd"
          d="M5.5 4.13L1.37 0 0 1.37 4.13 5.5 0 9.63 1.37 11 5.5 6.87 9.63 11 11 9.63 6.87 5.5 11 1.37 9.63 0 5.5 4.13z"
        />
      </svg>
    </span>
  </span>
  <span
    aria-label="YOAI_ReactSmartReplyItem"
    className="Tappable-inactive suggestionBubble_dark suggestionBubble"
    disabled={undefined}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "KhtmlUserSelect": "none",
        "MozUserSelect": "none",
        "WebkitTapHighlightColor": "rgba(0,0,0,0)",
        "WebkitTouchCallout": "none",
        "WebkitUserSelect": "none",
        "cursor": "pointer",
        "msUserSelect": "none",
        "userSelect": "none",
      }
    }
  >
    <span
      className="suggestionBubble-text"
    >
      dark
    </span>
  </span>
  <span
    aria-label="YOAI_ReactSmartReplyItem"
    className="Tappable-inactive suggestionBubble_outlined suggestionBubble_dark suggestionBubble"
    disabled={undefined}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "KhtmlUserSelect": "none",
        "MozUserSelect": "none",
        "WebkitTapHighlightColor": "rgba(0,0,0,0)",
        "WebkitTouchCallout": "none",
        "WebkitUserSelect": "none",
        "cursor": "pointer",
        "msUserSelect": "none",
        "userSelect": "none",
      }
    }
  >
    <span
      className="suggestionBubble-text"
    >
      dark outlined
    </span>
  </span>
  <span
    aria-label="YOAI_ReactSmartReplyItem"
    className="Tappable-inactive suggestionBubble_removable suggestionBubble_dark suggestionBubble"
    disabled={undefined}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "KhtmlUserSelect": "none",
        "MozUserSelect": "none",
        "WebkitTapHighlightColor": "rgba(0,0,0,0)",
        "WebkitTouchCallout": "none",
        "WebkitUserSelect": "none",
        "cursor": "pointer",
        "msUserSelect": "none",
        "userSelect": "none",
      }
    }
  >
    <span
      className="suggestionBubble-text"
    >
      dark
    </span>
    <span
      aria-label="YOAI_ReactSmartReplyItemCloseButton"
      className="Tappable-inactive suggestionBubble-closeButton"
      disabled={undefined}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseMove={[Function]}
      onMouseOut={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      role="button"
      style={
        Object {
          "KhtmlUserSelect": "none",
          "MozUserSelect": "none",
          "WebkitTapHighlightColor": "rgba(0,0,0,0)",
          "WebkitTouchCallout": "none",
          "WebkitUserSelect": "none",
          "cursor": "pointer",
          "msUserSelect": "none",
          "userSelect": "none",
        }
      }
    >
      <svg
        height="11"
        width="11"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          clipRule="evenodd"
          d="M5.5 4.13L1.37 0 0 1.37 4.13 5.5 0 9.63 1.37 11 5.5 6.87 9.63 11 11 9.63 6.87 5.5 11 1.37 9.63 0 5.5 4.13z"
        />
      </svg>
    </span>
  </span>
  <span
    aria-label="YOAI_ReactSmartReplyItem"
    className="Tappable-inactive suggestionBubble_removable suggestionBubble_dark suggestionBubble"
    disabled={undefined}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseMove={[Function]}
    onMouseOut={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    style={
      Object {
        "KhtmlUserSelect": "none",
        "MozUserSelect": "none",
        "WebkitTapHighlightColor": "rgba(0,0,0,0)",
        "WebkitTouchCallout": "none",
        "WebkitUserSelect": "none",
        "cursor": "pointer",
        "msUserSelect": "none",
        "userSelect": "none",
      }
    }
  >
    <span
      className="suggestionBubble-text"
    >
      dark
    </span>
    <span
      aria-label="YOAI_ReactSmartReplyItemCloseButton"
      className="Tappable-inactive suggestionBubble-closeButton"
      disabled={undefined}
      onKeyDown={[Function]}
      onKeyUp={[Function]}
      onMouseDown={[Function]}
      onMouseMove={[Function]}
      onMouseOut={[Function]}
      onMouseUp={[Function]}
      onTouchEnd={[Function]}
      onTouchMove={[Function]}
      onTouchStart={[Function]}
      role="button"
      style={
        Object {
          "KhtmlUserSelect": "none",
          "MozUserSelect": "none",
          "WebkitTapHighlightColor": "rgba(0,0,0,0)",
          "WebkitTouchCallout": "none",
          "WebkitUserSelect": "none",
          "cursor": "pointer",
          "msUserSelect": "none",
          "userSelect": "none",
        }
      }
    >
      <svg
        height="11"
        width="11"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          clipRule="evenodd"
          d="M5.5 4.13L1.37 0 0 1.37 4.13 5.5 0 9.63 1.37 11 5.5 6.87 9.63 11 11 9.63 6.87 5.5 11 1.37 9.63 0 5.5 4.13z"
        />
      </svg>
    </span>
  </span>
</div>
`;

exports[`Snapshots TabsPromo android 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
  <div>
    <div
      className="promo is-android"
    >
      <div
        className="body"
      >
        <svg
          className="icon"
          height={32}
          viewBox="0 0 27 27"
          width={32}
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
            stroke="none"
            strokeWidth="1"
          >
            <circle
              cx="13.5"
              cy="13.5"
              fill="#18143C"
              fillRule="nonzero"
              r="13.5"
            />
            <g
              id="Group"
              transform="translate(6.000000, 6.000000)"
            >
              <path
                d="M14.6823529,8.0627451 L13.3960784,7.40392157 C13.3333333,7.37254902 13.2392157,7.37254902 13.145098,7.40392157 L8.21960784,9.97647059 C8,10.1019608 7.74901961,10.1333333 7.52941176,10.1333333 C7.27843137,10.1333333 7.05882353,10.0705882 6.83921569,9.97647059 L1.91372549,7.40392157 C1.85098039,7.37254902 1.75686275,7.37254902 1.6627451,7.40392157 L0.376470588,8.0627451 C0.0941176471,8.21960784 0.0941176471,8.65882353 0.376470588,8.81568627 L7.24705882,12.3921569 C7.43529412,12.4862745 7.65490196,12.4862745 7.84313725,12.3921569 L14.7137255,8.81568627 C14.9647059,8.65882353 14.9647059,8.21960784 14.6823529,8.0627451 Z"
                fill="#FC3252"
              />
              <path
                d="M14.5176471,11.4117647 L13.2313725,10.7529412 C13.1686275,10.7215686 13.0745098,10.7215686 12.9803922,10.7529412 L8.05490196,13.3254902 C7.83529412,13.4509804 7.58431373,13.4823529 7.36470588,13.4823529 C7.11372549,13.4823529 6.89411765,13.4196078 6.6745098,13.3254902 L1.74901961,10.7529412 C1.68627451,10.7215686 1.59215686,10.7215686 1.49803922,10.7529412 L0.211764706,11.4117647 C-0.0705882353,11.5686275 -0.0705882353,12.0078431 0.211764706,12.1647059 L7.08235294,15.7411765 C7.27058824,15.8352941 7.49019608,15.8352941 7.67843137,15.7411765 L14.5490196,12.1647059 C14.8,12.0078431 14.8,11.5686275 14.5176471,11.4117647 Z"
                fill="#F8DE66"
              />
              <path
                d="M7.08235294,1.01176471 L0.211764706,4.58823529 C-0.0705882353,4.74509804 -0.0705882353,5.18431373 0.211764706,5.34117647 L7.08235294,8.91764706 C7.27058824,9.01176471 7.49019608,9.01176471 7.67843137,8.91764706 L14.5490196,5.34117647 C14.8313725,5.18431373 14.8313725,4.74509804 14.5490196,4.58823529 L7.64705882,1.01176471 C7.45882353,0.917647059 7.27058824,0.917647059 7.08235294,1.01176471 Z"
                fill="#2E7BE2"
              />
              <polyline
                fillRule="nonzero"
                points="7.52941176 0.864233193 6.58823529 4.73445159 15.1498522 4.73445159"
                stroke="#1A163C"
              />
            </g>
          </g>
        </svg>
        <div
          className="content"
        >
          <h6>
            Безлимит для фото на Диске
          </h6>
          <p>
            Включите автозагрузку, и место для снимков не закончится
          </p>
        </div>
        <div
          className="buttons"
        >
          <button
            className="button button"
            onClick={[Function]}
          >
            <div>
              <div
                className="button-content"
              >
                Нет, спасибо
              </div>
            </div>
          </button>
          <button
            className="button button primary"
            onClick={[Function]}
          >
            <div>
              <div
                className="button-content"
              >
                Включить
              </div>
            </div>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots TabsPromo ios 1`] = `
<div
  style={
    Object {
      "height": "150vh",
    }
  }
>
  <div
    style={
      Object {
        "bottom": "16px",
        "left": "16px",
        "position": "fixed",
        "zIndex": 1011,
      }
    }
  >
    <button
      onClick={[Function]}
    >
      Скрыть / Показать
    </button>
  </div>
  <div>
    <div
      className="promo is-ios"
    >
      <div
        className="body"
      >
        <svg
          className="icon"
          height={32}
          viewBox="0 0 27 27"
          width={32}
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
            stroke="none"
            strokeWidth="1"
          >
            <circle
              cx="13.5"
              cy="13.5"
              fill="#18143C"
              fillRule="nonzero"
              r="13.5"
            />
            <g
              id="Group"
              transform="translate(6.000000, 6.000000)"
            >
              <path
                d="M14.6823529,8.0627451 L13.3960784,7.40392157 C13.3333333,7.37254902 13.2392157,7.37254902 13.145098,7.40392157 L8.21960784,9.97647059 C8,10.1019608 7.74901961,10.1333333 7.52941176,10.1333333 C7.27843137,10.1333333 7.05882353,10.0705882 6.83921569,9.97647059 L1.91372549,7.40392157 C1.85098039,7.37254902 1.75686275,7.37254902 1.6627451,7.40392157 L0.376470588,8.0627451 C0.0941176471,8.21960784 0.0941176471,8.65882353 0.376470588,8.81568627 L7.24705882,12.3921569 C7.43529412,12.4862745 7.65490196,12.4862745 7.84313725,12.3921569 L14.7137255,8.81568627 C14.9647059,8.65882353 14.9647059,8.21960784 14.6823529,8.0627451 Z"
                fill="#FC3252"
              />
              <path
                d="M14.5176471,11.4117647 L13.2313725,10.7529412 C13.1686275,10.7215686 13.0745098,10.7215686 12.9803922,10.7529412 L8.05490196,13.3254902 C7.83529412,13.4509804 7.58431373,13.4823529 7.36470588,13.4823529 C7.11372549,13.4823529 6.89411765,13.4196078 6.6745098,13.3254902 L1.74901961,10.7529412 C1.68627451,10.7215686 1.59215686,10.7215686 1.49803922,10.7529412 L0.211764706,11.4117647 C-0.0705882353,11.5686275 -0.0705882353,12.0078431 0.211764706,12.1647059 L7.08235294,15.7411765 C7.27058824,15.8352941 7.49019608,15.8352941 7.67843137,15.7411765 L14.5490196,12.1647059 C14.8,12.0078431 14.8,11.5686275 14.5176471,11.4117647 Z"
                fill="#F8DE66"
              />
              <path
                d="M7.08235294,1.01176471 L0.211764706,4.58823529 C-0.0705882353,4.74509804 -0.0705882353,5.18431373 0.211764706,5.34117647 L7.08235294,8.91764706 C7.27058824,9.01176471 7.49019608,9.01176471 7.67843137,8.91764706 L14.5490196,5.34117647 C14.8313725,5.18431373 14.8313725,4.74509804 14.5490196,4.58823529 L7.64705882,1.01176471 C7.45882353,0.917647059 7.27058824,0.917647059 7.08235294,1.01176471 Z"
                fill="#2E7BE2"
              />
              <polyline
                fillRule="nonzero"
                points="7.52941176 0.864233193 6.58823529 4.73445159 15.1498522 4.73445159"
                stroke="#1A163C"
              />
            </g>
          </g>
        </svg>
        <div
          className="content"
        >
          <h6>
            Безлимит для фото на Диске
          </h6>
          <p>
            Включите автозагрузку, и место для снимков не закончится
          </p>
        </div>
        <div
          className="buttons"
        >
          <button
            className="button button"
            onClick={[Function]}
          >
            <div>
              <div
                className="button-content"
              >
                Нет, спасибо
              </div>
            </div>
          </button>
          <button
            className="button button primary"
            onClick={[Function]}
          >
            <div>
              <div
                className="button-content"
              >
                Включить
              </div>
            </div>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Translator dark-themed 1`] = `
<div
  className="translator translator_dark"
>
  <div
    className="translator-controlBlock"
  >
    <div
      aria-label="YOAI_ReactTranslatorLangSelector"
      className="translator-langSelector"
    >
      <label
        className="translator-label translator-label_sourceLang"
      >
        Перевести письмо с
      </label>
      <button
        aria-disabled={undefined}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect translator-langSelect_dark"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Русский
        </span>
        <span
          className="translator-langSelect-arrowIcon"
        >
          <svg
            height="5"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.25 0L4.5 3.6.75 0 0 .72 4.5 5 9 .72 8.25 0z"
              fill="#ffffff"
            />
          </svg>
        </span>
      </button>
      <div
        aria-hidden={true}
        className="translator-arrowDivider"
      >
        <svg
          height="6"
          width="15"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.59 2.3c-.45-.52-.91-1.3-1.4-2.3h.85c1 1.17 2.05 2.04 3.16 2.6v.42a10.24 10.24 0 0 0-3.16 2.6h-.84c.48-1 .94-1.77 1.39-2.3H0V2.3h11.59z"
            fill="#9c9da2"
          />
        </svg>
      </div>
      <label
        className="translator-label translator-label_targetLang"
      >
        на
      </label>
      <button
        aria-disabled={undefined}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect translator-langSelect_dark"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Английский
        </span>
        <span
          className="translator-langSelect-arrowIcon"
        >
          <svg
            height="5"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.25 0L4.5 3.6.75 0 0 .72 4.5 5 9 .72 8.25 0z"
              fill="#ffffff"
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      aria-label="YOAI_ReactTranslatorControls"
      className="translator-controlBlock-bannerControls"
    >
      <button
        aria-label="Перевести"
        className="button translator-submitButton button_outlined button_loading"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-loader"
          >
            <div
              className="button-spinner"
            />
          </div>
          <div
            className="button-content"
          >
            Перевести
          </div>
        </div>
      </button>
      <button
        aria-label="YOAI_ReactTranslatorCloseButton"
        className="Tappable-inactive translator-closeButton"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <svg
          height="10"
          width="10"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M10 .71L9.29 0 5 4.29.71 0 0 .71 4.29 5 0 9.29l.71.71L5 5.71 9.29 10l.71-.71L5.71 5 10 .71z"
            fill="#9c9da2"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Snapshots Translator default 1`] = `
<div
  className="translator"
>
  <div
    className="translator-controlBlock"
  >
    <div
      aria-label="YOAI_ReactTranslatorLangSelector"
      className="translator-langSelector"
    >
      <label
        className="translator-label translator-label_sourceLang"
      >
        Перевести письмо с
      </label>
      <button
        aria-disabled={undefined}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Русский
        </span>
        <span
          className="translator-langSelect-arrowIcon"
        >
          <svg
            height="5"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.25 0L4.5 3.6.75 0 0 .72 4.5 5 9 .72 8.25 0z"
              fill="#000000"
            />
          </svg>
        </span>
      </button>
      <div
        aria-hidden={true}
        className="translator-arrowDivider"
      >
        <svg
          height="6"
          width="15"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.59 2.3c-.45-.52-.91-1.3-1.4-2.3h.85c1 1.17 2.05 2.04 3.16 2.6v.42a10.24 10.24 0 0 0-3.16 2.6h-.84c.48-1 .94-1.77 1.39-2.3H0V2.3h11.59z"
            fill="#000000"
          />
        </svg>
      </div>
      <label
        className="translator-label translator-label_targetLang"
      >
        на
      </label>
      <button
        aria-disabled={undefined}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Английский
        </span>
        <span
          className="translator-langSelect-arrowIcon"
        >
          <svg
            height="5"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.25 0L4.5 3.6.75 0 0 .72 4.5 5 9 .72 8.25 0z"
              fill="#000000"
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      aria-label="YOAI_ReactTranslatorControls"
      className="translator-controlBlock-bannerControls"
    >
      <button
        aria-label="Перевести"
        className="button translator-submitButton button_outlined"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Перевести
          </div>
        </div>
      </button>
      <button
        aria-label="YOAI_ReactTranslatorCloseButton"
        className="Tappable-inactive translator-closeButton"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <svg
          height="10"
          width="10"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M10 .71L9.29 0 5 4.29.71 0 0 .71 4.29 5 0 9.29l.71.71L5 5.71 9.29 10l.71-.71L5.71 5 10 .71z"
            fill="#000000"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Snapshots Translator selection-disabled 1`] = `
<div
  className="translator translator_selectionDisabled"
>
  <div
    className="translator-controlBlock"
  >
    <div
      aria-label="YOAI_ReactTranslatorLangSelector"
      className="translator-langSelector"
    >
      <label
        className="translator-label translator-label_sourceLang"
      >
        Перевести письмо с
      </label>
      <button
        aria-disabled={true}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect"
        disabled={true}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Русский
        </span>
      </button>
      <div
        aria-hidden={true}
        className="translator-arrowDivider"
      >
        <svg
          height="6"
          width="15"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.59 2.3c-.45-.52-.91-1.3-1.4-2.3h.85c1 1.17 2.05 2.04 3.16 2.6v.42a10.24 10.24 0 0 0-3.16 2.6h-.84c.48-1 .94-1.77 1.39-2.3H0V2.3h11.59z"
            fill="#000000"
          />
        </svg>
      </div>
      <label
        className="translator-label translator-label_targetLang"
      >
        на
      </label>
      <button
        aria-disabled={true}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect"
        disabled={true}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Английский
        </span>
      </button>
    </div>
    <div
      aria-label="YOAI_ReactTranslatorControls"
      className="translator-controlBlock-bannerControls"
    >
      <button
        aria-label="Перевести"
        className="button translator-submitButton button_outlined"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Перевести
          </div>
        </div>
      </button>
      <button
        aria-label="YOAI_ReactTranslatorCloseButton"
        className="Tappable-inactive translator-closeButton"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <svg
          height="10"
          width="10"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M10 .71L9.29 0 5 4.29.71 0 0 .71 4.29 5 0 9.29l.71.71L5 5.71 9.29 10l.71-.71L5.71 5 10 .71z"
            fill="#000000"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Snapshots Translator tablet 1`] = `
<div
  className="translator translator_isTablet"
>
  <div
    className="translator-controlBlock"
  >
    <div
      aria-label="YOAI_ReactTranslatorLangSelector"
      className="translator-langSelector"
    >
      <label
        className="translator-label translator-label_sourceLang"
      >
        Перевести письмо с
      </label>
      <button
        aria-disabled={undefined}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Русский
        </span>
        <span
          className="translator-langSelect-arrowIcon"
        >
          <svg
            height="5"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.25 0L4.5 3.6.75 0 0 .72 4.5 5 9 .72 8.25 0z"
              fill="#000000"
            />
          </svg>
        </span>
      </button>
      <div
        aria-hidden={true}
        className="translator-arrowDivider"
      >
        <svg
          height="6"
          width="15"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.59 2.3c-.45-.52-.91-1.3-1.4-2.3h.85c1 1.17 2.05 2.04 3.16 2.6v.42a10.24 10.24 0 0 0-3.16 2.6h-.84c.48-1 .94-1.77 1.39-2.3H0V2.3h11.59z"
            fill="#000000"
          />
        </svg>
      </div>
      <label
        className="translator-label translator-label_targetLang"
      >
        на
      </label>
      <button
        aria-disabled={undefined}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Английский
        </span>
        <span
          className="translator-langSelect-arrowIcon"
        >
          <svg
            height="5"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.25 0L4.5 3.6.75 0 0 .72 4.5 5 9 .72 8.25 0z"
              fill="#000000"
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      aria-label="YOAI_ReactTranslatorControls"
      className="translator-controlBlock-bannerControls"
    >
      <button
        aria-label="Перевести"
        className="button translator-submitButton button_outlined"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Перевести
          </div>
        </div>
      </button>
      <button
        aria-label="YOAI_ReactTranslatorCloseButton"
        className="Tappable-inactive translator-closeButton"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <svg
          height="10"
          width="10"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M10 .71L9.29 0 5 4.29.71 0 0 .71 4.29 5 0 9.29l.71.71L5 5.71 9.29 10l.71-.71L5.71 5 10 .71z"
            fill="#000000"
          />
        </svg>
      </button>
    </div>
  </div>
</div>
`;

exports[`Snapshots Translator with no close button 1`] = `
<div
  className="translator"
>
  <div
    className="translator-controlBlock"
  >
    <div
      aria-label="YOAI_ReactTranslatorLangSelector"
      className="translator-langSelector"
    >
      <label
        className="translator-label translator-label_sourceLang"
      >
        Перевести письмо с
      </label>
      <button
        aria-disabled={undefined}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Русский
        </span>
        <span
          className="translator-langSelect-arrowIcon"
        >
          <svg
            height="5"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.25 0L4.5 3.6.75 0 0 .72 4.5 5 9 .72 8.25 0z"
              fill="#000000"
            />
          </svg>
        </span>
      </button>
      <div
        aria-hidden={true}
        className="translator-arrowDivider"
      >
        <svg
          height="6"
          width="15"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.59 2.3c-.45-.52-.91-1.3-1.4-2.3h.85c1 1.17 2.05 2.04 3.16 2.6v.42a10.24 10.24 0 0 0-3.16 2.6h-.84c.48-1 .94-1.77 1.39-2.3H0V2.3h11.59z"
            fill="#000000"
          />
        </svg>
      </div>
      <label
        className="translator-label translator-label_targetLang"
      >
        на
      </label>
      <button
        aria-disabled={undefined}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Английский
        </span>
        <span
          className="translator-langSelect-arrowIcon"
        >
          <svg
            height="5"
            width="9"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.25 0L4.5 3.6.75 0 0 .72 4.5 5 9 .72 8.25 0z"
              fill="#000000"
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      aria-label="YOAI_ReactTranslatorControls"
      className="translator-controlBlock-bannerControls"
    >
      <button
        aria-label="Перевести"
        className="button translator-submitButton button_outlined"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Перевести
          </div>
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Snapshots Translator with-error 1`] = `
<div
  className="translator translator_selectionDisabled"
>
  <div
    className="translator-controlBlock"
  >
    <div
      aria-label="YOAI_ReactTranslatorLangSelector"
      className="translator-langSelector"
    >
      <label
        className="translator-label translator-label_sourceLang"
      >
        Перевести письмо с
      </label>
      <button
        aria-disabled={true}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect"
        disabled={true}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Русский
        </span>
      </button>
      <div
        aria-hidden={true}
        className="translator-arrowDivider"
      >
        <svg
          height="6"
          width="15"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.59 2.3c-.45-.52-.91-1.3-1.4-2.3h.85c1 1.17 2.05 2.04 3.16 2.6v.42a10.24 10.24 0 0 0-3.16 2.6h-.84c.48-1 .94-1.77 1.39-2.3H0V2.3h11.59z"
            fill="#000000"
          />
        </svg>
      </div>
      <label
        className="translator-label translator-label_targetLang"
      >
        на
      </label>
      <button
        aria-disabled={true}
        aria-label={undefined}
        className="Tappable-inactive translator-langSelect"
        disabled={true}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <span
          className="translator-langSelect-selectedValue"
        >
          Английский
        </span>
      </button>
    </div>
    <div
      aria-label="YOAI_ReactTranslatorControls"
      className="translator-controlBlock-bannerControls"
    >
      <button
        aria-label="Перевести"
        className="button translator-submitButton button_outlined"
        onClick={[Function]}
      >
        <div>
          <div
            className="button-content"
          >
            Перевести
          </div>
        </div>
      </button>
      <button
        aria-label="YOAI_ReactTranslatorCloseButton"
        className="Tappable-inactive translator-closeButton"
        disabled={undefined}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseMove={[Function]}
        onMouseOut={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={
          Object {
            "KhtmlUserSelect": "none",
            "MozUserSelect": "none",
            "WebkitTapHighlightColor": "rgba(0,0,0,0)",
            "WebkitTouchCallout": "none",
            "WebkitUserSelect": "none",
            "cursor": "pointer",
            "msUserSelect": "none",
            "userSelect": "none",
          }
        }
      >
        <svg
          height="10"
          width="10"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M10 .71L9.29 0 5 4.29.71 0 0 .71 4.29 5 0 9.29l.71.71L5 5.71 9.29 10l.71-.71L5.71 5 10 .71z"
            fill="#000000"
          />
        </svg>
      </button>
    </div>
  </div>
  <p
    aria-label="YOAI_ReactTranslatorErrorMessage"
    className="translator-errorMessage"
  >
    Произошла ошибка. Попробуйте ещё раз
  </p>
</div>
`;

exports[`Snapshots Uploadable image 1`] = `
<div
  className="attachments-container"
>
  <div
    className="js-uploading inline-attachment isUploading"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className={undefined}
      />
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className={undefined}
    >
      <div
        onClick={[Function]}
      >
        <div
          className="js-upload-cancel"
        />
      </div>
      <svg
        className={undefined}
        height={18}
        viewBox="0 0 32 32"
        width={18}
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M16 0v1.846c7.817 0 14.154 6.337 14.154 14.154s-6.337 14.154-14.154 14.154v1.846c8.837 0 16-7.163 16-16s-7.163-16-16-16z"
          fill="#FDD835"
        />
      </svg>
    </div>
  </div>
  <div
    className="js-uploading inline-attachment isUploading"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className={undefined}
      />
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className={undefined}
    >
      <svg
        className={undefined}
        height={18}
        viewBox="0 0 32 32"
        width={18}
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M16 0v1.846c7.817 0 14.154 6.337 14.154 14.154s-6.337 14.154-14.154 14.154v1.846c8.837 0 16-7.163 16-16s-7.163-16-16-16z"
          fill="#FDD835"
        />
      </svg>
    </div>
  </div>
  <div
    className="js-uploading inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className={undefined}
      />
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className={undefined}
    >
      <div
        onClick={[Function]}
      >
        <div
          className="js-upload-error"
        >
          Не удалось загрузить файл
        </div>
      </div>
    </div>
  </div>
  <div
    className="js-uploading inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className={undefined}
      />
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className={undefined}
    >
      <div
        className="js-upload-error"
      >
        Ошибка NO_ENOUGH_SPACE
      </div>
    </div>
  </div>
  <div
    className="js-uploading inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className={undefined}
      />
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className={undefined}
    >
      <div
        className="js-upload-error"
      >
        Ошибка. Недостаточно места на Диске
      </div>
    </div>
  </div>
  <div
    className="js-uploading inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className={undefined}
      />
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
    <div
      className={undefined}
    >
      <div
        className="js-upload-error"
      >
        Не удалось загрузить файл
      </div>
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper withPreview"
      style={
        Object {
          "backgroundImage": "url('http://lorempixel.com/400/400/cats?0')",
        }
      }
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#6794d3",
          }
        }
      >
        jpg
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Uploadable non image 1`] = `
<div
  className="attachments-container"
>
  <div
    className="js-uploading inline-attachment isUploading"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className={undefined}
      />
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
    >
      <div
        onClick={[Function]}
      >
        <div
          className="js-upload-cancel"
        />
      </div>
      <svg
        className={undefined}
        height={18}
        viewBox="0 0 32 32"
        width={18}
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M16 0v1.846c7.817 0 14.154 6.337 14.154 14.154s-6.337 14.154-14.154 14.154v1.846c8.837 0 16-7.163 16-16s-7.163-16-16-16z"
          fill="#FDD835"
        />
      </svg>
    </div>
  </div>
  <div
    className="js-uploading inline-attachment isUploading"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className={undefined}
      />
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
    >
      <svg
        className={undefined}
        height={18}
        viewBox="0 0 32 32"
        width={18}
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M16 0v1.846c7.817 0 14.154 6.337 14.154 14.154s-6.337 14.154-14.154 14.154v1.846c8.837 0 16-7.163 16-16s-7.163-16-16-16z"
          fill="#FDD835"
        />
      </svg>
    </div>
  </div>
  <div
    className="js-uploading inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className={undefined}
      />
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
    >
      <div
        onClick={[Function]}
      >
        <div
          className="js-upload-error"
        >
          Не удалось загрузить файл
        </div>
      </div>
    </div>
  </div>
  <div
    className="js-uploading inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className={undefined}
      />
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
    <div
      className={undefined}
    >
      <div
        className="js-upload-error"
      >
        Не удалось загрузить файл
      </div>
    </div>
  </div>
  <div
    className="inline-attachment"
  >
    <div
      className="js-attachment-wrapper"
      style={Object {}}
    >
      <div
        className="ext"
        style={
          Object {
            "backgroundColor": "#33abdf",
          }
        }
      >
        txt
      </div>
      <div
        className={undefined}
      >
        1 Кб
      </div>
      <div
        className={undefined}
      >
        filename
      </div>
    </div>
  </div>
</div>
`;

exports[`Snapshots Yabble default 1`] = `
<div>
  <div
    className="undefined"
    contentEditable="false"
    draggable="false"
  >
    <div
      autoCapitalize="off"
      autoComplete="off"
      autoCorrect="off"
      className={undefined}
      spellCheck="false"
    >
      Без аватара
    </div>
  </div>
  <div
    className=""
    contentEditable="false"
    draggable="false"
  >
    <span
      className={undefined}
    >
      <div
        className={undefined}
      >
        РХ
      </div>
    </span>
    <div
      autoCapitalize="off"
      autoComplete="off"
      autoCorrect="off"
      className={undefined}
      spellCheck="false"
    >
      Роман Хорошавцев
    </div>
  </div>
  <div
    className=""
    contentEditable="false"
    draggable="false"
  >
    <span
      className={undefined}
    >
      <img
        className={undefined}
        src="https://placekitten.com/g/200/200"
      />
    </span>
    <div
      autoCapitalize="off"
      autoComplete="off"
      autoCorrect="off"
      className={undefined}
      spellCheck="false"
    >
      Роман Хорошавцев
    </div>
  </div>
</div>
`;

exports[`Snapshots Yabble editable 1`] = `
<div
  className=""
  contentEditable="false"
  draggable="false"
>
  <span
    className={undefined}
  >
    <div
      className={undefined}
    >
      РХ
    </div>
  </span>
  <div
    autoCapitalize="off"
    autoComplete="off"
    autoCorrect="off"
    className={undefined}
    spellCheck="false"
  >
    testoviy@yandex-team.ru
  </div>
  <div
    className="yabble-closeButton"
  >
    <svg
      height="100%"
      id="ico_close2"
      viewBox="0 0 23 22"
      width="100%"
    >
      <title>
        close
      </title>
      <path
        d="M10.445 11.01L3.557 4.12c-.29-.29-.298-.77-.005-1.064.295-.295.77-.29 1.066.005l6.888 6.89 6.888-6.89c.29-.29.773-.297 1.066-.004.295.295.29.77-.005 1.065l-6.89 6.89 6.536 6.534c.292.29.3.773.006 1.066-.295.295-.77.29-1.065-.005l-6.534-6.535-6.535 6.535c-.29.29-.77.298-1.064.005-.295-.295-.29-.77.005-1.066l6.535-6.535z"
        fill="rgb(34, 34, 34)"
        fillRule="evenodd"
      />
    </svg>
  </div>
</div>
`;

exports[`Snapshots Yabble highlighted 1`] = `
<div
  className=""
  contentEditable="false"
  draggable="false"
>
  <span
    className={undefined}
  >
    <div
      className={undefined}
    >
      РХ
    </div>
  </span>
  <div
    autoCapitalize="off"
    autoComplete="off"
    autoCorrect="off"
    className={undefined}
    spellCheck="false"
  >
    testoviy@yandex-team.ru
  </div>
</div>
`;

exports[`Snapshots Yabble invalid 1`] = `
<div
  className=""
  contentEditable="false"
  draggable="false"
>
  <span
    className={undefined}
  >
    <div
      className={undefined}
    >
      РХ
    </div>
  </span>
  <div
    autoCapitalize="off"
    autoComplete="off"
    autoCorrect="off"
    className={undefined}
    spellCheck="false"
  >
    Роман Хорошавцев
  </div>
  <div
    className="yabble-closeButton"
  >
    <svg
      height="100%"
      id="ico_close2"
      viewBox="0 0 23 22"
      width="100%"
    >
      <title>
        close
      </title>
      <path
        d="M10.445 11.01L3.557 4.12c-.29-.29-.298-.77-.005-1.064.295-.295.77-.29 1.066.005l6.888 6.89 6.888-6.89c.29-.29.773-.297 1.066-.004.295.295.29.77-.005 1.065l-6.89 6.89 6.536 6.534c.292.29.3.773.006 1.066-.295.295-.77.29-1.065-.005l-6.534-6.535-6.535 6.535c-.29.29-.77.298-1.064.005-.295-.295-.29-.77.005-1.066l6.535-6.535z"
        fill="rgb(255, 255, 255)"
        fillRule="evenodd"
      />
    </svg>
  </div>
</div>
`;

exports[`Snapshots Yabble medium 1`] = `
<div>
  <div
    className=""
    contentEditable="false"
    draggable="false"
  >
    <span
      className={undefined}
    >
      <div
        className={undefined}
      >
        РХ
      </div>
    </span>
    <div
      autoCapitalize="off"
      autoComplete="off"
      autoCorrect="off"
      className={undefined}
      spellCheck="false"
    >
      Роман Хорошавцев
    </div>
  </div>
  <div
    className=""
    contentEditable="false"
    draggable="false"
  >
    <span
      className={undefined}
    >
      <img
        className={undefined}
        src="https://placekitten.com/g/200/200"
      />
    </span>
    <div
      autoCapitalize="off"
      autoComplete="off"
      autoCorrect="off"
      className={undefined}
      spellCheck="false"
    >
      Роман Хорошавцев
    </div>
  </div>
</div>
`;
