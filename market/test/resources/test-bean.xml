<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true" default-autowire="byName">

    <context:annotation-config/>
    <bean class="ru.yandex.EmbeddedPgConfig"/>

    <import resource="classpath:abo-core-services.xml"/>
    <import resource="classpath:mock-external-services.xml"/>

    <import resource="classpath:clch-services.xml"/>

    <import resource="classpath:tms-services.xml"/>
    <import resource="classpath:market-pinger.xml"/>
    <import resource="classpath:abo-tms/tms-remote.xml"/>

    <context:component-scan base-package="ru.yandex.market.abo.tms"/>
    <context:component-scan base-package="ru.yandex.market.abo.logbroker"/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          lazy-init="false">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:abo-core.properties</value>
                <value>classpath:abo-jdbc.properties</value>
                <value>classpath:mail-development.properties</value>

                <value>classpath:abo-jdbc.properties</value>
                <value>classpath:test-application.properties</value>
            </list>
        </property>
    </bean>

    <!-- TODO: extract tms config -->

    <bean id="scheduler" parent="abstractScheduler">
        <property name="schedulerName" value="aboScheduler"/>
    </bean>

    <bean id="dynamicScheduler" parent="abstractScheduler">
        <property name="schedulerName" value="dynamicScheduler"/>
    </bean>

    <bean id="abstractScheduler"
          class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
        <property name="dataSource">
            <null/>
        </property>
        <property name="schedulerFactoryClass" value="org.quartz.impl.StdSchedulerFactory"/>
        <property name="waitForJobsToCompleteOnShutdown" value="true"/>
        <property name="quartzProperties" ref="tmsProperties"/>
        <property name="autoStartup" value="false"/>
    </bean>

    <bean name="tmsProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
                <prop key="developmentPrefix">NOT_EXISTS</prop>
            </props>
        </property>
    </bean>

    <bean id="jobHistoryService" class="ru.yandex.market.abo.tms.util.AboJobHistoryService">
        <constructor-arg name="statusMaxLength" value="200"/>
        <constructor-arg name="logTable" value="${qrtz.log.table}"/>
        <constructor-arg name="saveFullLogs" value="false"/>
        <constructor-arg name="tmsJdbcTemplate" ref="tmsJdbcTemplate"/>
        <constructor-arg name="jobStatusesToSkip">
            <list>
                <value/>
            </list>
        </constructor-arg>
    </bean>

</beans>
