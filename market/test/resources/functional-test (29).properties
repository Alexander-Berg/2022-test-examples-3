environment=unittest
autoorder.datasource.schema=autoorder
autoorder.user-agent=autoorder

market.tms-core-quartz2.qrtzLogTableName=qrtz_log

spring.http.converters.preferred-json-mapper=jackson
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect


http.threadPool.maxQueued=100
http.threadPool.maxSize=4000

mbi.robot.yql.token=test
autoorder.robot.oauth.token=test
autoorder.solomon.oauth.token=test

market.checkout.lbkx.balancer.host=logbroker.host.net
market.checkout.lbkx.balancer.port=2135

market.checkout.logbroker.consumer.src.client_id=1
market.checkout.logbroker.consumer.src.client_secret=secret
market.checkout.logbroker.consumer.clients=autoorder
market.checkout.logbroker.topic=checkouter-order-event-log

yql.test.yt.host=hahn.yt.yandex.net
yql.datasource.cluster=hahn
yql.datasource.url=jdbc:yql://localhost:8334/${yql.datasource.cluster}
yql.datasource.token=${YQL_TOKEN:enter-env-property-to-use-yql-test}
yql.socket.timeout=240000
yql.test.url=https://yql.yandex.net
yql.test.proxy.port=8334
yql.test.proxy.maxRetries=5
yql.test.table.prefix=//home/market/users/${user.name}
yql.mybatis.repositoriesPackage=ru.yandex.market.replenishment.autoorder.yql_repository

#or use freud
#yql.datasource.url=jdbc:yql://localhost:8334/freud
#yql.test.yt.host=freud.yt.yandex.net
#yql.test.table.prefix=//home/market/development/replenishment/autoorder

yql.test.testPathInArcadia=market/replenishment/autoorder/src/test/java/ru/yandex/market

# pdb datasource
pdb.datasource.url=jdbc:h2:mem:;;INIT=RUNSCRIPT FROM 'classpath:pdb/pdb.sql';MODE=MSSQLServer
pdb.datasource.username=sa
pdb.datasource.password=sa
pdb.datasource.driverClassName=org.h2.Driver

spring.main.allow-bean-definition-overriding=true

# log SQL query
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

ax.handlers=https://orion-tst-aos.ld.yandex-team.ru:5443/api/AXHandlers/
mboc.delivery-params.service.uri=http://cm-api.tst.vs.market.yandex.net/proto/deliveryParams/
mboc.offer-changes-service.service.uri=http://cm-api.tst.vs.market.yandex.net/proto/mboCategoryOffersChangesService/
recommendations.yt.path.prefix=

autoorder.tvm.autoorder-id=1
autoorder.tvm.valid-tvm-source-ids[0]=2
autoorder.tvm.valid-tvm-source-ids[1]=3

tm.tvm-service-id=4
tm.url=http://localhost:8084

tanker.url=https://tanker-api.test.yandex-team.ru

#MBI-BACK
mbi-back.url.send-message-to-supplier=http://fake-mbi-back.tst.vs.market.yandex.net:34820/send-notification-to-supplier
mbi-back.template-id=1619441326

#CABINET_1P
cabinet1p.front.url=https://supplier-test.market.yandex.ru

#PARTNER
partner-interface.url=https://partner.market.fslb.yandex.ru
partner-interface.url.request-prefix=/supplier/
partner-interface.url.request-postfix=/fulfillment/supply?activeTab=supply-request

# mail sender
spring.mail.host=outbound-relay.yandex.net
spring.mail.port=25
spring.mail.username=robot-autoorder@yandex-team.ru
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

#FFW-API
ffw-api.tvm-service-id=123123123
ffw-api.url=http://fake-ffw-api.tst.vs.market.yandex.net

yql.market.db-profile=testing
yql.market.mstat-profile=prestable
autoorder.solomon.cluster=test

tms.control.ui.api.url.prefix=

# DEEPMIND
deepmind.url.prefix=https://cm-testing.market.yandex-team.ru
mboc.api.host=http://cm-api.tst.vs.market.yandex.net
mboc.beru.supplierId=10264169
mbo.mapping.service.uri=fake_uri

# S3-MDS
autoorder.s3.default.bucket.name=fake.bucket
autoorder.s3.access.key=FakeAccessKey123
autoorder.s3.secret.key=FakeSecretKey123
autoorder.s3.endpoint=fake
autoorder.s3.tvm_id=1

# JNS
jns.url=https://fake-jns.yandex-team.ru
jns.oauth=token
jns.alertsChannel.important=channel
jns.alertsChannel.regular=channel

# yaml tables description
yql.tables-config-yaml=/public/yt-tables.yaml

autoorder.export.yt.path=//home/market/testing/replenishment/autoorder/dictionaries

# CALENDARING SERVICE
calendaring-service.url=http://fake-calendaring-service.tst.vs.market.yandex.net
calendaring-service.tvm-service-id=1

# CALENDAR API
calendar-api.url=https://fake-calendar-api.testing.yandex.ru/internal
calendar-api.tvm-service-id=1

# StarTrek
startrek.token=fake-token
startrek.host=https://fake-host

# PushOk
pushok.token=fake-token
pushok.url=https://fake-host

# EO
ow.login=fake-login
ow.password=fake-password
ow.url=https://fake-host/api/basic
