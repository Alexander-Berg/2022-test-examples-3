{
  "id": "bad_rps_auto_alert_5xx_dyno_testing",
  "name": "RPS_5xx dyno alert generated by SPOK (testing)",
  "annotations": {
    "juggler_service": "dyno_rps_errors_testing_{{labels.error_codes}}",
    "lastAvgErrors": "{{expression.lastAvgErrors}}",
    "totalAvgRps": "{{expression.totalAvgRps}}",
    "medianErrors": "{{expression.medianErrors}}"
  },
  "channels": [
    {
      "id": "juggler_spok",
      "config": {}
    }
  ],
  "createdBy": "vladimirlevin",
  "noPointsPolicy": "NO_POINTS_DEFAULT",
  "periodMillis": 3600000,
  "projectId": "market-Dyno",
  "resolvedEmptyPolicy": "RESOLVED_EMPTY_MANUAL",
  "state": "ACTIVE",
  "type": {
    "expression": {
      "checkExpression": "",
      "program": "let rps \u003d {\n  \u0027cluster\u0027\u003d\u0027testing\u0027,\n  \u0027dc\u0027\u003d\u0027-\u0027,\n  \u0027environment\u0027\u003d\u0027testing\u0027,\n  \u0027host\u0027\u003d\u0027-\u0027,\n  \u0027http_handle_by_method\u0027\u003d\u0027-\u0027,\n  \u0027liveness_handle\u0027\u003d\u0027-\u0027,\n  \u0027period\u0027\u003d\u0027one_min\u0027,\n  \u0027project\u0027\u003d\u0027market-Dyno\u0027,\n  \u0027sensor\u0027\u003d\u0027RPS\u0027,\n  \u0027service\u0027\u003d\u0027dyno_auto-graph\u0027,\n  \u0027error_codes\u0027\u003d\u0027-\u0027\n};\nok_if(size(rps) == 0);\nlet totalAvgRps \u003d median(rps);\nok_if(totalAvgRps \u003c 10);\n\nlet errors \u003d {\n  \u0027cluster\u0027\u003d\u0027testing\u0027,\n  \u0027environment\u0027\u003d\u0027testing\u0027,\n  \u0027period\u0027\u003d\u0027one_min\u0027,\n  \u0027http_handle_by_method\u0027\u003d\u0027-\u0027,\n  \u0027service\u0027\u003d\u0027dyno_auto-graph\u0027,\n  \u0027host\u0027\u003d\u0027-\u0027,\n  \u0027project\u0027\u003d\u0027market-Dyno\u0027,\n  \u0027sensor\u0027\u003d\u0027errors\u0027,\n  \u0027error_codes\u0027\u003d\u00275xx\u0027,\n  \u0027liveness_handle\u0027\u003d\u0027-\u0027,\n  \u0027dc\u0027\u003d\u0027-\u0027\n};\n\nlet medianErrors \u003d median(constant_line(0) + errors);\nlet lastErrors \u003d tail(drop_empty_lines(errors), 5m);\nlet lastAvgErrors \u003d size(lastErrors) \u003e 0 ? avg(lastErrors) : 0;\n\nalarm_if(lastAvgErrors \u003e 300 * medianErrors / 100);\nwarn_if(lastAvgErrors \u003e 150 * medianErrors / 100);"
    }
  }
}
