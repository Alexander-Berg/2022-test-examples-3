[{"hashKey":"984ea28d48e7ae81284307e05c6d1c49","query":"USE hahn; pragma yt.InferSchema='1';\nPRAGMA AnsiInForEmptyOrNullableItemsCollections;\n\n$prices_3p = (SELECT\n    ssku,\n    null as purchase_price,\n    null as purchase_promo_price,\n    null as purchase_result_price,\n    max_by(mo.price, mo.from_datetime) as sale_price,\n    null as regular_price\nFROM `/home/market/production/mstat/analyst/market-offers/2021-06-14`  with inline as mo\n    LEFT JOIN `/home/market/production/ir/ultra-controller/supplier_to_market_sku`  with inline as stms\n        ON mo.market_sku = stms.approved_market_sku_id\nWHERE mo.market_sku is not null\n    AND mo.price > 0\n    AND mo.supplier_type='3'\n    AND mo.is_blue_offer\n    AND mo.is_last_gen\n    AND not mo.is_offer_has_gone\n    AND mo.in_last_index\n    AND mo.market_sku IN (\n            SELECT distinct msku\n            FROM `/home/market/production/replenishment/order_planning/2021-06-15/outputs/recommendations_3p`  with inline AS r\n            WHERE msku is not null AND r.supplier_type = 3)\nGROUP BY ('3p.' ||  CAST(stms.shop_id AS String) || '.' || CAST(mo.market_sku as String))  as ssku);\n\n\n$prices_1p = (SELECT\n    purchase_price.ssku as ssku,\n    Yson::ConvertToDouble(Yql::Lookup(Yson::ConvertToDict(purchase_price.dict_regular), '2021-06-15')) as purchase_price,\n    Yson::ConvertToDouble(Yql::Lookup(Yson::ConvertToDict(purchase_price.dict_promo), '2021-06-15')) as purchase_promo_price,\n    Yson::ConvertToDouble(Yql::Lookup(Yson::ConvertToDict(purchase_price.dict_purchase_price), '2021-06-15')) as purchase_result_price,\n    sale_price.price as sale_price,\n    sale_price.regular_price as regular_price\nFROM `/home/market/production/replenishment/order_planning/2021-06-15/intermediate/assortment_prices_dicts`  with inline as purchase_price\n    LEFT JOIN `/home/market/production/ir/ultra-controller/supplier_to_market_sku`  with inline as sku_mapping\n        ON sku_mapping.shop_sku_id = purchase_price.ssku\n    LEFT JOIN ANY `/home/market/production/replenishment/prod/sales_dynamics/calculation_steps/beru_offers/beru_offers_2021-06-15`  with inline as sale_price\n        ON sale_price.market_sku = sku_mapping.approved_market_sku_id\nWHERE sku_mapping.shop_id = 465852);\n\nSELECT * from $prices_1p\nunion all\nSELECT * FROM $prices_3p\nWHERE ssku IS NOT NULL;\n","data":"{\"data\":[ {\"Write\":[{\"Type\":[\"ListType\",[\"StructType\",[[\"purchase_price\",[\"OptionalType\",[\"DataType\",\"Double\"]]],[\"purchase_promo_price\",[\"OptionalType\",[\"DataType\",\"Double\"]]],[\"purchase_result_price\",[\"OptionalType\",[\"DataType\",\"Double\"]]],[\"regular_price\",[\"OptionalType\",[\"DataType\",\"Double\"]]],[\"sale_price\",[\"OptionalType\",[\"DataType\",\"Double\"]]],[\"ssku\",[\"OptionalType\",[\"DataType\",\"String\"]]]]]],\"Data\":[[[\"201\"],[\"301\"],[\"401\"],[\"601\"],[\"501\"],[\"1301\"]],[[\"202\"],[\"302\"],[\"402\"],[\"602\"],[\"502\"],[\"1102\"]],[[\"203\"],[\"303\"],[\"403\"],[\"603\"],[\"503\"],[\"1203\"]],[null,null,null,null,[\"105\"],[\"3p.638899.107985\"]],[null,null,null,null,[\"104\"],[\"3p.641432.107984\"]]]}],\"Position\":{\"Column\":\"1\",\"Row\":\"42\",\"File\":\"<main>\"}}],\"errors\":[],\"id\":\"623466c4054af007dbae12ad\",\"issues\":[{\"code\":0,\"column\":0,\"file\":\"<main>\",\"issues\":[{\"code\":4510,\"column\":32,\"file\":\"<main>\",\"issues\":[],\"message\":\"It is not recommended to directly access s-expressions functions via YQL::\\nThis mechanism is mostly intended for temporary workarounds or internal testing purposes\",\"row\":30,\"severity\":\"S_WARNING\"},{\"code\":4510,\"column\":32,\"file\":\"<main>\",\"issues\":[],\"message\":\"It is not recommended to directly access s-expressions functions via YQL::\\nThis mechanism is mostly intended for temporary workarounds or internal testing purposes\",\"row\":31,\"severity\":\"S_WARNING\"},{\"code\":4510,\"column\":32,\"file\":\"<main>\",\"issues\":[],\"message\":\"It is not recommended to directly access s-expressions functions via YQL::\\nThis mechanism is mostly intended for temporary workarounds or internal testing purposes\",\"row\":32,\"severity\":\"S_WARNING\"}],\"message\":\"Parse Sql\",\"row\":0,\"severity\":\"S_WARNING\"},{\"code\":1070,\"column\":0,\"file\":\"<main>\",\"issues\":[{\"code\":0,\"column\":0,\"file\":\"<main>\",\"issues\":[],\"message\":\"DQ cannot execute the query. Cause: unsupported join any\",\"row\":0,\"severity\":\"S_INFO\"}],\"message\":\"Optimization\",\"row\":0,\"severity\":\"S_INFO\"}],\"status\":\"COMPLETED\",\"updatedAt\":\"2022-03-18T11:04:00.407Z\",\"version\":1000000}","type":"YQL_QUERY"},{"cacheKey":null,"base64Value":null,"type":"YT_DATA"}]