[{"hashKey":"05e704769c17c4c860a484cddaab7e01","query":"USE hahn; \n        $osg_not_group = (\n            SELECT\n                SUBSTRING(TableName(),0,10) as `date`,\n                CAST(SUBSTRING(TableName(),11,2) AS INT64) / 4 as `qhour`,\n                `market_sku`,\n                `optimal_price`,\n                `warehouse_id`\n            FROM\n        RANGE (\n`/home/market/production/monetize/dynamic_pricing/expiring_goods/expiring_prices`,\n'2021-09-13T00:00:00',\n'2021-12-12T00:00:00'\n)\n        );\n\n        $osg = (\n            SELECT\n                `date`,\n                `qhour`,\n                `market_sku`,\n                MAX(`optimal_price`) AS `optimal_price`,\n                `warehouse_id`\n            FROM $osg_not_group\n        GROUP BY `date`,\n        `qhour`,\n        `market_sku`,\n        `warehouse_id`\n        );\n\n        $is_1P = ($supplier_id) -> { return $supplier_id == 465852};\n\n        $sales = (\n            SELECT\n                COALESCE(sku_transitions.new_entity_id, sales.market_sku) as market_sku,\n                sales.warehouse_id as warehouse_id,\n                sales.partner_id as supplier_id,\n                IF($is_1P(sales.partner_id), 1, 3) as supplier_type,\n                SUBSTRING(orders.creation_date, 0, 10) as `date`,\n                item_count,\n                orders.buyer_region_id as order_buyer_region_id\n            FROM RANGE (\n`/home/market/production/mstat/analyst/regular/cubes_vertica/fact_new_order_item_dict`,\n'2021-09',\n'2021-12'\n)  with inline   as sales\n        JOIN `/home/market/production/mstat/analyst/regular/cubes_vertica/fact_new_order_dict`  with inline as orders\n            ON sales.order_id = orders.id\n        LEFT JOIN\n            \n                `/home/market/production/mstat/analyst/regular/cubes_vertica/fact_new_order_delivery`  with inline\n            \n            as deliveries\n            ON sales.order_id = deliveries.order_id\n        LEFT JOIN `/home/market/production/mstat/dictionaries/shop_real_supplier/latest`  with inline as suppliers\n            ON sales.real_supplier_id = suppliers.rs_id\n        LEFT JOIN `/home/market/production/mstat/dictionaries/mbo/sku_transitions/latest`  with inline as sku_transitions\n            ON sales.market_sku = sku_transitions.old_entity_id\n        LEFT JOIN $osg as osg\n            ON (osg.market_sku = sales.market_sku AND osg.warehouse_id = sales.warehouse_id\n                    AND osg.`date` = orders.creation_date\n                    AND osg.qhour = CAST(SUBSTRING(orders.creation_datetime,11,2) AS INT64) / 4\n        )\n        WHERE orders.market_fulfilment_flag\n                AND (deliveries.shipment_datetime > '1970-01-01T00:00:00'\n                OR (orders.order_status != 'CANCELLED' AND orders.order_status != 'CANCELLED_WITHOUT_REFUND'))\n                AND DateTime::MakeDate(DateTime::ParseIso8601(orders.creation_date))\n                    BETWEEN Date('2021-09-13') AND Date('2021-12-12')\n                AND (osg.optimal_price IS NULL\n                    OR CAST(sales.fact_gross_items_rub_numeric AS Int64) > osg.optimal_price)\n        );\n\n        SELECT\n            market_sku,\n            warehouse_id,\n            order_buyer_region_id,\n            supplier_id,\n            `date`,\n            coalesce(sum_if(item_count, supplier_type = 1), 0) as sales_1p,\n            coalesce(sum(item_count), 0) as sales_all\n        FROM $sales\n        GROUP BY market_sku, warehouse_id, supplier_id, order_buyer_region_id, `date`\n","data":"{\"data\":[ {\"Write\":[{\"Type\":[\"ListType\",[\"StructType\",[[\"market_sku\",[\"OptionalType\",[\"DataType\",\"Int64\"]]],[\"warehouse_id\",[\"OptionalType\",[\"DataType\",\"Int64\"]]],[\"order_buyer_region_id\",[\"OptionalType\",[\"DataType\",\"Int64\"]]],[\"supplier_id\",[\"OptionalType\",[\"DataType\",\"Int64\"]]],[\"date\",[\"OptionalType\",[\"DataType\",\"String\"]]],[\"sales_1p\",[\"DataType\",\"Int64\"]],[\"sales_all\",[\"DataType\",\"Int64\"]]]]],\"Data\":[[[\"107981\"],[\"171\"],[\"1\"],[\"301\"],[\"2021-11-14\"],\"0\",\"1\"],[[\"107981\"],[\"171\"],[\"1\"],[\"465852\"],[\"2021-11-14\"],\"1\",\"1\"],[[\"107981\"],[\"171\"],[\"2\"],[\"302\"],[\"2021-11-14\"],\"0\",\"1\"],[[\"107983\"],[\"171\"],[\"5\"],[\"465852\"],[\"2021-11-16\"],\"12\",\"12\"],[[\"107981\"],[\"171\"],[\"2\"],[\"465852\"],[\"2021-11-25\"],\"3\",\"3\"],[[\"107981\"],[\"171\"],[\"3\"],[\"301\"],[\"2021-11-25\"],\"0\",\"4\"],[[\"2\"],[\"171\"],[\"4\"],[\"465852\"],[\"2021-11-28\"],\"10\",\"10\"],[[\"2\"],[\"171\"],[\"5\"],[\"301\"],[\"2021-11-28\"],\"0\",\"5\"]]}],\"Position\":{\"Column\":\"9\",\"Row\":\"73\",\"File\":\"<main>\"}}],\"errors\":[],\"id\":\"629e1953bab7930595e99eba\",\"issues\":[],\"status\":\"COMPLETED\",\"updatedAt\":\"2022-06-06T15:20:03.269Z\",\"version\":1000000}","type":"YQL_QUERY"},{"cacheKey":null,"base64Value":null,"type":"YT_DATA"}]