[{"hashKey":"2affac6afe939cc3307f5615053d6524","query":"USE hahn; PRAGMA AnsiInForEmptyOrNullableItemsCollections;\n\n-- Вынос функций нужен потому, что если их инлайнить, они будут пересоздаваться\n-- на каждой итерации листмапа, а данных у нас немало\n$get_stock = ($data) -> {\n    return $data.0;\n};\n\n$get_expiry = ($data) -> {\n    return $data.1;\n};\n\n-- Стоки с ОСГ\n$known_stocks = (\n    SELECT\n        AGGREGATE_LIST(AsTuple(s.fit, CAST(s.lifetime AS Int32)))                               AS expiry_list_all,\n        AGGREGATE_LIST(if(sup.supplier_type = 1, AsTuple(s.fit, CAST(s.lifetime AS Int32))))    AS expiry_list_1p,\n        s.msku                                                                                  AS msku,\n        w.region_id                                                                             AS warehouse_region_id\n    FROM `/home/market/production/replenishment/order_planning/2020-05-15/intermediate/stock_with_lifetime`  with inline AS s\n        LEFT JOIN `/home/market/production/replenishment/order_planning/2020-05-15/intermediate/warehouses`  with inline AS w ON w.id = s.warehouse_id\n        LEFT JOIN ANY `/home/market/production/replenishment/order_planning/2020-05-15/intermediate/suppliers`  with inline  AS sup ON sup.supplier_id = s.supplier_id\n    WHERE s.msku IS NOT NULL AND msku > 0\n        AND w.region_id IS NOT NULL AND w.region_id > 0\n    GROUP BY s.msku, w.region_id\n);\n\nSELECT\n    ToBytes(Yson::SerializeJson(Yson::From(ListMap(expiry_list_1p,  $get_stock))))  AS stocks_list_1p,\n    ToBytes(Yson::SerializeJson(Yson::From(ListMap(expiry_list_all, $get_stock))))  AS stocks_list_all,\n    ToBytes(Yson::SerializeJson(Yson::From(ListMap(expiry_list_1p,  $get_expiry)))) AS lifetimes_list_1p,\n    ToBytes(Yson::SerializeJson(Yson::From(ListMap(expiry_list_all, $get_expiry)))) AS lifetimes_list_all,\n    msku                                                                            AS msku,\n    warehouse_region_id                                                             AS warehouse_region_id\nFROM $known_stocks;\n","data":"{\"data\":[ {\"Write\":[{\"Type\":[\"ListType\",[\"StructType\",[[\"stocks_list_1p\",[\"OptionalType\",[\"DataType\",\"String\"]]],[\"stocks_list_all\",[\"OptionalType\",[\"DataType\",\"String\"]]],[\"lifetimes_list_1p\",[\"OptionalType\",[\"DataType\",\"String\"]]],[\"lifetimes_list_all\",[\"OptionalType\",[\"DataType\",\"String\"]]],[\"msku\",[\"OptionalType\",[\"DataType\",\"Int64\"]]],[\"warehouse_region_id\",[\"OptionalType\",[\"DataType\",\"Int64\"]]]]]],\"Data\":[[[\"[8]\"],[\"[8,19]\"],[\"[10]\"],[\"[10,11]\"],[\"11742757\"],[\"145\"]],[[\"[45]\"],[\"[45]\"],[\"[18]\"],[\"[18]\"],[\"13228052\"],[\"145\"]]]}],\"Position\":{\"Column\":\"1\",\"Row\":\"28\",\"File\":\"<main>\"}}],\"errors\":[],\"id\":\"6248a4a0bab793efee8952dc\",\"issues\":[{\"code\":1070,\"column\":0,\"file\":\"<main>\",\"issues\":[{\"code\":0,\"column\":0,\"file\":\"<main>\",\"issues\":[],\"message\":\"DQ cannot execute the query. Cause: unsupported join any\",\"row\":0,\"severity\":\"S_INFO\"}],\"message\":\"Optimization\",\"row\":0,\"severity\":\"S_INFO\"}],\"status\":\"COMPLETED\",\"updatedAt\":\"2022-04-02T19:32:18.473Z\",\"version\":1000000}","type":"YQL_QUERY"},{"cacheKey":null,"base64Value":null,"type":"YT_DATA"}]