{
    "agent": {
        "aliveMarkerAllowedAge": "600s",
        "check_persist_volume_presence_in_hostconfig": true,
        "crls": {
            "internal_ca": {
                "cache_file": "crls/internal_ca.crl",
                "url": "http://crls.yandex.ru/YandexInternalCA/YandexInternalCA.crl"
            }
        },
        "datomdb": {
            "maxBatchSize": 1024,
            "maxMutableDatoms": 10000
        },
        "defaultStorage": "/place",
        "directories_size_cache_settings": {
            "cache_duration": "5m",
            "enabled": true,
            "implementation": "gcache",
            "records_limit": 100
        },
        "dynamic_resources": {
            "cleanup_policy": "pending",
            "max_depth_before_next_sync": 8,
            "reset_parent_driver_status": true,
            "retries": 10
        },
        "enableExtendedMetrics": false,
        "feedback": {
            "feedHistoryQueueSize": 10,
            "feedbackDrainTimeout": "10s",
            "logGrabCoolDownPeriod": "1m",
            "logGrabSize": "1kB",
            "maxSizePerInstance": "200kB",
            "onlyFullStateFeedback": false,
            "resendPeriod": "30m",
            "timingThresholdWarning": "1m"
        },
        "fetcher": {
            "fastTaskPoolSize": 5,
            "filesTimeout": "5m",
            "slowTaskPoolSize": 5
        },
        "fs": {
            "walkTimeout": "10s"
        },
        "gc": {
            "delayBeforeSpecialGcCleanup": "1s",
            "fullSyncsBeforeSpecialGcCleanup": 1,
            "processGCLogWarnDuration": "10m",
            "volumeGCDelay": "5m",
            "volumeGCEnabled": true
        },
        "hook_behaviour": {
            "rerunStatusHooksOnAgentRestart": true
        },
        "hostConfiguration": {
            "primaryProvider": {
                "connection": {
                    "connectionTimeout": "30s",
                    "retryCount": 2,
                    "retryTimeout": "1s"
                },
                "host": "iss3man.yandex-team.ru",
                "mergePolicy": "withRespectToDeltas",
                "port": 9092,
                "ssl": {
                    "certificate_bundle_file": "/etc/certs/capi.pem",
                    "crl_ref": "internal_ca",
                    "peer_cn_pattern": "iss3man.yandex-team.ru"
                },
                "type": "thrift"
            },
            "providersNumber": 2,
            "secondaryProvider": {
                "connection": {
                    "connectionTimeout": "30s",
                    "retryCount": 2,
                    "retryTimeout": "1s"
                },
                "host": "iss3.yandex-team.ru",
                "mergePolicy": "withRespectToDeltas",
                "port": 9092,
                "ssl": {
                    "certificate_bundle_file": "/etc/certs/capi.pem",
                    "crl_ref": "internal_ca",
                    "peer_cn_pattern": "iss3.yandex-team.ru"
                },
                "type": "thrift"
            },
            "ypProvider": {
                "allowApply": false,
                "enabled": false,
                "heartbeatInterval": "1m",
                "host": "localhost",
                "notify": {
                    "port": 25540
                },
                "port": 8080
            }
        },
        "ipAwaiting": {
            "executor": {
                "poolSize": 1,
                "queueSize": 4
            },
            "http": {
                "bodyTailSize": "128b",
                "connectTimeout": "2s",
                "readTimeout": "2s",
                "urlTemplate": "http://127.0.0.1:22012/ready?ip=%s"
            },
            "strategy": "dummy",
            "timeLimits": {
                "maxExecutionTime": "5s",
                "minRestartPeriod": "1m"
            }
        },
        "jmx": {
            "jolokia": {
                "policyLocation": "classpath:/jolokia.policy"
            },
            "mp": {
                "port": 25537
            }
        },
        "jsonDynamicPropertyFiles": [
            "platform-properties.json"
        ],
        "loggingSettingsPath": "./",
        "monitor": {
            "feedback_states": [
                "ACTIVE",
                "SKYNET_FAILURE",
                "HOOK_FAILED",
                "HOOK_SEMI_FAILED",
                "PREPARED",
                "ENTITY_RESOURCES_NOT_READY",
                "PORTO_FAILURE"
            ]
        },
        "porto": {
            "async": {
                "dispatcher": {
                    "cache": {
                        "layer": {
                            "write": "15m"
                        },
                        "volume": {
                            "write": "15m"
                        }
                    }
                },
                "poolSize": 10,
                "timeouts": {
                    "createVolume": {
                        "requestTimeout": "10m"
                    },
                    "default": {
                        "connectTimeout": "20s",
                        "requestTimeout": "20s"
                    },
                    "importLayer": {
                        "requestTimeout": "10m"
                    },
                    "linkVolume": {
                        "requestTimeout": "10m"
                    },
                    "removeLayer": {
                        "requestTimeout": "10m"
                    },
                    "unlinkVolume": {
                        "requestTimeout": "10m"
                    }
                }
            },
            "defaultUlimit": "nofile: 102400 204800; memlock: 41943040000 41943040000",
            "metaProcessContainer": "ISS-AGENT",
            "propertyListProvider": {
                "restrictedList": {
                    "data": [
                        "max_rss",
                        "time",
                        "cpu_usage"
                    ],
                    "properties": []
                },
                "type": "restrict"
            },
            "socketPath": "/run/portod.socket",
            "socketTimeOut": 8000,
            "volume_allowed_properties": [
                "read_only"
            ],
            "waitTimeout": "1s",
            "workers": 2
        },
        "preemptionStrategy": "preempt-implicitly-removed",
        "printPostMortem": true,
        "reopenlogs": {
            "akkaTimeout": "10m",
            "retries": 5
        },
        "root": ".",
        "rootOnStorage": "db/iss3",
        "secure_webapp": {
            "port": 25539,
            "ssl": {
                "certificate_bundle_file": "/etc/certs/capi.pem",
                "crl_ref": "internal_ca"
            }
        },
        "shardtracker": {
            "cacheLifeTime": "5m",
            "host": "shardtracker.search.yandex.net",
            "port": 9100,
            "timeout": "3s"
        },
        "spaceToLeaveOnDisk": "10g",
        "state": {
            "migrator": "_",
            "statePreallocatedSizeMb": 100,
            "stateRollover": "legacy",
            "stateStoragePath": "/iss3",
            "unbound_migrator": {
                "backup_if_states_exists_in_destination": false,
                "backup_postfix": "backup",
                "force_override_states_in_destination": false,
                "keep_old_states_with_postfix": true,
                "source": "/db/iss3",
                "storage": "/iss3"
            }
        },
        "storageMountPoints": [
            "/ssd",
            "/place"
        ],
        "sync": {
            "autoSyncPeriod": "60s",
            "autoUpdatePeriod": "60s",
            "minResyncPeriod": "500ms"
        },
        "tmp": "/iss3/tmp",
        "webapp": {
            "pool_size": 10,
            "port": 25536,
            "queue_size": 20,
            "request_timeout_ms": 120000
        }
    },
    "akka": {
        "actor": {
            "default-dispatcher": {
                "executor": "fork-join-executor",
                "fork-join-executor": {
                    "parallelism-factor": 1,
                    "parallelism-max": 3,
                    "parallelism-min": 1
                },
                "type": "Dispatcher"
            },
            "mailbox": {
                "requirements": {
                    "ru.yandex.iss.utils.EvictingUnboundedMessageQueueSemantics": "evicting-dispatcher-mailbox"
                }
            }
        },
        "logger-startup-timeout": "25s",
        "loggers": [
            "akka.event.slf4j.Slf4jLogger"
        ],
        "loglevel": "ERROR"
    },
    "evicting-dispatcher": {
        "mailbox-requirement": "ru.yandex.iss.utils.EvictingUnboundedMessageQueueSemantics"
    },
    "evicting-dispatcher-mailbox": {
        "mailbox-capacity": 1000,
        "mailbox-type": "ru.yandex.iss.utils.EvictingMailbox"
    },
    "local": {
        "agent": {
            "webapp": {
                "pool_size": 10,
                "port": 25536,
                "queue_size": 20,
                "request_timeout_ms": 120000
            }
        },
        "configuration_filter": {
            "cache": {
                "expire_after": "1m",
                "max_entries": 100
            }
        },
        "configurations": {
            "cache": {
                "expire_after": "2m",
                "max_entries": 1000
            },
            "loading_timeout": "10s"
        },
        "creator": {
            "threads": 1
        },
        "event_repository": {
            "size": 1024
        },
        "filter": {
            "threads": 1
        },
        "instance_filter": {
            "cache": {
                "expire_after": "1m",
                "max_entries": 1000
            }
        },
        "loader": {
            "threads": 1
        },
        "pusher": {
            "agent_port": 25536,
            "host": "::",
            "http_transport_enabled": true,
            "max_connections": 1000,
            "port": 9999,
            "timeout": "1000ms"
        },
        "response_writer": {
            "threads": 1
        },
        "template_service": {
            "cache": {
                "expire_after": "1m",
                "max_entries": 10
            }
        },
        "validator": {
            "max_errors_for_rule": 100,
            "threads": 8
        }
    },
    "pusher": {
        "port": 9999
    },
    "remote": {
        "host": "::",
        "port": 0
    },
    "servlet-dispatcher": {
        "executor": "thread-pool-executor",
        "thread-pool-executor": {
            "core-pool-size-factor": 1,
            "core-pool-size-max": 2,
            "core-pool-size-min": 0
        },
        "type": "Dispatcher"
    }
}