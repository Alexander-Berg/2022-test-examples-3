import market.dynamic_pricing.deprecated.autostrategy_bounds.lib.get_bounds as tested_module


def test_mapper():
    input_data = [
        {"boundings": {"lower_bound": {"price_type": "fixed", "percentage": -0.10, "value": 550.00},
                       "upper_bound": {"price_type": "fixed", "value": 0.0},
                       "lower_bound2": {"price_type": "fixed", "value": 10.0},
                       "upper_bound2": {"price_type": "REF_MIN_PRICE", "value": -10000.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_price": 10.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         },
        {"boundings": {"lower_bound": {"price_type": "purch", "percentage": -0.20},
                       "upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "lower_bound2": {"price_type": "REF_MIN_REGULAR_PRICE", "percentage": 0.02},
                       "upper_bound2": {"price_type": "REF_MIN_PRICE", "value": 1.00},
                       "lower_bound3": {"price_type": "BLUE_MIN_PRICE", "percentage": 0.03},
                       "upper_bound3": {"price_type": "ref_min_soft_price", "value": 33.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_regular_price": 1000.0,
         "ref_min_price": 10000.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         "priority_price": 10.0,
         "is_kvi": 1,
         "rule_name": 'РРЦ',
         },
        {"boundings": {"lower_bound": {"price_type": "purch", "percentage": -0.20},
                       "upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "lower_bound2": {"price_type": "REF_MIN_REGULAR_PRICE", "percentage": 0.02},
                       "upper_bound2": {"price_type": "REF_MIN_PRICE", "value": 1.00},
                       "lower_bound3": {"price_type": "BLUE_MIN_PRICE", "percentage": 0.03},
                       "upper_bound3": {"price_type": "ref_min_soft_price", "value": 33.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_regular_price": 1000.0,
         "ref_min_price": 10000.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         "is_kvi": 0
         },
        {"boundings": {"lower_bound": {"price_type": "purch", "percentage": -0.20},
                       "upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "lower_bound2": {"price_type": "REF_MIN_REGULAR_PRICE", "percentage": 0.02},
                       "upper_bound2": {"price_type": "REF_MIN_PRICE", "value": 1.00},
                       "lower_bound3": {"price_type": "BLUE_MIN_PRICE", "percentage": 0.03},
                       "upper_bound3": {"price_type": "ref_min_soft_price", "value": 33.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_regular_price": 1000.0,
         "ref_min_price": 10000.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         "is_kvi": 1
         },
        {"boundings": {"lower_bound": {"price_type": "purch", "percentage": -0.20},
                       "upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "lower_bound2": {"price_type": "REF_MIN_REGULAR_PRICE", "percentage": 0.02},
                       "upper_bound2": {"price_type": "REF_MIN_PRICE", "value": 1.00},
                       "lower_bound3": {"price_type": "BLUE_MIN_PRICE", "percentage": 0.03},
                       "upper_bound3": {"price_type": "ref_min_soft_price", "value": 33.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_regular_price": 1000.0,
         "ref_min_price": 10000.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         },
        {"boundings": {"lower_bound": {"price_type": "purch", "percentage": -0.20},
                       "upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "lower_bound3": {"price_type": "BLUE_MIN_PRICE", "percentage": 0.03},
                       "upper_bound3": {"price_type": "ref_min_soft_price", "value": 33.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_regular_price": 1000.0,
         "ref_min_price": 10000.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         },
        {"boundings": {"lower_bound3": {"price_type": "BLUE_MIN_PRICE", "percentage": 0.03},
                       "upper_bound3": {"price_type": "ref_min_soft_price", "value": 33.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_regular_price": 1000.0,
         "ref_min_price": 10000.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         },
        {"boundings": {"lower_bound": {"price_type": "purch", "percentage": -0.20},
                       "upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "lower_bound2": {"price_type": "REF_MIN_REGULAR_PRICE", "percentage": 0.02},
                       "upper_bound2": {"price_type": "REF_MIN_PRICE", "value": 1.00},
                       "lower_bound3": {"price_type": "BLUE_MIN_PRICE", "percentage": 0.03},
                       "upper_bound3": {"price_type": "ref_min_soft_price", "value": 33.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_price": 10000.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         },
        {"boundings": {"upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "lower_bound2": {"price_type": "REF_MIN_REGULAR_PRICE", "percentage": 0.02},
                       "upper_bound2": {"price_type": "REF_MIN_PRICE", "value": 1.00},
                       "lower_bound3": {"price_type": "BLUE_MIN_PRICE", "percentage": 0.03},
                       "upper_bound3": {"price_type": "ref_min_soft_price", "value": 33.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_price": 10000.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         },
        {"boundings": {"lower_bound": {"price_type": "purch", "percentage": -0.20},
                       "upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "lower_bound2": {"price_type": "REF_MIN_REGULAR_PRICE", "percentage": 0.02},
                       "upper_bound2": {"price_type": "REF_MIN_PRICE", "value": 1.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_price": 10000.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         },
        {"boundings": {"lower_bound": {"price_type": "purch", "percentage": -0.20},
                       "upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "lower_bound2": {"price_type": "REF_MIN_REGULAR_PRICE", "percentage": 0.02},
                       "upper_bound2": {"price_type": "REF_MIN_PRICE", "value": 1.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_price": -1.0,
         "blue_min_price": 100000.0,
         "ref_min_soft_price": 1000000.0,
         },
        {"boundings": {"lower_bound": {"price_type": "purch", "percentage": -0.20},
                       "upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "lower_bound2": {"price_type": "REF_MIN_REGULAR_PRICE", "percentage": 0.02},
                       "upper_bound2": {"price_type": "REF_MIN_PRICE", "value": 1.00},
                       "lower_bound3": {"price_type": "BLUE_MIN_PRICE", "percentage": 0.03},
                       "upper_bound3": {"price_type": "ref_min_soft_price", "value": 33.00},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "blue_min_price": 10.0,
         "ref_min_soft_price": 1000000.0,
         "is_kvi": 1
         },
        {"boundings": {"lower_bound": {"price_type": "purch", "percentage": -0.20},
                       "upper_bound": {"price_type": "purch", "percentage": 0.20},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "ref_min_price": 10000.0,
         },
        {"boundings": {"lower_bound": {"price_type": "REF_MIN_PRICE", "percentage": 0.0},
                       "upper_bound": {"price_type": "ref_min_soft_price", "percentage": 0.1},
                       "lower_bound2": {"price_type": "purch", "percentage": 0.1},
                       "upper_bound2": {"price_type": "purch", "percentage": 0.5},
                       "lower_bound3": {"price_type": "fixed", "value": 120.0},
                       "upper_bound3": {"price_type": "REF_MIN_PRICE", "percentage": 0.1},
                       "rounding": 5637145331},
         "purchase_price": 100.0,
         "is_kvi": 0,
         },
        {"boundings": {"lower_bound": {"price_type": "REF_MIN_PRICE", "percentage": 0.0},
                       "upper_bound": {"price_type": "ref_min_soft_price", "percentage": 0.1},
                       "lower_bound2": {"price_type": "purch", "percentage": 0.1},
                       "upper_bound2": {"price_type": "purch", "percentage": 0.5},
                       "upper_bound3": {"price_type": "REF_MIN_PRICE", "percentage": 0.1},
                       "rounding": 5637145331},
         "purchase_price": 10.0,
         "is_kvi": 0,
         },
    ]
    res = []
    for t in tested_module.mapper(input_data):
        res.append((t.low_price, t.high_price, t.rule_name))

    assert [
        (495.0, None, 'Другое'),
        (10.0, 10.0, 'РРЦ'),
        (1020.0, 120.0, 'Другое'),
        (10000.0, 10000.0, 'Другое'),
        (1020.0, 120.0, 'Другое'),
        (80.0, 120.0, 'Другое'),
        (10000.0, None, 'Другое'),
        (103000.0, 120.0, 'Другое'),
        (103000.0, 120.0, 'Другое'),
        (80.0, 120.0, 'Другое'),
        (100.0, 120.0, 'Другое'),
        (100.0, 80.0, 'Другое'),
        (80.0, 120.0, 'Другое'),
        (120.0, 150.0, 'Другое'),
        (11.0, 15.0, 'Другое'),
    ] == res


def test_stock_mapper():
    input_data = [
        {"in_transit": {"2019-09-26": 4,
                        "2019-09-28": 8,
                        "2019-10-30": 111
                        },
         "today": '2019-09-26',
         "lid_time": 9,
         "stock": 2
         },
        {"in_transit": {"2019-08-22": 3,
                        "2019-09-02": 1,
                        "2019-09-16": 100,
                        "2019-10-30": 111
                        },
         "today": '2019-09-01',
         "lid_time": 19,
         "stock": 4,
         'min_delivery_date': '2019-09-08'
         },
        {"today": '2019-09-01',
         "stock": 10
         }
    ]
    res = []
    for t in tested_module.stock_mapper(input_data):
        res.append((t.max_daily_sales_lead_time, t.max_daily_sales))
    assert [
        (1.4, 1.4),
        (0.5, 1.0),
        (10.0, 10.0)
    ] == res
