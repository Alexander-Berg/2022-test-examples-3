{
  "owner": "marketmoney",
  "tableName": "clickdaemon2_testing_nginx",
  "splits": {
    "code": "http_code",
    "dc": "if(substring(host, 1, 3) in ('iva', 'man', 'vla', 'sas'), substring(host, 1, 3), if(endsWith(host, 'yp-c.yandex.net'), substring(host, position(host, '.') + 1, 3), if(dictGetString('dc', 'dc', sipHash64(host)) <> '', dictGetString('dc', 'dc', sipHash64(host)), 'undefined_dc')))",
    "host": "host"
  },
  "metrics": [
    {
      "metricNameArray": [
        "clickdaemon2_testing.http-errors-500.${dc}.${host}.percent",
        "clickdaemon2_testing.http-errors-500.${dc}.percent",
        "clickdaemon2_testing.http-errors-500.percent"
      ],
      "period": "ONE_MIN",
      "metricField": "countIf(http_code >= 500 and http_code <= 599 and method != 'ping')/count() * 100",
      "type": "SIMPLE"
    },
    {
      "metricNameArray": [
        "clickdaemon2_testing.http-errors.${dc}.${host}.percent",
        "clickdaemon2_testing.http-errors.${dc}.percent",
        "clickdaemon2_testing.http-errors.percent"
      ],
      "period": "ONE_MIN",
      "metricField": "countIf(http_code >= 400 and http_code <= 599 and method != 'ping')/count() * 100",
      "type": "SIMPLE"
    },
    {
      "metricNameArray": [
        "clickdaemon2_testing.http-codes-rps.${code}",
        "clickdaemon2_testing.http-codes-rps.${dc}.${code}",
        "clickdaemon2_testing.http-codes-rps.${dc}.${host}.${code}",
        "clickdaemon2_testing.rps.${dc}",
        "clickdaemon2_testing.rps.${dc}.${host}",
        "clickdaemon2_testing.rps.total"
      ],
      "period": "ONE_MIN",
      "metricField": "countIf(method != 'ping') / 60",
      "type": "SIMPLE"
    },
    {
      "metricNameArray": [
        "clickdaemon2_testing.timing.${dc}.${host}",
        "clickdaemon2_testing.timing.total"
      ],
      "period": "ONE_MIN",
      "metricField": "resptime_ms",
      "filter": "method != 'ping'",
      "type": "QUANTILE_TIMING"
    },
    {
      "metricNameArray": [
        "clickdaemon2_testing.http-errors-400.${dc}.${host}.percent",
        "clickdaemon2_testing.http-errors-400.${dc}.percent",
        "clickdaemon2_testing.http-errors-400.percent"
      ],
      "period": "ONE_MIN",
      "metricField": "countIf(http_code >= 400 and http_code <= 499 and method != 'ping')/count() * 100",
      "type": "SIMPLE"
    },
    {
      "metricNameArray": [
        "clickdaemon2_testing.pings.http-codes-rps.${code}",
        "clickdaemon2_testing.pings.http-codes-rps.${dc}.${code}",
        "clickdaemon2_testing.pings.http-codes-rps.${dc}.${host}.${code}",
        "clickdaemon2_testing.pings.rps.${dc}",
        "clickdaemon2_testing.pings.rps.${dc}.${host}",
        "clickdaemon2_testing.pings.rps.total"
      ],
      "period": "ONE_MIN",
      "metricField": "countIf(method = 'ping') / 60",
      "type": "SIMPLE"
    },
    {
      "metricNameArray": [
        "clickdaemon2_testing.pings.timing.${dc}.${host}",
        "clickdaemon2_testing.pings.timing.total"
      ],
      "period": "ONE_MIN",
      "metricField": "resptime_ms",
      "filter": "method = 'ping'",
      "type": "QUANTILE_TIMING"
    }
  ]
}
