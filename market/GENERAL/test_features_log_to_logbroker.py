#!/usr/bin/env python
# -*- coding: utf-8 -*-

import runner  # noqa

from core.types import BlueOffer, MarketSku, Model, Offer, Shop
from core.testcase import TestCase, main
from core.logs import LogBrokerTopicBackend, FeatureLogFrontend
from core.logbroker import LogBrokerClient, FEATURE_TOPIC


def filter_lines_without_time(s):
    return [x for x in s.split() if x.split('=')[0].find('time') == -1]


class T(TestCase):
    @classmethod
    def prepare(cls):
        cls.settings.default_search_experiment_flags += ['market_filter_offers_with_model_without_sku=0']

        cls.settings.logbroker_enabled = True
        cls.index.models += [
            Model(title="kiyanka model has_pic", hyperid=1, vendor_id=1348),  # picinfo will be autogenerated
            Model(title="kiyanka model no_pic", no_picture=True, no_add_picture=True, hyperid=2),
        ]

        cls.index.offers += [
            Offer(title='kiyanka offer has_pic', picture="1", waremd5='wgrU12_pd1mqJ6DJm_9nEA', vendor_id=3491),
            Offer(title='kiyanka offer no_pic', no_picture=True, waremd5='ZRK9Q9nKpuAsmQsKgmUtyg'),
        ]

        # test_offer_recommended_by_vendor data
        cls.index.offers += [
            Offer(title='recommended', is_recommended=True, waremd5='EUhIXt-nprRmCEEWR-cysw'),
            Offer(title='nonrecommended', is_recommended=False, waremd5='VpUwTl5gv-d1vJpKS_S0zQ'),
        ]

        # for a promo code support
        cls.index.shops += [
            Shop(fesh=10001, regions=[187], cpa=Shop.CPA_REAL, subsidies=Shop.SUBSIDIES_ON),
        ]
        cls.index.offers += [Offer(title='мяучий оффер', fesh=10001, cpa=Offer.CPA_REAL)]
        cls.index.offers += [Offer(title='не мяучий оффер', fesh=10001, cpa=Offer.CPA_NO)]

        cls.index.offers += [Offer(title='котиковый оффер', price=100, price_old=200)]

        cls.index.shops += [
            Shop(fesh=1, priority_region=213, regions=[213], name='Новые игрушки', cpa=Shop.CPA_REAL),
        ]

        cls.index.offers += [Offer(fesh=1, title='auction', price=100, price_old=200)]

        for i in range(10):
            cls.index.shops += [Shop(fesh=20000 + i, priority_region=213)]
            cls.index.offers += [Offer(title='offerincut', fesh=20000 + i)]

        # test_rgb_param
        cls.index.mskus += [
            MarketSku(sku=10000001, title="kiyanka blue sku", hyperid=100, blue_offers=[BlueOffer()]),
        ]

    def build_feature_log_with_logbroker(self):
        feature_log_logbroker = FeatureLogFrontend()
        feature_log_logbroker.bind(LogBrokerTopicBackend(self.logbroker, FEATURE_TOPIC, LogBrokerClient.CODEC_GZIP))
        feature_log_logbroker.dump('*')
        return feature_log_logbroker

    def test_logbroker_got_correct_log(self):
        self.report.request_json('place=prime&text=мяучий&show-urls=external')
        self.report.request_json(
            'place=prime&text=мяучий&show-urls=external'
            + '&rearr-factors=market_enable_direct_sending_feature_logs_to_logbroker=1'
        )

        for x, y in zip(self.build_feature_log_with_logbroker().backend, self.feature_log.backend):
            self.assertEqual(filter_lines_without_time(x), filter_lines_without_time(y))


if __name__ == '__main__':
    main()
