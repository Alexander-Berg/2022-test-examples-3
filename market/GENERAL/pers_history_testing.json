{
  "owner": "marketpers",
  "tableName": "pers_history_testing",
  "splits": {
    "http_method": "http_method",
    "url": "url",
    "dc": "if(substring(host, 1, 3) in ('iva', 'man', 'vla', 'sas'), substring(host, 1, 3), if(endsWith(host, 'yp-c.yandex.net'), substring(host, position(host, '.') + 1, 3), if(dictGetString('dc', 'dc', sipHash64(host)) <> '', dictGetString('dc', 'dc', sipHash64(host)), 'undefined_dc')))",
    "host": "host",
    "http_code": "http_code"
  },
  "metrics": [
    //    RPS
    {
      "metricNameArray": [
        "pers-history.testing.rps.TOTAL",
        "pers-history.testing.rps.dc.${dc}",
        "pers-history.testing.rps.host.${host}"
      ],
      "period": "FIVE_MIN",
      "metricField": "countIf(url not in ('/ping', '/monitor'))/(5*60)",
      "type": "SIMPLE"
    },
    {
      "metricNameArray": [
        "pers-history.testing.rps.resource.${url}.${http_method}.TOTAL",
        "pers-history.testing.rps.resource.${url}.${http_method}.code.${http_code}"
      ],
      "period": "FIVE_MIN",
      "metricField": "count()/(5*60)",
      "type": "SIMPLE"
    },
    // TIMINGS
    {
      "metricNameArray": [
        "pers-history.testing.timings.TOTAL",
        "pers-history.testing.timings.dc.${dc}",
        "pers-history.testing.timings.host.${host}"
      ],
      "period": "FIVE_MIN",
      "metricField": "resptime_ms",
      "filter":"url not in ('/ping', '/monitor') and http_code < 400",
      "type": "QUANTILE_TIMING"
    },
    {
      "metricName": "pers-history.testing.timings.resource.${url}.${http_method}",
      "period": "FIVE_MIN",
      "metricField": "resptime_ms",
      "filter": "http_code < 400",
      "type": "QUANTILE_TIMING"
    },
    // 5xx-PERCENT
    {
      "metricNameArray": [
        "pers-history.testing.5xx-percent.TOTAL",
        "pers-history.testing.5xx-percent.dc.${dc}",
        "pers-history.testing.5xx-percent.host.${host}"
      ],
      "period": "FIVE_MIN",
      "metricField": "countIf(http_code >=500 and http_code < 600 and url not in ('/ping', '/monitor')) / countIf(url not in ('/ping', '/monitor')) * 100",
      "type": "SIMPLE",
      "valueOnNan" : 0
    },
    {
      "metricName": "pers-history.testing.5xx-percent.resource.${url}.${http_method}",
      "period": "FIVE_MIN",
      "metricField": "countIf(http_code >=500 and http_code < 600) / count() * 100",
      "type": "SIMPLE",
      "valueOnNan" : 0
    },
    // ERRORS-PERCENT
    {
      "metricNameArray": [
        "pers-history.testing.errors-percent.TOTAL",
        "pers-history.testing.errors-percent.dc.${dc}",
        "pers-history.testing.errors-percent.host.${host}"
      ],
      "period": "FIVE_MIN",
      "metricField": "countIf(http_code >= 400 and url not in ('/ping', '/monitor')) / countIf(url not in ('/ping', '/monitor')) * 100",
      "type": "SIMPLE",
      "valueOnNan" : 0
    },
    {
      "metricName": "pers-history.testing.errors-percent.resource.${url}.${http_method}",
      "period": "FIVE_MIN",
      "metricField": "countIf(http_code >= 400) / count() * 100",
      "type": "SIMPLE",
      "valueOnNan" : 0
    }
  ],
  "commonSolomonLabels": {
    "project": "market-pers-history",
    "service": "pers-history",
    "cluster": "testing"
  },
  "solomonSensors": [
    //    RPS
    {
      "labelsArray": [
        {"sensor": "rps", "dc": "ALL", "host": "ALL"},
        {"sensor": "rps", "dc": "${dc}", "host": "ALL"},
        {"sensor": "rps", "dc": "${dc}","host": "${host}"}
      ],
      "period": "ONE_MIN",
      "metricField": "countIf(url not in ('/ping', '/monitor'))/(60)",
      "type": "SIMPLE"
    },
    {
      "labelsArray": [
        {"sensor": "rps_by_resource", "url": "${url}", "http_method": "${http_method}", "http_code": "ALL"},
        {"sensor": "rps_by_resource", "url": "${url}", "http_method": "${http_method}", "http_code": "${http_code}"}
      ],
      "period": "ONE_MIN",
      "metricField": "count()/(60)",
      "type": "SIMPLE"
    },
    // TIMINGS
    {
      "labelsArray": [
        {"sensor": "timings", "dc": "ALL", "host": "ALL"},
        {"sensor": "timings", "dc": "${dc}", "host": "ALL"},
        {"sensor": "timings", "dc": "${dc}","host": "${host}"}
      ],
      "period": "ONE_MIN",
      "metricField": "resptime_ms",
      "quantiles": [0.9, 0.95, 0.99, 0.995, 0.997, 0.999],
      "filter":"url not in ('/ping', '/monitor') and http_code < 400",
      "type": "QUANTILE_TIMING"
    },
    {
      "labelsArray": [
        {"sensor": "timings_by_resource", "url": "${url}", "http_method": "${http_method}"}
      ],
      "period": "ONE_MIN",
      "metricField": "resptime_ms",
      "quantiles": [0.9, 0.95, 0.99, 0.995, 0.997, 0.999],
      "filter": "http_code < 400",
      "type": "QUANTILE_TIMING"
    },
    // 5xx-PERCENT
    {
      "labelsArray": [
        {"sensor": "errors_5xx", "dc": "ALL", "host": "ALL"},
        {"sensor": "errors_5xx", "dc": "${dc}", "host": "ALL"},
        {"sensor": "errors_5xx", "dc": "${dc}","host": "${host}"}
      ],
      "period": "ONE_MIN",
      "metricField": "countIf(http_code >=500 and http_code < 600 and url not in ('/ping', '/monitor')) / countIf(url not in ('/ping', '/monitor')) * 100",
      "type": "SIMPLE",
      "valueOnNan" : 0
    },
    {
      "labelsArray": [
        {"sensor": "errors_5xx_by_resource", "url": "${url}", "http_method": "${http_method}"}
      ],
      "period": "ONE_MIN",
      "metricField": "countIf(http_code >=500 and http_code < 600) / count() * 100",
      "type": "SIMPLE",
      "valueOnNan" : 0
    },
    // ERRORS-PERCENT
    {
      "labelsArray": [
        {"sensor": "errors", "dc": "ALL", "host": "ALL"},
        {"sensor": "errors", "dc": "${dc}", "host": "ALL"},
        {"sensor": "errors", "dc": "${dc}","host": "${host}"}
      ],
      "period": "ONE_MIN",
      "metricField": "countIf(http_code >= 400 and url not in ('/ping', '/monitor')) / countIf(url not in ('/ping', '/monitor')) * 100",
      "type": "SIMPLE",
      "valueOnNan" : 0
    },
    {
      "labelsArray": [
        {"sensor": "errors_by_resource", "url": "${url}", "http_method": "${http_method}"}
      ],
      "period": "ONE_MIN",
      "metricField": "countIf(http_code >= 400) / count() * 100",
      "type": "SIMPLE",
      "valueOnNan" : 0
    }
  ]
}
