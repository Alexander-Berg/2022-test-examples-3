init_by_lua_block {
    tvm = require "nginx.tvm"
}


upstream mpfs-intapi {
    server 127.0.0.1:3133;

    keepalive 64;
}

server {
    listen 8080     default;
    listen  [::]:8080 default ipv6only=on;

    listen 8443 default ssl;
    listen [::]:8443 default ipv6only=on ssl;

    server_name     intapi.disk.yandex.net;

    include ssl/intapi-https;

    tvm_load_asymm_keys /etc/nginx/keys/tvm-asymmetric.public;

    include uwsgi_params_api;
    uwsgi_buffers 16 64k;
    uwsgi_read_timeout 600;

    proxy_http_version 1.1;
    proxy_set_header Connection "";
    keepalive_timeout     120 120;

    location @tvm_pass {
        set $uids ''; 
        set $client_ids ''; 

        access_by_lua '
            local ticket_string = ngx.req.get_headers().ticket
            local tvm_debug = true

            if ticket_string == nil then
                ngx.log(ngx.ERR, "No ticket was passed")
                ngx.exit(401)
            end

            local ticket, error = tvm.check_ticket(ticket_string)
            if error then
                ngx.log(ngx.ERR, "Error while checking ticket: ", error)
                ngx.exit(403)
            end

            if tvm_debug then
                ngx.var.uids = ticket:get_uids()
                ngx.var.client_ids = ticket:get_client_ids()
                ngx.log(ngx.ERR, "client_ids: ", ngx.var.client_ids, ", uids: ", ngx.var.uids)
            end

            local valid_client_ids = {109, 110}
            local i = 1 

            while valid_client_ids[i] do
                local check_result = ticket:check_client_id(valid_client_ids[i])
                if check_result then
                    return
                end
                i = i+1 
            end

            ngx.log(ngx.ERR, "Ticket check was failed")
            ngx.exit(403)
     
        ';

        uwsgi_pass mpfs-intapi;
    }


    location @simple_pass {
        uwsgi_pass mpfs-intapi;
    }   

    location / { 
        if ($tvm_net != 0) {
           error_page 402 = @tvm_pass;
           return 402;
        }
    
        error_page 402 = @simple_pass;
        return 402;
    }   



}
