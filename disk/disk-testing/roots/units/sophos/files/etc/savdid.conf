# The name of a file to hold the process ID
# Only used when running in daemon mode
# Default is /var/run/savdid.pid

pidfile: /var/run/savdid.pid

# User name and group for daemon to switch to for normal running
# savdi must be running as root for this to be useful
user: savdi
group: savdi

# No of worker threads to start up
# Normally should be at least the maximum no of clients
# Default is 3
threadcount: 32 # yasearch: was 120

# Maximum no of connections/sessions to queue up
# Further connections will be rejected
maxqueuedsessions: 0

# Where to find the virus data if it is held somewhere other than normal
# These options can be specified under the savi configuration but that
# is not advised.

virusdatadir: /var/lib/sophos
#virusdataname: vdl
idedir: /var/lib/sophos

# What to do when the daemon must exit
# Options are:-
#     DONTWAIT (just exit now!)
#     REQUEST  (wait for current requests to complete)
#     SESSION  (wait for current sessions to complete)
# Case 1) An exception has occurred and operation could be compromised
onexception: REQUEST

# Case 2) A request has been made for it to exit
# If there are long running sessions then REQUEST should be considered
onrequest: REQUEST

log {
    # Specify the logging mechanism {CONSOLE|FILE|SYSLOG}

    type: SYSLOG 

    # Specify the level of logging required
    # 0 = errors+threats
    # 1 = (0) + process events
    # 2 = (1) + session events
    # Default is 2

    loglevel: 1
}


#
# Define an IP channel for SSSP
#

channel {

    commprotocol {
	type: IP

	# IP Address to listen on, default is 0.0.0.0 (any)
	address: 127.0.0.1
	port: 4010

	# Subnet of acceptable client IP addresses
	#subnet: 87.250.239.214/16

	# idle timeout in secs when waiting for a request
	# 0, the default, is forever
	#requesttimeout: 0

	# timeout in secs between characters when sending data
	sendtimeout: 5

	# idle timeout in secs between characters when receiving data
	recvtimeout: 10
    }

    scanprotocol {
	type: SSSP

	# Do we allow the client to use SCANFILE?
	# Options are NO, FILE, DIR, SUBDIR
	allowscanfile: FILE

	# Do we allow the client to use SCANDATA?
	allowscandata: NO

	# If SCANDATA is allowed:-
	# maximum amount of data, in bytes, the client can send
	maxscandata: 500000
	# The maximum size of data that will be held in memory
	# for scanning before it is transferred to a temporary
	# file.
	maxmemorysize: 500000

	# The directory and stub file name that will be used for
	# the temporary data files
	tmpfilestub: /u0/savdi_tmp

	# Log each request made by a client?
	logrequests: YES
    }

    scanner {
	# type and inprocess can only be SAVI and YES for now
	type: SAVI
	inprocess: YES

	# Max time to be allowed for scanning a single file
	maxscantime: 600

	# Max time in seconds to be allowed to complete a request
	maxrequesttime: -1

	# deny and allow options control what files a client can request
	# to scan
	# If deny is used then everything else is allowed unless
	# explicitly denied
	# If allow is used then everything else is denied unless
	# explicitly allowed.
	# If a directory tree is allowed, sub-trees may be explicitly
	# denied, but the converse is not true. If a directory tree
	# is denied it is not possible to allow subtrees.
	#deny: /etc
	#deny: /usr
	allow: /u0/disk/uploader
        allow: /u0/savdi_tmp

	# SAVI/Engine options
	# EnableAutoStop is recommended
	savists: EnableAutoStop 1

	savigrp: GrpArchiveUnpack 1
	savigrp: GrpInternet 1

	# Enables scanning of files encoded using the
	# BASE64 scheme in situations where this is not
	# Flagged by, for example, a MIME header line.
	savists: Base64 0

	# Enables scanning of Unix 'mbox' format mail
	# stores.
	savists: Mbox 0

	# Certain file formats (e.g. .bmp bitmap files)
	# cannot contain viruses. These options enable
	# files of the corresponding types to be
	# positively identified and scanning of them to
	# be stopped. This results in more efficient
	# scanning of these file types.
	savists: CleanBmp 1
	savists: CleanGif 1
	savists: CleanJpeg 1
	savists: CleanPng 1
	savists: CleanTiff 1

	#savists: Xml 1
    }
}

