// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HOC Counters withCountersPage Оборачивает компонент в CountersPage 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "/turbo?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
          "pathname": "/turbo",
          "search": "?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "/turbo?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
              "pathname": "/turbo",
              "search": "?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "/turbo?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
            "pathname": "/turbo",
            "search": "?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Component
        bar={4}
        foo="test"
        onEntered={[Function]}
      >
        <CountersPage
          declaration={
            Object {
              "metrika": Object {
                "foo": "bar",
              },
            }
          }
          metrikaHit={[Function]}
          metrikaReachGoal={[Function]}
          originalProps={
            Object {
              "bar": 4,
              "foo": "test",
              "onEntered": [Function],
            }
          }
          render={[Function]}
        >
          <Component
            bar={4}
            foo="test"
            onEntered={[Function]}
          />
        </CountersPage>
      </Component>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`HOC Counters withCountersPage Создает HOC для компонента 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "/turbo?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
          "pathname": "/turbo",
          "search": "?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
        },
      ]
    }
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "/turbo?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
              "pathname": "/turbo",
              "search": "?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "/turbo?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
            "pathname": "/turbo",
            "search": "?text=ymturbo.t-dir.com%2Fyandexturbocatalog%2F",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <Component
        bar={4}
        foo="test"
        onEntered={[Function]}
      >
        <CountersPage
          declaration={
            Object {
              "metrika": Object {
                "foo": "bar",
              },
            }
          }
          metrikaHit={[Function]}
          metrikaReachGoal={[Function]}
          originalProps={
            Object {
              "bar": 4,
              "foo": "test",
              "onEntered": [Function],
            }
          }
          render={[Function]}
        >
          <Component
            bar={4}
            foo="test"
            onEntered={[Function]}
          />
        </CountersPage>
      </Component>
    </Router>
  </MemoryRouter>
</Provider>
`;
