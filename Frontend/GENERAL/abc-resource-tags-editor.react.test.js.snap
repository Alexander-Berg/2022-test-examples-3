// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AbcResourceTagsEditor Should render resource tags editor 1`] = `
<abc-resource-tags-editor
  onItemAdd={[MockFunction]}
  onItemDelete={[MockFunction]}
  onResourceTagsEditCancel={[MockFunction]}
  onResourceTagsEditSubmit={[MockFunction]}
  onTextChange={[MockFunction]}
  resourceServiceTags={
    Array [
      Object {
        "name": Object {
          "ru": "tag_name",
        },
        "slug": "tag_slug",
      },
    ]
  }
  resourceTags={
    Array [
      Object {
        "name": Object {
          "ru": "tag_name2",
        },
        "slug": "tag_slug2",
      },
    ]
  }
  text="text"
>
  <form
    className="abc-resource-tags-editor"
    data-lego="react"
    style={Object {}}
  >
    <abc-resource-tags-input
      key="input"
      mix={
        Object {
          "block": "abc-resource-tags-editor",
          "elem": "resource-tags-input",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      onTextChange={[MockFunction]}
      tags={
        Array [
          Object {
            "name": Object {
              "ru": "tag_name",
            },
            "slug": "tag_slug",
          },
        ]
      }
      text="text"
    >
      <div
        className="ta-component abc-resource-tags-input abc-resource-tags-editor__resource-tags-input"
        data-lego="react"
        style={Object {}}
      >
        <abc-resource-tags-input__input
          key="input"
        >
          <div
            className="ta-component abc-resource-tags-input__input"
            data-lego="react"
            style={Object {}}
          >
            <textinput
              innerRef={[Function]}
              onChange={[MockFunction]}
              placeholder="abc-resource-tags-input:hint-input"
              size="s"
              text="text"
              theme="normal"
              type="text"
              view="classic"
            >
              <span
                className="control textinput textinput_theme_normal textinput_view_classic textinput_size_s"
                data-lego="react"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                style={Object {}}
              >
                <textinput__control
                  innerRef={[Function]}
                  key="control"
                  onChange={[Function]}
                  placeholder="abc-resource-tags-input:hint-input"
                  type="text"
                  value="text"
                >
                  <input
                    className="textinput__control"
                    data-lego="react"
                    onChange={[Function]}
                    placeholder="abc-resource-tags-input:hint-input"
                    style={Object {}}
                    type="text"
                    value="text"
                  />
                </textinput__control>
                <textinput__box
                  key="box"
                >
                  <span
                    className="textinput__box"
                    data-lego="react"
                    style={Object {}}
                  />
                </textinput__box>
              </span>
            </textinput>
          </div>
        </abc-resource-tags-input__input>
        <abc-resource-tags-input__categories
          key="categories"
        >
          <div
            className="ta-component abc-resource-tags-input__categories"
            data-lego="react"
            style={Object {}}
          >
            <abc-resource-tags-input__category
              key="empty_category"
              name=""
              onClick={[MockFunction]}
              tags={
                Array [
                  Object {
                    "name": Object {
                      "ru": "tag_name",
                    },
                    "slug": "tag_slug",
                  },
                ]
              }
            >
              <div
                className="ta-component abc-resource-tags-input__category"
                data-lego="react"
                style={Object {}}
              >
                <abc-resource-tags-input__category-name
                  key="name"
                >
                  <div
                    className="ta-component abc-resource-tags-input__category-name"
                    data-lego="react"
                    style={Object {}}
                  />
                </abc-resource-tags-input__category-name>
                <abc-resource-tags
                  key="tags"
                  maxCount={Infinity}
                  onClick={[MockFunction]}
                  role="add"
                  tags={
                    Array [
                      Object {
                        "name": Object {
                          "ru": "tag_name",
                        },
                        "slug": "tag_slug",
                      },
                    ]
                  }
                >
                  <div
                    className="ta-component abc-resource-tags abc-resource-tags_role_add"
                    data-lego="react"
                    style={Object {}}
                  >
                    <abc-resource-tags__tag
                      key="tag_slug"
                    >
                      <div
                        className="ta-component abc-resource-tags__tag"
                        data-lego="react"
                        style={Object {}}
                      >
                        <abc-resource-tag
                          onClick={[MockFunction]}
                          role="add"
                          tag={
                            Object {
                              "name": Object {
                                "ru": "tag_name",
                              },
                              "slug": "tag_slug",
                            }
                          }
                        >
                          <div
                            className="ta-component abc-resource-tag abc-resource-tag_role_add"
                            data-lego="react"
                            style={Object {}}
                          >
                            <button2
                              key="button"
                              onClick={[Function]}
                              size="xs"
                              tabIndex={0}
                              theme="clear"
                              view="classic"
                            >
                              <button
                                aria-disabled="false"
                                aria-pressed="false"
                                autoComplete="off"
                                className="control button2 button2_view_classic button2_size_xs button2_theme_clear"
                                data-lego="react"
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyPress={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseEnter={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                style={Object {}}
                                tabIndex={0}
                                type="button"
                              >
                                <button2__icon
                                  key="icon-right"
                                  side="right"
                                  size="xs"
                                >
                                  <icon
                                    glyph="type-cross"
                                    key="icon"
                                    mix={
                                      Array [
                                        Object {
                                          "block": "abc-resource-tag",
                                          "elem": "add",
                                          "mods": Object {},
                                        },
                                        Object {
                                          "block": "button2",
                                          "elem": "icon",
                                          "mods": Object {
                                            "side": "right",
                                          },
                                        },
                                      ]
                                    }
                                    size="xs"
                                  >
                                    <span
                                      className="icon icon_glyph_type-cross icon_size_xs icon_has-glyph_yes abc-resource-tag__add button2__icon button2__icon_side_right"
                                      data-lego="react"
                                      style={Object {}}
                                    >
                                      <svg
                                        focusable="false"
                                        height="0"
                                        viewBox="0 0 10 10"
                                        width="0"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <polygon
                                          points="10,0.7 9.3,0 5,4.3 0.7,0 0,0.7 4.3,5 0,9.3 0.7,10 5,5.7 9.3,10 10,9.3 5.7,5"
                                        />
                                      </svg>
                                    </span>
                                  </icon>
                                </button2__icon>
                                <button2__text
                                  key="text"
                                >
                                  <span
                                    className="button2__text"
                                    data-lego="react"
                                    style={Object {}}
                                  >
                                    <abc-resource-tag__text
                                      key="text"
                                    >
                                      <div
                                        className="ta-component abc-resource-tag__text"
                                        data-lego="react"
                                        style={Object {}}
                                      >
                                        tag_name
                                      </div>
                                    </abc-resource-tag__text>
                                  </span>
                                </button2__text>
                              </button>
                            </button2>
                          </div>
                        </abc-resource-tag>
                      </div>
                    </abc-resource-tags__tag>
                  </div>
                </abc-resource-tags>
              </div>
            </abc-resource-tags-input__category>
          </div>
        </abc-resource-tags-input__categories>
      </div>
    </abc-resource-tags-input>
    <ta-title
      font="xs"
      key="title"
      level={1}
      mix={
        Object {
          "block": "abc-resource-tags-editor",
          "elem": "title",
          "mods": Object {},
        }
      }
      size="xs"
    >
      <h1
        className="ta-component ta-title ta-title_size_xs ta-title_font_xs abc-resource-tags-editor__title"
        data-lego="react"
        style={Object {}}
      >
        abc-resource-tags-editor:hint-tags
      </h1>
    </ta-title>
    <abc-resource-tags
      key="tags"
      maxCount={Infinity}
      mix={
        Object {
          "block": "abc-resource-tags-editor",
          "elem": "resource-tags",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      role="del"
      tags={
        Array [
          Object {
            "name": Object {
              "ru": "tag_name2",
            },
            "slug": "tag_slug2",
          },
        ]
      }
    >
      <div
        className="ta-component abc-resource-tags abc-resource-tags_role_del abc-resource-tags-editor__resource-tags"
        data-lego="react"
        style={Object {}}
      >
        <abc-resource-tags__tag
          key="tag_slug2"
        >
          <div
            className="ta-component abc-resource-tags__tag"
            data-lego="react"
            style={Object {}}
          >
            <abc-resource-tag
              onClick={[MockFunction]}
              role="del"
              tag={
                Object {
                  "name": Object {
                    "ru": "tag_name2",
                  },
                  "slug": "tag_slug2",
                }
              }
            >
              <div
                className="ta-component abc-resource-tag abc-resource-tag_role_del"
                data-lego="react"
                style={Object {}}
              >
                <abc-resource-tag__text
                  key="text"
                >
                  <div
                    className="ta-component abc-resource-tag__text"
                    data-lego="react"
                    style={Object {}}
                  >
                    tag_name2
                  </div>
                </abc-resource-tag__text>
                <link
                  key="link"
                  onClick={[Function]}
                  pseudo={true}
                  tabIndex="0"
                  theme="ghost"
                >
                  <span
                    className="control link link_theme_ghost link_pseudo_yes"
                    data-lego="react"
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onMouseUp={[Function]}
                    role="button"
                    style={Object {}}
                    tabIndex="0"
                  >
                    <link__inner
                      key="inner"
                    >
                      <span
                        className="link__inner"
                        data-lego="react"
                        style={Object {}}
                      >
                        <link__icon
                          key="only-icon"
                        >
                          <icon
                            glyph="type-cross"
                            key="icon"
                            mix={
                              Array [
                                Object {
                                  "block": "abc-resource-tag",
                                  "elem": "del",
                                  "mods": Object {},
                                },
                                Object {
                                  "block": "link",
                                  "elem": "icon",
                                  "mods": Object {},
                                },
                              ]
                            }
                            size="s"
                          >
                            <span
                              className="icon icon_glyph_type-cross icon_size_s icon_has-glyph_yes abc-resource-tag__del link__icon"
                              data-lego="react"
                              style={Object {}}
                            >
                              <svg
                                focusable="false"
                                height="0"
                                viewBox="0 0 14 14"
                                width="0"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <polygon
                                  points="14,0.7 13.3,0 7,6.3 0.7,0 0,0.7 6.3,7 0,13.3 0.7,14 7,7.7 13.3,14 14,13.3 7.7,7"
                                />
                              </svg>
                            </span>
                          </icon>
                        </link__icon>
                      </span>
                    </link__inner>
                  </span>
                </link>
              </div>
            </abc-resource-tag>
          </div>
        </abc-resource-tags__tag>
      </div>
    </abc-resource-tags>
    <abc-resource-tags-editor__controls
      key="controls"
      mix={
        Object {
          "block": "clearfix",
          "mods": Object {},
        }
      }
      onResourceTagsEditCancel={[MockFunction]}
      onResourceTagsEditSubmit={[MockFunction]}
    >
      <div
        className="ta-component abc-resource-tags-editor__controls clearfix"
        data-lego="react"
        style={Object {}}
      >
        <button2
          key="accept"
          mix={
            Object {
              "block": "abc-resource-tags-editor",
              "elem": "submit",
              "mods": Object {},
            }
          }
          onClick={[MockFunction]}
          size="s"
          tabIndex={0}
          theme="action"
          view="classic"
        >
          <button
            aria-disabled="false"
            aria-pressed="false"
            autoComplete="off"
            className="control button2 button2_view_classic button2_size_s button2_theme_action abc-resource-tags-editor__submit"
            data-lego="react"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyPress={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            style={Object {}}
            tabIndex={0}
            type="button"
          >
            <button2__text
              key="text"
            >
              <span
                className="button2__text"
                data-lego="react"
                style={Object {}}
              >
                abc-resource-tags-editor__controls:button-submit
              </span>
            </button2__text>
          </button>
        </button2>
        <button2
          key="reject"
          mix={
            Object {
              "block": "abc-resource-tags-editor",
              "elem": "cancel",
              "mods": Object {},
            }
          }
          onClick={[MockFunction]}
          size="s"
          tabIndex={0}
          theme="normal"
          view="classic"
        >
          <button
            aria-disabled="false"
            aria-pressed="false"
            autoComplete="off"
            className="control button2 button2_view_classic button2_size_s button2_theme_normal abc-resource-tags-editor__cancel"
            data-lego="react"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyPress={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            style={Object {}}
            tabIndex={0}
            type="button"
          >
            <button2__text
              key="text"
            >
              <span
                className="button2__text"
                data-lego="react"
                style={Object {}}
              >
                abc-resource-tags-editor__controls:button-cancel
              </span>
            </button2__text>
          </button>
        </button2>
      </div>
    </abc-resource-tags-editor__controls>
  </form>
</abc-resource-tags-editor>
`;

exports[`AbcResourceTagsEditor Should render resource tags editor with error 1`] = `
<abc-resource-tags-editor
  error={[Error]}
  onItemAdd={[MockFunction]}
  onItemDelete={[MockFunction]}
  onResourceTagsEditCancel={[MockFunction]}
  onResourceTagsEditSubmit={[MockFunction]}
  onTextChange={[MockFunction]}
  resourceServiceTags={Array []}
  resourceTags={Array []}
  text="text"
>
  <form
    className="abc-resource-tags-editor"
    data-lego="react"
    style={Object {}}
  >
    <abc-resource-tags-input
      key="input"
      mix={
        Object {
          "block": "abc-resource-tags-editor",
          "elem": "resource-tags-input",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      onTextChange={[MockFunction]}
      tags={Array []}
      text="text"
    >
      <div
        className="ta-component abc-resource-tags-input abc-resource-tags-editor__resource-tags-input"
        data-lego="react"
        style={Object {}}
      >
        <abc-resource-tags-input__input
          key="input"
        >
          <div
            className="ta-component abc-resource-tags-input__input"
            data-lego="react"
            style={Object {}}
          >
            <textinput
              innerRef={[Function]}
              onChange={[MockFunction]}
              placeholder="abc-resource-tags-input:hint-input"
              size="s"
              text="text"
              theme="normal"
              type="text"
              view="classic"
            >
              <span
                className="control textinput textinput_theme_normal textinput_view_classic textinput_size_s"
                data-lego="react"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                style={Object {}}
              >
                <textinput__control
                  innerRef={[Function]}
                  key="control"
                  onChange={[Function]}
                  placeholder="abc-resource-tags-input:hint-input"
                  type="text"
                  value="text"
                >
                  <input
                    className="textinput__control"
                    data-lego="react"
                    onChange={[Function]}
                    placeholder="abc-resource-tags-input:hint-input"
                    style={Object {}}
                    type="text"
                    value="text"
                  />
                </textinput__control>
                <textinput__box
                  key="box"
                >
                  <span
                    className="textinput__box"
                    data-lego="react"
                    style={Object {}}
                  />
                </textinput__box>
              </span>
            </textinput>
          </div>
        </abc-resource-tags-input__input>
        <abc-resource-tags-input__categories
          key="categories"
        >
          <div
            className="ta-component abc-resource-tags-input__categories"
            data-lego="react"
            style={Object {}}
          />
        </abc-resource-tags-input__categories>
      </div>
    </abc-resource-tags-input>
    <ta-title
      font="xs"
      key="title"
      level={1}
      mix={
        Object {
          "block": "abc-resource-tags-editor",
          "elem": "title",
          "mods": Object {},
        }
      }
      size="xs"
    >
      <h1
        className="ta-component ta-title ta-title_size_xs ta-title_font_xs abc-resource-tags-editor__title"
        data-lego="react"
        style={Object {}}
      >
        abc-resource-tags-editor:hint-tags
      </h1>
    </ta-title>
    <abc-resource-tags
      key="tags"
      maxCount={Infinity}
      mix={
        Object {
          "block": "abc-resource-tags-editor",
          "elem": "resource-tags",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      role="del"
      tags={Array []}
    >
      <div
        className="ta-component abc-resource-tags abc-resource-tags_role_del abc-resource-tags-editor__resource-tags"
        data-lego="react"
        style={Object {}}
      >
        <abc-resource-tags__empty>
          <div
            className="ta-component abc-resource-tags__empty"
            data-lego="react"
            style={Object {}}
          >
            abc-resource-tags__empty:text-empty
          </div>
        </abc-resource-tags__empty>
      </div>
    </abc-resource-tags>
    <Message
      key="error"
      type="error"
    >
      <div
        className="Message Message_type_error Message_view_default"
      >
        <span
          className="Message-Body"
        >
          <Error
            data={
              Object {
                "message": Object {
                  "en": "Текст en message",
                  "ru": "Текст ru message",
                },
              }
            }
          >
            <div
              className="Error"
            >
              <TitlePlace
                className="Error-TitlePlace"
                data={
                  Object {
                    "message": Object {
                      "en": "Текст en message",
                      "ru": "Текст ru message",
                    },
                  }
                }
                key="title-place"
              />
              <MessagePlace
                className="Error-MessagePlace"
                data={
                  Object {
                    "message": Object {
                      "en": "Текст en message",
                      "ru": "Текст ru message",
                    },
                  }
                }
                key="message-place"
                type="abc"
              >
                <div
                  className="Error-MessagePlace"
                >
                  Текст ru message
                </div>
              </MessagePlace>
            </div>
          </Error>
        </span>
      </div>
    </Message>
    <abc-resource-tags-editor__controls
      key="controls"
      mix={
        Object {
          "block": "clearfix",
          "mods": Object {},
        }
      }
      onResourceTagsEditCancel={[MockFunction]}
      onResourceTagsEditSubmit={[MockFunction]}
    >
      <div
        className="ta-component abc-resource-tags-editor__controls clearfix"
        data-lego="react"
        style={Object {}}
      >
        <button2
          key="accept"
          mix={
            Object {
              "block": "abc-resource-tags-editor",
              "elem": "submit",
              "mods": Object {},
            }
          }
          onClick={[MockFunction]}
          size="s"
          tabIndex={0}
          theme="action"
          view="classic"
        >
          <button
            aria-disabled="false"
            aria-pressed="false"
            autoComplete="off"
            className="control button2 button2_view_classic button2_size_s button2_theme_action abc-resource-tags-editor__submit"
            data-lego="react"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyPress={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            style={Object {}}
            tabIndex={0}
            type="button"
          >
            <button2__text
              key="text"
            >
              <span
                className="button2__text"
                data-lego="react"
                style={Object {}}
              >
                abc-resource-tags-editor__controls:button-submit
              </span>
            </button2__text>
          </button>
        </button2>
        <button2
          key="reject"
          mix={
            Object {
              "block": "abc-resource-tags-editor",
              "elem": "cancel",
              "mods": Object {},
            }
          }
          onClick={[MockFunction]}
          size="s"
          tabIndex={0}
          theme="normal"
          view="classic"
        >
          <button
            aria-disabled="false"
            aria-pressed="false"
            autoComplete="off"
            className="control button2 button2_view_classic button2_size_s button2_theme_normal abc-resource-tags-editor__cancel"
            data-lego="react"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyPress={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            style={Object {}}
            tabIndex={0}
            type="button"
          >
            <button2__text
              key="text"
            >
              <span
                className="button2__text"
                data-lego="react"
                style={Object {}}
              >
                abc-resource-tags-editor__controls:button-cancel
              </span>
            </button2__text>
          </button>
        </button2>
      </div>
    </abc-resource-tags-editor__controls>
  </form>
</abc-resource-tags-editor>
`;

exports[`AbcResourceTagsEditor Should render resource tags editor with loading 1`] = `
<abc-resource-tags-editor
  loading={true}
  onItemAdd={[MockFunction]}
  onItemDelete={[MockFunction]}
  onResourceTagsEditCancel={[MockFunction]}
  onResourceTagsEditSubmit={[MockFunction]}
  onTextChange={[MockFunction]}
  resourceServiceTags={Array []}
  resourceTags={Array []}
  text="text"
>
  <form
    className="abc-resource-tags-editor"
    data-lego="react"
    style={Object {}}
  >
    <spin2
      key="spinner"
      mix={
        Object {
          "block": "abc-resource-tags-editor",
          "elem": "spin",
          "mods": Object {},
        }
      }
      position="center"
      progress={true}
      size="m"
      tone="default"
      view="default"
    >
      <div
        className="spin2 spin2_size_m spin2_view_default spin2_tone_default spin2_position_center spin2_progress_yes abc-resource-tags-editor__spin"
        data-lego="react"
        style={Object {}}
      />
    </spin2>
    <abc-resource-tags-input
      key="input"
      mix={
        Object {
          "block": "abc-resource-tags-editor",
          "elem": "resource-tags-input",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      onTextChange={[MockFunction]}
      tags={Array []}
      text="text"
    >
      <div
        className="ta-component abc-resource-tags-input abc-resource-tags-editor__resource-tags-input"
        data-lego="react"
        style={Object {}}
      >
        <abc-resource-tags-input__input
          key="input"
        >
          <div
            className="ta-component abc-resource-tags-input__input"
            data-lego="react"
            style={Object {}}
          >
            <textinput
              innerRef={[Function]}
              onChange={[MockFunction]}
              placeholder="abc-resource-tags-input:hint-input"
              size="s"
              text="text"
              theme="normal"
              type="text"
              view="classic"
            >
              <span
                className="control textinput textinput_theme_normal textinput_view_classic textinput_size_s"
                data-lego="react"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                style={Object {}}
              >
                <textinput__control
                  innerRef={[Function]}
                  key="control"
                  onChange={[Function]}
                  placeholder="abc-resource-tags-input:hint-input"
                  type="text"
                  value="text"
                >
                  <input
                    className="textinput__control"
                    data-lego="react"
                    onChange={[Function]}
                    placeholder="abc-resource-tags-input:hint-input"
                    style={Object {}}
                    type="text"
                    value="text"
                  />
                </textinput__control>
                <textinput__box
                  key="box"
                >
                  <span
                    className="textinput__box"
                    data-lego="react"
                    style={Object {}}
                  />
                </textinput__box>
              </span>
            </textinput>
          </div>
        </abc-resource-tags-input__input>
        <abc-resource-tags-input__categories
          key="categories"
        >
          <div
            className="ta-component abc-resource-tags-input__categories"
            data-lego="react"
            style={Object {}}
          />
        </abc-resource-tags-input__categories>
      </div>
    </abc-resource-tags-input>
    <ta-title
      font="xs"
      key="title"
      level={1}
      mix={
        Object {
          "block": "abc-resource-tags-editor",
          "elem": "title",
          "mods": Object {},
        }
      }
      size="xs"
    >
      <h1
        className="ta-component ta-title ta-title_size_xs ta-title_font_xs abc-resource-tags-editor__title"
        data-lego="react"
        style={Object {}}
      >
        abc-resource-tags-editor:hint-tags
      </h1>
    </ta-title>
    <abc-resource-tags
      key="tags"
      maxCount={Infinity}
      mix={
        Object {
          "block": "abc-resource-tags-editor",
          "elem": "resource-tags",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      role="del"
      tags={Array []}
    >
      <div
        className="ta-component abc-resource-tags abc-resource-tags_role_del abc-resource-tags-editor__resource-tags"
        data-lego="react"
        style={Object {}}
      >
        <abc-resource-tags__empty>
          <div
            className="ta-component abc-resource-tags__empty"
            data-lego="react"
            style={Object {}}
          >
            abc-resource-tags__empty:text-empty
          </div>
        </abc-resource-tags__empty>
      </div>
    </abc-resource-tags>
    <abc-resource-tags-editor__controls
      key="controls"
      mix={
        Object {
          "block": "clearfix",
          "mods": Object {},
        }
      }
      onResourceTagsEditCancel={[MockFunction]}
      onResourceTagsEditSubmit={[MockFunction]}
    >
      <div
        className="ta-component abc-resource-tags-editor__controls clearfix"
        data-lego="react"
        style={Object {}}
      >
        <button2
          key="accept"
          mix={
            Object {
              "block": "abc-resource-tags-editor",
              "elem": "submit",
              "mods": Object {},
            }
          }
          onClick={[MockFunction]}
          size="s"
          tabIndex={0}
          theme="action"
          view="classic"
        >
          <button
            aria-disabled="false"
            aria-pressed="false"
            autoComplete="off"
            className="control button2 button2_view_classic button2_size_s button2_theme_action abc-resource-tags-editor__submit"
            data-lego="react"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyPress={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            style={Object {}}
            tabIndex={0}
            type="button"
          >
            <button2__text
              key="text"
            >
              <span
                className="button2__text"
                data-lego="react"
                style={Object {}}
              >
                abc-resource-tags-editor__controls:button-submit
              </span>
            </button2__text>
          </button>
        </button2>
        <button2
          key="reject"
          mix={
            Object {
              "block": "abc-resource-tags-editor",
              "elem": "cancel",
              "mods": Object {},
            }
          }
          onClick={[MockFunction]}
          size="s"
          tabIndex={0}
          theme="normal"
          view="classic"
        >
          <button
            aria-disabled="false"
            aria-pressed="false"
            autoComplete="off"
            className="control button2 button2_view_classic button2_size_s button2_theme_normal abc-resource-tags-editor__cancel"
            data-lego="react"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyPress={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            style={Object {}}
            tabIndex={0}
            type="button"
          >
            <button2__text
              key="text"
            >
              <span
                className="button2__text"
                data-lego="react"
                style={Object {}}
              >
                abc-resource-tags-editor__controls:button-cancel
              </span>
            </button2__text>
          </button>
        </button2>
      </div>
    </abc-resource-tags-editor__controls>
  </form>
</abc-resource-tags-editor>
`;
