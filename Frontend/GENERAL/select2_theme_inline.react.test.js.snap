// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Inline Select Block tests Should render inline select with some elements 1`] = `
<span
  className="select2 select2_theme_inline select2_size_s select2_view_classic select2_type_radio select2_text_vary"
  data-lego="react"
  style={Object {}}
>
  <select2__button
    buttonProps={
      Object {
        "checked": false,
        "disabled": undefined,
        "onBlur": [Function],
        "onClick": [Function],
        "onKeyDown": [Function],
        "onKeyPress": [Function],
        "onKeyUp": [Function],
        "size": "s",
        "theme": "inline",
      }
    }
    items={
      Array [
        <menu__item
          text="first"
        >
          first
        </menu__item>,
        <menu__item
          text="second"
        >
          second
        </menu__item>,
        <menu__item
          text="third"
        >
          third
        </menu__item>,
      ]
    }
    key="button"
    multiselectable={false}
    opened={false}
    placeholder="—"
    setAnchor={[Function]}
    val={Array []}
    view="classic"
  />
  <select2__popup
    getAnchorWidth={[Function]}
    items={
      Array [
        <menu__item
          text="first"
        >
          first
        </menu__item>,
        <menu__item
          text="second"
        >
          second
        </menu__item>,
        <menu__item
          text="third"
        >
          third
        </menu__item>,
      ]
    }
    key="popup"
    maxHeight={Infinity}
    menuProps={
      Object {
        "disabled": undefined,
        "onClick": [Function],
        "onMouseDown": [Function],
        "onMouseUp": [Function],
        "size": "s",
        "theme": "normal",
        "tone": undefined,
        "type": "radio",
        "val": Array [],
        "view": "classic",
      }
    }
    popupProps={
      Object {
        "onOutsideClick": [Function],
        "style": Object {},
        "theme": "normal",
        "tone": undefined,
        "view": "classic",
        "visible": false,
      }
    }
    setAnchor={[Function]}
  />
</span>
`;

exports[`Inline Select Block tests Should render inline select without elements 1`] = `
<span
  className="select2 select2_theme_inline select2_size_s select2_view_classic select2_type_radio select2_text_vary"
  data-lego="react"
  style={Object {}}
>
  <select2__button
    buttonProps={
      Object {
        "checked": false,
        "disabled": undefined,
        "onBlur": [Function],
        "onClick": [Function],
        "onKeyDown": [Function],
        "onKeyPress": [Function],
        "onKeyUp": [Function],
        "size": "s",
        "theme": "inline",
      }
    }
    items={Array []}
    key="button"
    multiselectable={false}
    opened={false}
    placeholder="—"
    setAnchor={[Function]}
    val={Array []}
    view="classic"
  />
  <select2__popup
    getAnchorWidth={[Function]}
    items={Array []}
    key="popup"
    maxHeight={Infinity}
    menuProps={
      Object {
        "disabled": undefined,
        "onClick": [Function],
        "onMouseDown": [Function],
        "onMouseUp": [Function],
        "size": "s",
        "theme": "normal",
        "tone": undefined,
        "type": "radio",
        "val": Array [],
        "view": "classic",
      }
    }
    popupProps={
      Object {
        "onOutsideClick": [Function],
        "style": Object {},
        "theme": "normal",
        "tone": undefined,
        "view": "classic",
        "visible": false,
      }
    }
    setAnchor={[Function]}
  />
</span>
`;
