// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render calendar empty 1`] = `
<div
  className="DutyCalendar"
  data-problems-count={0}
>
  <div
    className="DutyCalendar-Controls"
  >
    <spin2
      mix={
        Object {
          "block": "DutyCalendar",
          "elem": "spin",
        }
      }
      progress={false}
      size="xs"
      tone="default"
      view="default"
    />
    <div
      className="DutyCalendar-ControlsRight"
    />
  </div>
  <div
    className="DutyCalendar-Grid"
  >
    <CalendarMessage
      header="i18n:no-data-header"
    />
  </div>
  <ShiftEditModal
    onCancel={[Function]}
    onCrossClick={[Function]}
    onSave={[Function]}
    scope="calendar"
    shiftEditId={1}
  />
  <WithBemMod(Modal)[hasCross:true]
    customTheme="compact"
    hasCross={true}
    onCrossClick={[Function]}
    theme="normal"
  >
    <Connect(abc-duty-schedule-edit-container)
      schedules={Array []}
      service={Object {}}
    />
  </WithBemMod(Modal)[hasCross:true]>
</div>
`;

exports[`Should render calendar filled 1`] = `
<div
  className="DutyCalendar"
  data-problems-count={0}
>
  <div
    className="DutyCalendar-Controls"
  >
    <ta-datepicker
      date={2019-02-25T21:00:00.000Z}
      mix={
        Array [
          Object {
            "block": "DutyCalendar",
            "elem": "control",
          },
          Object {
            "block": "DutyCalendar",
            "elem": "date-filter",
          },
        ]
      }
      onChange={[Function]}
      size="s"
      view="classic"
    />
    <select2
      disabled={false}
      items={
        Array [
          Object {
            "text": "i18n:month",
            "val": "P1M",
          },
          Object {
            "text": "i18n:2months",
            "val": "P2M",
          },
          Object {
            "text": "i18n:half-year",
            "val": "P6M",
          },
        ]
      }
      maxHeight={Infinity}
      menu={
        Object {
          "width": "limited",
        }
      }
      mix={
        Array [
          Object {
            "block": "DutyCalendar",
            "elem": "control",
          },
          Object {
            "block": "DutyCalendar",
            "elem": "period-filter",
          },
        ]
      }
      onChange={[Function]}
      placeholder="—"
      size="s"
      theme="normal"
      type="radio"
      val="P1M"
      view="classic"
    />
    <select2
      disabled={false}
      items={
        Array [
          Object {
            "text": "i18n:all-roles",
            "val": null,
          },
          Object {
            "text": "schedule0 name",
            "val": 40,
          },
          Object {
            "text": "schedule1 name",
            "val": 41,
          },
        ]
      }
      maxHeight={Infinity}
      menu={
        Object {
          "width": "limited",
        }
      }
      mix={
        Array [
          Object {
            "block": "DutyCalendar",
            "elem": "control",
          },
          Object {
            "block": "DutyCalendar",
            "elem": "schedule-filter",
          },
        ]
      }
      onChange={[Function]}
      placeholder="—"
      size="s"
      theme="normal"
      type="radio"
      val={
        Array [
          undefined,
        ]
      }
      view="classic"
    />
    <PersonSuggest
      className="DutyCalendar-DutyPersonSuggest"
      dutyPersons={Array []}
      id="duty-person"
      onChosenChange={[Function]}
      pin="brick-brick"
      size="s"
      theme="normal"
    />
    <button
      className="DutyCalendar-DutyPersonSuggestMe"
      disabled={false}
      onClick={[Function]}
    >
      i18n:me
    </button>
    <WithBemMod(Button2)[type:link]
      className="DutyCalendar-ChangeSchedule"
      onClick={[Function]}
      size="s"
      theme="normal"
    >
      i18n:change-duty-schedule
      <ticker
        count={0}
        maxCount={99}
        mix={
          Object {
            "block": "DutyCalendar",
            "elem": "problems-count",
          }
        }
      />
    </WithBemMod(Button2)[type:link]>
    <spin2
      mix={
        Object {
          "block": "DutyCalendar",
          "elem": "spin",
        }
      }
      progress={false}
      size="xs"
      tone="default"
      view="default"
    />
    <div
      className="DutyCalendar-ControlsRight"
    >
      <WithBemMod(Button2)[type:link]
        size="s"
        theme="normal"
        type="link"
        url="/services/abc/duty/settings/new"
      >
        <SimpleComposeWrapper [type:plus]
          className="DutyCalendar-CreateDutyIcon"
          size="s"
          type="plus"
        />
        i18n:create-duty-settings
      </WithBemMod(Button2)[type:link]>
    </div>
  </div>
  <div
    className="DutyCalendar-Grid"
  >
    <CalendarGridContainer
      canEditDutySettings={true}
      data={
        Object {
          "absences": Object {},
          "daysList": Array [
            3000-02-25T21:00:00.000Z,
            3000-02-26T21:00:00.000Z,
            3000-02-27T21:00:00.000Z,
            3000-02-28T21:00:00.000Z,
            3000-03-01T21:00:00.000Z,
            3000-03-02T21:00:00.000Z,
            3000-03-03T21:00:00.000Z,
          ],
          "holidaysList": Array [
            Object {
              "end": "3000-03-04T00:00:00.000+03:00",
              "intervalType": "weekend",
              "start": "3000-03-02T00:00:00.000+03:00",
            },
          ],
          "personsCount": 3,
          "schedule": Object {
            "daysStatus": Object {},
            "id": 40,
            "name": "schedule0 name",
            "persons": Object {
              "person0Id": Object {
                "name": Object {
                  "en": "name0",
                  "ru": "имя0",
                },
                "shifts": Array [
                  Object {
                    "endDate": 2019-02-27T21:00:00.000Z,
                    "holidays": Array [],
                    "id": 0,
                    "length": 2,
                    "replaces": Array [],
                    "scheduleId": 1,
                    "start": 1,
                    "startDate": 2019-02-26T21:00:00.000Z,
                    "type": "approved",
                  },
                  Object {
                    "endDate": 2019-03-01T21:00:00.000Z,
                    "holidays": Array [],
                    "id": 1,
                    "length": 1,
                    "replaces": Array [],
                    "scheduleId": 1,
                    "start": 3,
                    "startDate": 2019-02-28T21:00:00.000Z,
                    "type": "pending",
                  },
                ],
                "vteams": Array [],
              },
              "person1Id": Object {
                "name": Object {
                  "en": "name1",
                  "ru": "имя1",
                },
                "shifts": Array [
                  Object {
                    "endDate": 2019-02-28T21:00:00.000Z,
                    "holidays": Array [],
                    "id": 2,
                    "length": 1,
                    "replaces": Array [],
                    "scheduleId": 1,
                    "start": 2,
                    "startDate": 2019-02-27T21:00:00.000Z,
                    "type": "pending",
                  },
                ],
                "vteams": Array [],
              },
            },
          },
        }
      }
      key="40"
      onOpenShiftEditClick={[Function]}
      service={
        Object {
          "id": 1,
          "slug": "abc",
        }
      }
      start={3000-02-25T21:00:00.000Z}
      user={Object {}}
    />
    <CalendarGridContainer
      canEditDutySettings={true}
      data={
        Object {
          "absences": Object {},
          "daysList": Array [
            3000-02-25T21:00:00.000Z,
            3000-02-26T21:00:00.000Z,
            3000-02-27T21:00:00.000Z,
            3000-02-28T21:00:00.000Z,
            3000-03-01T21:00:00.000Z,
            3000-03-02T21:00:00.000Z,
            3000-03-03T21:00:00.000Z,
          ],
          "holidaysList": Array [
            Object {
              "end": "3000-03-04T00:00:00.000+03:00",
              "intervalType": "weekend",
              "start": "3000-03-02T00:00:00.000+03:00",
            },
          ],
          "personsCount": 3,
          "schedule": Object {
            "daysStatus": Object {},
            "id": 41,
            "name": "schedule1 name",
            "persons": Object {
              "person2Id": Object {
                "name": Object {
                  "en": "name2",
                  "ru": "имя2",
                },
                "shifts": Array [
                  Object {
                    "endDate": 2019-02-28T21:00:00.000Z,
                    "holidays": Array [],
                    "id": 3,
                    "length": 2,
                    "replaces": Array [],
                    "scheduleId": 1,
                    "start": 1,
                    "startDate": 2019-02-26T21:00:00.000Z,
                    "type": "approved",
                  },
                ],
                "vteams": Array [],
              },
            },
          },
        }
      }
      key="41"
      onOpenShiftEditClick={[Function]}
      service={
        Object {
          "id": 1,
          "slug": "abc",
        }
      }
      start={3000-02-25T21:00:00.000Z}
      user={Object {}}
    />
  </div>
  <ShiftEditModal
    onCancel={[Function]}
    onCrossClick={[Function]}
    onSave={[Function]}
    scope="calendar"
    shiftEditId={1}
  />
  <WithBemMod(Modal)[hasCross:true]
    customTheme="compact"
    hasCross={true}
    onCrossClick={[Function]}
    theme="normal"
  >
    <Connect(abc-duty-schedule-edit-container)
      schedules={
        Array [
          Object {
            "id": 40,
            "name": "schedule0 name",
          },
          Object {
            "id": 41,
            "name": "schedule1 name",
          },
        ]
      }
      service={
        Object {
          "id": 1,
          "slug": "abc",
        }
      }
    />
  </WithBemMod(Modal)[hasCross:true]>
</div>
`;

exports[`Should render calendar with error 1`] = `
<div
  className="DutyCalendar"
  data-problems-count={0}
>
  <div
    className="DutyCalendar-Controls"
  >
    <spin2
      mix={
        Object {
          "block": "DutyCalendar",
          "elem": "spin",
        }
      }
      progress={false}
      size="xs"
      tone="default"
      view="default"
    />
    <div
      className="DutyCalendar-ControlsRight"
    />
  </div>
  <div
    className="DutyCalendar-Grid"
  >
    <abc-error-popup
      className="DutyCalendar-Error"
      data={
        Object {
          "message": Object {
            "en": "Текст en message",
            "ru": "Текст ru message",
          },
        }
      }
      onClose={[MockFunction]}
    />
  </div>
  <ShiftEditModal
    onCancel={[Function]}
    onCrossClick={[Function]}
    onSave={[Function]}
    scope="calendar"
    shiftEditId={1}
  />
  <WithBemMod(Modal)[hasCross:true]
    customTheme="compact"
    hasCross={true}
    onCrossClick={[Function]}
    theme="normal"
  >
    <Connect(abc-duty-schedule-edit-container)
      schedules={Array []}
      service={Object {}}
    />
  </WithBemMod(Modal)[hasCross:true]>
</div>
`;
