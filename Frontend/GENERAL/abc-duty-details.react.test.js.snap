// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render abc-duty-details in pending state 1`] = `
<div
  className="abc-duty-details"
  data-lego="react"
  style={Object {}}
>
  <abc-duty-details__row>
    <abc-duty-details__title>
      abc-duty-details:dutyman-title,
    </abc-duty-details__title>
     
    <Memo()
      end={2019-02-14T21:00:00.000Z}
      endMidnightAsPrevDay={true}
      interval="dash"
      start={2019-01-31T21:00:00.000Z}
      zone="Europe/Moscow"
    />
  </abc-duty-details__row>
  <abc-duty-details__row>
    <Connect(ShiftChange)
      className="abc-duty-details__shift-change"
      scheduleId={1000}
    />
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-holidays-message
    </abc-text>
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-weekends-message
    </abc-text>
  </abc-duty-details__row>
  <abc-duty-details__row>
    <WithBemMod(Employee)[withStaffCard:true]
      appContext={
        Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        }
      }
      caption={null}
      login="john.doe"
      name="John Doe"
      size="m"
      withStaffCard={true}
    />
  </abc-duty-details__row>
  <abc-duty-details__footer>
    <WithBemMod(DutyStatus)[mode:approved]
      key="dutyStatus"
      mode="pending"
    />
  </abc-duty-details__footer>
  <abc-text
    muted="yes"
  >
    abc-duty-details:unapproved-shift-tip
  </abc-text>
</div>
`;

exports[`Should render abc-duty-details simple 1`] = `
<div
  className="abc-duty-details"
  data-lego="react"
  style={Object {}}
>
  <abc-duty-details__row>
    <abc-duty-details__title>
      abc-duty-details:dutyman-title,
    </abc-duty-details__title>
     
    <Memo()
      end={2019-02-14T21:00:00.000Z}
      endMidnightAsPrevDay={true}
      interval="dash"
      start={2019-01-31T21:00:00.000Z}
      zone="Europe/Moscow"
    />
  </abc-duty-details__row>
  <abc-duty-details__row>
    <Connect(ShiftChange)
      className="abc-duty-details__shift-change"
      scheduleId={1000}
    />
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-holidays-message
    </abc-text>
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-weekends-message
    </abc-text>
  </abc-duty-details__row>
  <abc-duty-details__row>
    <WithBemMod(Employee)[withStaffCard:true]
      appContext={
        Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        }
      }
      caption={null}
      login="john.doe"
      name="John Doe"
      size="m"
      withStaffCard={true}
    />
  </abc-duty-details__row>
  <abc-duty-details__title>
    abc-duty-details:replacements-title
  </abc-duty-details__title>
  <Connect(abc-duty-details__replacement-container)
    canEditDutySettings={false}
    key="replacement_1"
    replaceFor={0}
    replacement={
      Object {
        "foo": "bar",
        "id": 1,
      }
    }
    scope="calendar"
  />
  <abc-duty-details__footer>
    <WithBemMod(DutyStatus)[mode:approved]
      key="dutyStatus"
      mode="approved"
    />
  </abc-duty-details__footer>
  <abc-text
    muted="yes"
  >
    abc-duty-details:approved-shift-tip
  </abc-text>
</div>
`;

exports[`Should render abc-duty-details with ability to assign empty to self 1`] = `
<div
  className="abc-duty-details"
  data-lego="react"
  style={Object {}}
>
  <abc-duty-details__row>
    <abc-duty-details__title>
      abc-duty-details:dutyman-title,
    </abc-duty-details__title>
     
    <Memo()
      end={2019-02-14T21:00:00.000Z}
      endMidnightAsPrevDay={true}
      interval="dash"
      start={2019-01-31T21:00:00.000Z}
      zone="Europe/Moscow"
    />
  </abc-duty-details__row>
  <abc-duty-details__row>
    <Connect(ShiftChange)
      className="abc-duty-details__shift-change"
      scheduleId={1000}
    />
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-holidays-message
    </abc-text>
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-weekends-message
    </abc-text>
  </abc-duty-details__row>
  <abc-duty-details__row>
    <abc-person-on-duty-undefined
      addon={
        <Connect(AssignToMeButton)
          currentUser="dave.due"
          dutyShiftId={0}
          scope="calendar"
        />
      }
    />
  </abc-duty-details__row>
  <abc-duty-details__footer>
    <WithBemMod(DutyStatus)[mode:approved]
      key="dutyStatus"
      mode="pending"
    />
  </abc-duty-details__footer>
  <abc-text
    muted="yes"
  >
    abc-duty-details:unapproved-shift-tip
  </abc-text>
</div>
`;

exports[`Should render abc-duty-details with ability to assign to self 1`] = `
<div
  className="abc-duty-details"
  data-lego="react"
  style={Object {}}
>
  <abc-duty-details__row>
    <abc-duty-details__title>
      abc-duty-details:dutyman-title,
    </abc-duty-details__title>
     
    <Memo()
      end={2019-02-14T21:00:00.000Z}
      endMidnightAsPrevDay={true}
      interval="dash"
      start={2019-01-31T21:00:00.000Z}
      zone="Europe/Moscow"
    />
  </abc-duty-details__row>
  <abc-duty-details__row>
    <Connect(ShiftChange)
      className="abc-duty-details__shift-change"
      scheduleId={1000}
    />
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-holidays-message
    </abc-text>
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-weekends-message
    </abc-text>
  </abc-duty-details__row>
  <abc-duty-details__row>
    <WithBemMod(Employee)[withStaffCard:true]
      appContext={
        Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        }
      }
      caption={
        <Connect(AssignToMeButton)
          currentUser="dave.due"
          dutyShiftId={0}
          scope="calendar"
        />
      }
      login="john.doe"
      name="John Doe"
      size="m"
      withStaffCard={true}
    />
  </abc-duty-details__row>
  <abc-duty-details__footer>
    <WithBemMod(DutyStatus)[mode:approved]
      key="dutyStatus"
      mode="pending"
    />
  </abc-duty-details__footer>
  <abc-text
    muted="yes"
  >
    abc-duty-details:unapproved-shift-tip
  </abc-text>
</div>
`;

exports[`Should render abc-duty-details with edit permissions 1`] = `
<div
  className="abc-duty-details"
  data-lego="react"
  style={Object {}}
>
  <abc-duty-details__row>
    <abc-duty-details__title>
      abc-duty-details:dutyman-title,
    </abc-duty-details__title>
     
    <Memo()
      end={2019-02-14T21:00:00.000Z}
      endMidnightAsPrevDay={true}
      interval="dash"
      start={2019-01-31T21:00:00.000Z}
      zone="Europe/Moscow"
    />
  </abc-duty-details__row>
  <abc-duty-details__row>
    <Connect(ShiftChange)
      className="abc-duty-details__shift-change"
      scheduleId={1000}
    />
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-holidays-message
    </abc-text>
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-weekends-message
    </abc-text>
  </abc-duty-details__row>
  <abc-duty-details__row>
    <WithBemMod(Employee)[withStaffCard:true]
      appContext={
        Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        }
      }
      caption={null}
      login="john.doe"
      name="John Doe"
      size="m"
      withStaffCard={true}
    />
  </abc-duty-details__row>
  <abc-duty-details__title>
    abc-duty-details:replacements-title
  </abc-duty-details__title>
  <Connect(abc-duty-details__replacement-container)
    canEditDutySettings={true}
    key="replacement_1"
    replaceFor={0}
    replacement={
      Object {
        "foo": "bar",
        "id": 1,
      }
    }
    scope="calendar"
  />
  <abc-duty-details__footer>
    <Connect(ApproveButtonContainer)
      dutyShiftId={0}
      isApproved={false}
      login="john.doe"
      scope="calendar"
      theme="normal"
    />
    <button2
      icon={
        Object {
          "mods": Object {
            "glyph": "pencil",
          },
        }
      }
      key="shiftEditButton"
      onClick={[MockFunction]}
      size="s"
      tabIndex={0}
      theme="clear"
      view="default"
    />
  </abc-duty-details__footer>
  <abc-text
    muted="yes"
  >
    abc-duty-details:unapproved-shift-tip
  </abc-text>
</div>
`;

exports[`Should render abc-duty-details with message about dutyOnHolidays 1`] = `
<div
  className="abc-duty-details"
  data-lego="react"
  style={Object {}}
>
  <abc-duty-details__row>
    <abc-duty-details__title>
      abc-duty-details:dutyman-title,
    </abc-duty-details__title>
     
    <Memo()
      end={2019-02-14T21:00:00.000Z}
      endMidnightAsPrevDay={true}
      interval="dash"
      start={2019-01-31T21:00:00.000Z}
      zone="Europe/Moscow"
    />
  </abc-duty-details__row>
  <abc-duty-details__row>
    <Connect(ShiftChange)
      className="abc-duty-details__shift-change"
      scheduleId={1000}
    />
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-weekends-message
    </abc-text>
  </abc-duty-details__row>
  <abc-duty-details__row>
    <WithBemMod(Employee)[withStaffCard:true]
      appContext={
        Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        }
      }
      caption={null}
      login="john.doe"
      name="John Doe"
      size="m"
      withStaffCard={true}
    />
  </abc-duty-details__row>
  <abc-duty-details__title>
    abc-duty-details:replacements-title
  </abc-duty-details__title>
  <Connect(abc-duty-details__replacement-container)
    canEditDutySettings={false}
    key="replacement_1"
    replaceFor={0}
    replacement={
      Object {
        "foo": "bar",
        "id": 1,
      }
    }
    scope="calendar"
  />
  <abc-duty-details__footer>
    <WithBemMod(DutyStatus)[mode:approved]
      key="dutyStatus"
      mode="approved"
    />
  </abc-duty-details__footer>
  <abc-text
    muted="yes"
  >
    abc-duty-details:approved-shift-tip
  </abc-text>
</div>
`;

exports[`Should render abc-duty-details with message about dutyOnWeekends 1`] = `
<div
  className="abc-duty-details"
  data-lego="react"
  style={Object {}}
>
  <abc-duty-details__row>
    <abc-duty-details__title>
      abc-duty-details:dutyman-title,
    </abc-duty-details__title>
     
    <Memo()
      end={2019-02-14T21:00:00.000Z}
      endMidnightAsPrevDay={true}
      interval="dash"
      start={2019-01-31T21:00:00.000Z}
      zone="Europe/Moscow"
    />
  </abc-duty-details__row>
  <abc-duty-details__row>
    <Connect(ShiftChange)
      className="abc-duty-details__shift-change"
      scheduleId={1000}
    />
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-holidays-message
    </abc-text>
  </abc-duty-details__row>
  <abc-duty-details__row>
    <WithBemMod(Employee)[withStaffCard:true]
      appContext={
        Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        }
      }
      caption={null}
      login="john.doe"
      name="John Doe"
      size="m"
      withStaffCard={true}
    />
  </abc-duty-details__row>
  <abc-duty-details__title>
    abc-duty-details:replacements-title
  </abc-duty-details__title>
  <Connect(abc-duty-details__replacement-container)
    canEditDutySettings={false}
    key="replacement_1"
    replaceFor={0}
    replacement={
      Object {
        "foo": "bar",
        "id": 1,
      }
    }
    scope="calendar"
  />
  <abc-duty-details__footer>
    <WithBemMod(DutyStatus)[mode:approved]
      key="dutyStatus"
      mode="approved"
    />
  </abc-duty-details__footer>
  <abc-text
    muted="yes"
  >
    abc-duty-details:approved-shift-tip
  </abc-text>
</div>
`;

exports[`Should render abc-duty-details without person 1`] = `
<div
  className="abc-duty-details"
  data-lego="react"
  style={Object {}}
>
  <abc-duty-details__row>
    <abc-duty-details__title>
      abc-duty-details:dutyman-title,
    </abc-duty-details__title>
     
    <Memo()
      end={2019-02-14T21:00:00.000Z}
      endMidnightAsPrevDay={true}
      interval="dash"
      start={2019-01-31T21:00:00.000Z}
      zone="Europe/Moscow"
    />
  </abc-duty-details__row>
  <abc-duty-details__row>
    <Connect(ShiftChange)
      className="abc-duty-details__shift-change"
      scheduleId={1000}
    />
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-holidays-message
    </abc-text>
    <abc-text
      mix={
        Object {
          "block": "abc-duty-details",
          "elem": "info-message",
        }
      }
    >
      i18n:no-duty-on-weekends-message
    </abc-text>
  </abc-duty-details__row>
  <abc-duty-details__row>
    <WithBemMod(Employee)[withStaffCard:true]
      appContext={
        Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
        }
      }
      caption={null}
      login="john.doe"
      name="John Doe"
      size="m"
      withStaffCard={true}
    />
  </abc-duty-details__row>
  <abc-duty-details__footer>
    <Connect(ApproveButtonContainer)
      dutyShiftId={0}
      isApproved={false}
      login="john.doe"
      scope="calendar"
      theme="normal"
    />
    <button2
      icon={
        Object {
          "mods": Object {
            "glyph": "pencil",
          },
        }
      }
      key="shiftEditButton"
      onClick={[MockFunction]}
      size="s"
      tabIndex={0}
      theme="clear"
      view="default"
    />
  </abc-duty-details__footer>
  <abc-text
    muted="yes"
  >
    abc-duty-details:unapproved-shift-tip
  </abc-text>
</div>
`;
