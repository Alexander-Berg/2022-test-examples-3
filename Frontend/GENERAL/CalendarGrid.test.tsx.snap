// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render DutyCalendarGrid usual 1`] = `
<div
  className="DutyCalendarGrid"
  style={
    Object {
      "--days-count": 4,
      "--persons-count": 1,
    }
  }
>
  <Header
    className="DutyCalendarGrid-Header"
    key="calendar-100-header"
    scheduleKey={100}
    scheduleName="scheduleName"
    serviceSlug="someslug"
  />
  <div
    className="DutyCalendarGrid-Calendar"
    key="calendar-100-calendar"
  >
    <div
      className="DutyCalendarGrid-PersonsPanel"
    >
      <Person
        key="person-login1@"
        login="login1@"
        name="Имя1"
        vteams={Array []}
      />
    </div>
    <div
      className="DutyCalendarGrid-Scrollable"
    >
      <Holiday
        key="holiday-1549065600000"
        length={1}
        start={1}
      />
      <Holiday
        key="holiday-1549152000000"
        length={1}
        start={2}
      />
      <div
        className="DutyCalendarGrid-DaysList"
      >
        <DateDay
          date={2019-02-01T00:00:00.000Z}
          key="2019-02-01T00:00:00.000Z"
          scale="day"
          status="warning"
        />
        <DateDay
          date={2019-02-02T00:00:00.000Z}
          key="2019-02-02T00:00:00.000Z"
          scale="day"
          status="warning"
        />
        <DateDay
          date={2019-02-03T00:00:00.000Z}
          key="2019-02-03T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-04T00:00:00.000Z}
          key="2019-02-04T00:00:00.000Z"
          scale="day"
          status="ok"
        />
      </div>
      <div
        className="DutyCalendarGrid-Row"
        key="row-100@login1@"
      >
        <div
          className="DutyCalendarGrid-Layer"
        >
          <Interval
            hovered={false}
            id="interval-1"
            key="interval-1"
            length={2}
            start={0}
            type="pending"
            view="background"
          />
          <Interval
            hovered={false}
            id="interval-2"
            key="interval-2"
            length={2}
            start={3}
            type="approved"
            view="background"
          />
        </div>
        <div
          className="DutyCalendarGrid-Layer"
        >
          <Interval
            absenceType="absence"
            hovered={false}
            id="absence-1"
            key="absence-1"
            length={1}
            start={0}
            text="absence,1548979200000,1549065600000,true,false"
            type="absence"
            view="background"
            workInAbsence={false}
          />
        </div>
        <div
          className="DutyCalendarGrid-Layer"
        >
          <Interval
            hovered={false}
            id="interval-1"
            key="interval-1"
            length={2}
            start={0}
            type="pending"
            view="content"
          >
            <ShiftContainer
              className="DutyCalendarGrid-IntervalContent"
              endDate={2019-02-02T00:00:00.000Z}
              hideDutyDetails={[Function]}
              id={1}
              isApproved={false}
              label="text"
              onHoverChange={[Function]}
              onOpenShiftEditClick={[MockFunction]}
              person={
                Object {
                  "login": "login1@",
                  "name": "Имя1",
                  "vteams": Array [],
                }
              }
              replacements={Array []}
              scheduleId={1}
              showDutyDetails={[Function]}
              startDate={2019-02-01T00:00:00.000Z}
              user={
                Object {
                  "login": "login",
                }
              }
            />
          </Interval>
          <Interval
            hovered={false}
            id="interval-2"
            key="interval-2"
            length={2}
            start={3}
            type="approved"
            view="content"
          >
            <ShiftContainer
              className="DutyCalendarGrid-IntervalContent"
              endDate={2019-02-04T00:00:00.000Z}
              hideDutyDetails={[Function]}
              id={2}
              isApproved={true}
              label="text"
              onHoverChange={[Function]}
              onOpenShiftEditClick={[MockFunction]}
              person={
                Object {
                  "login": "login1@",
                  "name": "Имя1",
                  "vteams": Array [],
                }
              }
              replacements={Array []}
              scheduleId={1}
              showDutyDetails={[Function]}
              startDate={2019-02-03T00:00:00.000Z}
              user={
                Object {
                  "login": "login",
                }
              }
            />
          </Interval>
        </div>
      </div>
    </div>
    <Connect(ShiftDetailsPopup)
      key="shift-details"
      shiftDetails={Object {}}
    />
  </div>
</div>
`;

exports[`Should render DutyCalendarGrid with holidays 1`] = `
<div
  className="DutyCalendarGrid"
  style={
    Object {
      "--days-count": 21,
      "--persons-count": 2,
    }
  }
>
  <Header
    className="DutyCalendarGrid-Header"
    key="calendar-100-header"
    scheduleDescription="scheduleDescription"
    scheduleKey={100}
    scheduleName="scheduleName"
    serviceSlug="someslug"
  />
  <div
    className="DutyCalendarGrid-Calendar"
    key="calendar-100-calendar"
  >
    <div
      className="DutyCalendarGrid-PersonsPanel"
    >
      <Person
        key="person-person1"
        login="person1"
        name="Имя1"
        vteams={Array []}
      />
      <Person
        key="person-person2"
        login="person2"
        name="Имя2"
        vteams={Array []}
      />
    </div>
    <div
      className="DutyCalendarGrid-Scrollable"
    >
      <Holiday
        key="holiday-1549065600000"
        length={1}
        start={1}
      />
      <Holiday
        key="holiday-1549152000000"
        length={1}
        start={2}
      />
      <Holiday
        key="holiday-1549756800000"
        length={4}
        start={9}
      />
      <Holiday
        key="holiday-1550275200000"
        length={1}
        start={15}
      />
      <Holiday
        key="holiday-1550361600000"
        length={1}
        start={16}
      />
      <div
        className="DutyCalendarGrid-DaysList"
      >
        <DateDay
          date={2019-02-01T00:00:00.000Z}
          key="2019-02-01T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-02T00:00:00.000Z}
          key="2019-02-02T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-03T00:00:00.000Z}
          key="2019-02-03T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-04T00:00:00.000Z}
          key="2019-02-04T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-05T00:00:00.000Z}
          key="2019-02-05T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-06T00:00:00.000Z}
          key="2019-02-06T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-07T00:00:00.000Z}
          key="2019-02-07T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-08T00:00:00.000Z}
          key="2019-02-08T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-09T00:00:00.000Z}
          key="2019-02-09T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-10T00:00:00.000Z}
          key="2019-02-10T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-11T00:00:00.000Z}
          key="2019-02-11T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-12T00:00:00.000Z}
          key="2019-02-12T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-13T00:00:00.000Z}
          key="2019-02-13T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-14T00:00:00.000Z}
          key="2019-02-14T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-15T00:00:00.000Z}
          key="2019-02-15T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-16T00:00:00.000Z}
          key="2019-02-16T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-17T00:00:00.000Z}
          key="2019-02-17T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-18T00:00:00.000Z}
          key="2019-02-18T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-19T00:00:00.000Z}
          key="2019-02-19T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-20T00:00:00.000Z}
          key="2019-02-20T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-21T00:00:00.000Z}
          key="2019-02-21T00:00:00.000Z"
          scale="day"
          status="ok"
        />
      </div>
      <div
        className="DutyCalendarGrid-Row"
        key="row-100@person1"
      >
        <div
          className="DutyCalendarGrid-Layer"
        >
          <Interval
            hovered={false}
            id="interval-1"
            key="interval-1"
            length={7}
            start={0}
            type="pending"
            view="background"
          >
            <Interval
              hovered={false}
              id="interval-s-31l1"
              key="interval-s-31l1"
              length={1}
              start={-31}
              type="holiday"
              view="holiday"
            />
            <Interval
              hovered={false}
              id="interval-s-30l1"
              key="interval-s-30l1"
              length={1}
              start={-30}
              type="holiday"
              view="holiday"
            />
          </Interval>
          <Interval
            hovered={false}
            id="interval-3"
            key="interval-3"
            length={7}
            start={14}
            type="approved"
            view="background"
          >
            <Interval
              hovered={false}
              id="interval-s-17l1"
              key="interval-s-17l1"
              length={1}
              start={-31}
              type="holiday"
              view="holiday"
            />
            <Interval
              hovered={false}
              id="interval-s-16l1"
              key="interval-s-16l1"
              length={1}
              start={-30}
              type="holiday"
              view="holiday"
            />
          </Interval>
        </div>
        <div
          className="DutyCalendarGrid-Layer"
        />
        <div
          className="DutyCalendarGrid-Layer"
        >
          <Interval
            hovered={false}
            id="interval-1"
            key="interval-1"
            length={7}
            start={0}
            type="pending"
            view="content"
          >
            <ShiftContainer
              className="DutyCalendarGrid-IntervalContent"
              endDate={2019-02-07T00:00:00.000Z}
              hideDutyDetails={[Function]}
              id={1}
              isApproved={false}
              label="text"
              onHoverChange={[MockFunction]}
              onOpenShiftEditClick={[MockFunction]}
              person={
                Object {
                  "login": "person1",
                  "name": "Имя1",
                  "vteams": Array [],
                }
              }
              replacements={Array []}
              scheduleId={1}
              showDutyDetails={[Function]}
              startDate={2019-02-01T00:00:00.000Z}
              user={
                Object {
                  "login": "login",
                }
              }
            />
          </Interval>
          <Interval
            hovered={false}
            id="interval-3"
            key="interval-3"
            length={7}
            start={14}
            type="approved"
            view="content"
          >
            <ShiftContainer
              className="DutyCalendarGrid-IntervalContent"
              endDate={2019-02-21T00:00:00.000Z}
              hideDutyDetails={[Function]}
              id={3}
              isApproved={false}
              label="text"
              onHoverChange={[MockFunction]}
              onOpenShiftEditClick={[MockFunction]}
              person={
                Object {
                  "login": "person1",
                  "name": "Имя1",
                  "vteams": Array [],
                }
              }
              replacements={Array []}
              scheduleId={1}
              showDutyDetails={[Function]}
              startDate={2019-02-15T00:00:00.000Z}
              user={
                Object {
                  "login": "login",
                }
              }
            />
          </Interval>
        </div>
      </div>
      <div
        className="DutyCalendarGrid-Row"
        key="row-100@person2"
      >
        <div
          className="DutyCalendarGrid-Layer"
        >
          <Interval
            hovered={false}
            id="interval-2"
            key="interval-2"
            length={7}
            start={7}
            type="pending"
            view="background"
          >
            <Interval
              hovered={false}
              id="interval-s-23l5"
              key="interval-s-23l5"
              length={5}
              start={-30}
              type="holiday"
              view="holiday"
            />
          </Interval>
        </div>
        <div
          className="DutyCalendarGrid-Layer"
        />
        <div
          className="DutyCalendarGrid-Layer"
        >
          <Interval
            hovered={false}
            id="interval-2"
            key="interval-2"
            length={7}
            start={7}
            type="pending"
            view="content"
          >
            <ShiftContainer
              className="DutyCalendarGrid-IntervalContent"
              endDate={2019-02-14T00:00:00.000Z}
              hideDutyDetails={[Function]}
              id={2}
              isApproved={false}
              label="text"
              onHoverChange={[MockFunction]}
              onOpenShiftEditClick={[MockFunction]}
              person={
                Object {
                  "login": "person2",
                  "name": "Имя2",
                  "vteams": Array [],
                }
              }
              replacements={Array []}
              scheduleId={1}
              showDutyDetails={[Function]}
              startDate={2019-02-08T00:00:00.000Z}
              user={
                Object {
                  "login": "login",
                }
              }
            />
          </Interval>
        </div>
      </div>
    </div>
    <Connect(ShiftDetailsPopup)
      key="shift-details"
      shiftDetails={Object {}}
    />
  </div>
</div>
`;

exports[`Should render DutyCalendarGrid with replaces 1`] = `
<div
  className="DutyCalendarGrid"
  style={
    Object {
      "--days-count": 5,
      "--persons-count": 1,
    }
  }
>
  <Header
    className="DutyCalendarGrid-Header"
    key="calendar-100-header"
    scheduleDescription="scheduleDescription"
    scheduleKey={100}
    scheduleName="scheduleName"
    serviceSlug="someslug"
  />
  <div
    className="DutyCalendarGrid-Calendar"
    key="calendar-100-calendar"
  >
    <div
      className="DutyCalendarGrid-PersonsPanel"
    >
      <Person
        key="person-person1"
        login="person1"
        name="Имя1"
        vteams={Array []}
      />
    </div>
    <div
      className="DutyCalendarGrid-Scrollable"
    >
      <Holiday
        key="holiday-1549065600000"
        length={1}
        start={1}
      />
      <Holiday
        key="holiday-1549152000000"
        length={1}
        start={2}
      />
      <div
        className="DutyCalendarGrid-DaysList"
      >
        <DateDay
          date={2019-02-01T00:00:00.000Z}
          key="2019-02-01T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-02T00:00:00.000Z}
          key="2019-02-02T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-03T00:00:00.000Z}
          key="2019-02-03T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-04T00:00:00.000Z}
          key="2019-02-04T00:00:00.000Z"
          scale="day"
          status="ok"
        />
        <DateDay
          date={2019-02-05T00:00:00.000Z}
          key="2019-02-05T00:00:00.000Z"
          scale="day"
        />
      </div>
      <div
        className="DutyCalendarGrid-Row"
        key="row-100@person1"
      >
        <div
          className="DutyCalendarGrid-Layer"
        >
          <Interval
            hovered={false}
            id="interval-1"
            key="interval-1"
            length={2}
            start={0}
            type="pending"
            view="background"
          >
            <Interval
              hovered={false}
              id="interval-201"
              key="interval-201"
              length={1}
              start={0}
              view="replace"
            />
            <Interval
              hovered={false}
              id="interval-202"
              key="interval-202"
              length={2}
              start={2}
              view="replace"
            />
          </Interval>
        </div>
        <div
          className="DutyCalendarGrid-Layer"
        />
        <div
          className="DutyCalendarGrid-Layer"
        >
          <Interval
            hovered={false}
            id="interval-1"
            key="interval-1"
            length={2}
            start={0}
            type="pending"
            view="content"
          >
            <ShiftContainer
              className="DutyCalendarGrid-IntervalContent"
              endDate={2019-02-05T00:00:00.000Z}
              hideDutyDetails={[Function]}
              id={1}
              isApproved={false}
              label="text"
              onHoverChange={[MockFunction]}
              onOpenShiftEditClick={[MockFunction]}
              person={
                Object {
                  "login": "person1",
                  "name": "Имя1",
                  "vteams": Array [],
                }
              }
              replacements={
                Array [
                  Object {
                    "endDate": 2019-02-05T00:00:00.000Z,
                    "id": 201,
                    "isDeleted": false,
                    "length": 1,
                    "person": Object {
                      "login": "login2@",
                      "name": Object {
                        "en": "Name2",
                        "ru": "Имя2",
                      },
                    },
                    "start": 0,
                    "startDate": 2019-02-01T00:00:00.000Z,
                  },
                  Object {
                    "endDate": 2019-02-12T00:00:00.000Z,
                    "id": 202,
                    "isDeleted": false,
                    "length": 2,
                    "person": Object {
                      "login": "login3@",
                      "name": Object {
                        "en": "Name3",
                        "ru": "Имя3",
                      },
                    },
                    "start": 2,
                    "startDate": 2019-02-07T00:00:00.000Z,
                  },
                ]
              }
              scheduleId={1}
              showDutyDetails={[Function]}
              startDate={2019-02-01T00:00:00.000Z}
              user={
                Object {
                  "login": "login",
                }
              }
            />
          </Interval>
        </div>
      </div>
    </div>
    <Connect(ShiftDetailsPopup)
      key="shift-details"
      shiftDetails={Object {}}
    />
  </div>
</div>
`;
