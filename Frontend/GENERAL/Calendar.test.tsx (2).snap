// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render calendar empty 1`] = `
<div
  className="Duty2Calendar"
  data-problems-count={0}
>
  <div
    className="Duty2Calendar-Controls"
  >
    <div
      className="Duty2Calendar-ControlsRight"
    />
  </div>
  <div
    className="Duty2Calendar-Grid"
  >
    <CalendarMessage
      header="i18n:no-data-header"
    />
  </div>
  <WithBemMod(AbcPagination)[type:cursor]
    pageParam="cursor"
    type="cursor"
  />
  <Connect(ShiftSettingsDialogContainer)
    onClose={[Function]}
    onSave={[Function]}
    serviceId={1}
    shiftEdit={
      Object {
        "id": null,
        "replacementForId": null,
      }
    }
  />
</div>
`;

exports[`Should render calendar filled 1`] = `
<div
  className="Duty2Calendar"
  data-problems-count={0}
>
  <div
    className="Duty2Calendar-Controls"
  >
    <SimpleDatepicker
      controlClassName="Duty2Calendar-DateSelectorControl"
      date="2019-02-25T21:00:00.000Z"
      dateFormat="DD MMMM YYYY"
      hasClear={false}
      onUpdate={[Function]}
      size="m"
      timeZone="Europe/Moscow"
      wrapClassName="Duty2Calendar-DateSelector"
    />
    <ForwardRef(RadioButton)
      className="Duty2Calendar-ScaleSelector"
      disabled={false}
      onUpdate={[MockFunction]}
      options={
        Array [
          Object {
            "content": "i18n:scale-hours",
            "value": "hour",
          },
          Object {
            "content": "i18n:scale-days",
            "value": "day",
          },
        ]
      }
    />
    <YCSelect
      allowEmptyValue={false}
      allowNullableValues={false}
      applyOnOutsideClick={true}
      className="Duty2Calendar-PeriodSelector"
      disabled={false}
      hiding={false}
      items={
        Array [
          Object {
            "title": "i18n:month",
            "value": "P1M",
          },
          Object {
            "title": "i18n:2months",
            "value": "P2M",
          },
        ]
      }
      itemsPageSize={100}
      loading={false}
      loadingItems={false}
      onUpdate={[Function]}
      showApply={false}
      showArrow={true}
      showItemIcon={false}
      showItemMeta={false}
      showMissingItems={false}
      showSearch={false}
      showSelectAll={true}
      size="s"
      stretched={true}
      type="single"
      value="P1M"
      virtualizeThreshold={100}
    />
    <YCSelect
      allowEmptyValue={false}
      allowNullableValues={false}
      applyOnOutsideClick={true}
      className="Duty2Calendar-DutyPersonSuggest"
      disabled={false}
      getItems={[Function]}
      hiding={false}
      items={Array []}
      itemsPageSize={100}
      loading={false}
      loadingItems={false}
      onUpdate={[Function]}
      placeholder="i18n:all-duty-persons"
      popupClassName="Duty2Calendar-DutyPersonSuggestMenu"
      showApply={false}
      showArrow={true}
      showItemIcon={true}
      showItemMeta={true}
      showMissingItems={false}
      showSearch={true}
      showSelectAll={true}
      size="s"
      stretched={true}
      type="multiple"
      virtualizeThreshold={100}
    />
    <withEventBroker(Button)
      className="Duty2Calendar-DutyPersonSuggestMe"
      disabled={false}
      onClick={[Function]}
      view="flat-secondary"
    >
      i18n:me
    </withEventBroker(Button)>
    <div
      className="Duty2Calendar-ControlsRight"
    >
      <withEventBroker(Button)
        href="http://localhost/services/1/duty2/new"
        size="m"
        view="outlined"
      >
        <SimpleComposeWrapper [type:plus]
          className="Duty2Calendar-CreateDutyIcon"
          size="s"
          type="plus"
        />
        i18n:create-duty-settings
      </withEventBroker(Button)>
    </div>
  </div>
  <div
    className="Duty2Calendar-Message"
  >
    <Message
      onClose={[Function]}
      type="info"
      view="new"
    >
      i18n:backup-duty-info-message
    </Message>
  </div>
  <div
    className="Duty2Calendar-Grid"
  >
    <Connect(CalendarGridContainer)
      canEditDutySettings={true}
      data={
        Object {
          "absences": Object {},
          "daysList": Array [
            3000-02-25T21:00:00.000Z,
            3000-02-26T21:00:00.000Z,
            3000-02-27T21:00:00.000Z,
            3000-02-28T21:00:00.000Z,
            3000-03-01T21:00:00.000Z,
            3000-03-02T21:00:00.000Z,
            3000-03-03T21:00:00.000Z,
          ],
          "holidaysList": Array [
            Object {
              "end": "3000-03-04T00:00:00.000+03:00",
              "intervalType": "weekend",
              "start": "3000-03-02T00:00:00.000+03:00",
            },
          ],
          "personsCount": 3,
          "schedule": Object {
            "daysStatus": Object {},
            "id": 40,
            "name": "schedule0 name",
            "persons": Object {
              "person0Id": Object {
                "name": Object {
                  "en": "name0",
                  "ru": "имя0",
                },
                "shifts": Array [
                  Object {
                    "endDate": 2019-02-27T21:00:00.000Z,
                    "id": 0,
                    "isPrimary": false,
                    "length": 2,
                    "replacementForId": null,
                    "scheduleId": 1,
                    "start": 1,
                    "startDate": 2019-02-26T21:00:00.000Z,
                    "type": "approved",
                  },
                  Object {
                    "endDate": 2019-03-01T21:00:00.000Z,
                    "id": 1,
                    "isPrimary": false,
                    "length": 1,
                    "replacementForId": null,
                    "scheduleId": 1,
                    "start": 3,
                    "startDate": 2019-02-28T21:00:00.000Z,
                    "type": "pending",
                  },
                ],
              },
              "person1Id": Object {
                "name": Object {
                  "en": "name1",
                  "ru": "имя1",
                },
                "shifts": Array [
                  Object {
                    "endDate": 2019-02-28T21:00:00.000Z,
                    "id": 2,
                    "isPrimary": false,
                    "length": 1,
                    "replacementForId": null,
                    "scheduleId": 1,
                    "start": 2,
                    "startDate": 2019-02-27T21:00:00.000Z,
                    "type": "pending",
                  },
                ],
              },
            },
            "recalculationInProcess": false,
            "revision": null,
            "serviceId": 1,
            "state": "active",
          },
        }
      }
      key="40"
      onDeleteSchedule={[Function]}
      onOpenShiftEditClick={[Function]}
      scheduleTitleView="link"
      serviceId={1}
      showEmptyMessage={true}
      start={3000-02-25T21:00:00.000Z}
      user={Object {}}
    />
    <Connect(CalendarGridContainer)
      canEditDutySettings={true}
      data={
        Object {
          "absences": Object {},
          "daysList": Array [
            3000-02-25T21:00:00.000Z,
            3000-02-26T21:00:00.000Z,
            3000-02-27T21:00:00.000Z,
            3000-02-28T21:00:00.000Z,
            3000-03-01T21:00:00.000Z,
            3000-03-02T21:00:00.000Z,
            3000-03-03T21:00:00.000Z,
          ],
          "holidaysList": Array [
            Object {
              "end": "3000-03-04T00:00:00.000+03:00",
              "intervalType": "weekend",
              "start": "3000-03-02T00:00:00.000+03:00",
            },
          ],
          "personsCount": 3,
          "schedule": Object {
            "daysStatus": Object {},
            "id": 41,
            "name": "schedule1 name",
            "persons": Object {
              "person2Id": Object {
                "name": Object {
                  "en": "name2",
                  "ru": "имя2",
                },
                "shifts": Array [
                  Object {
                    "endDate": 2019-02-28T21:00:00.000Z,
                    "id": 3,
                    "isPrimary": false,
                    "length": 2,
                    "replacementForId": null,
                    "scheduleId": 1,
                    "start": 1,
                    "startDate": 2019-02-26T21:00:00.000Z,
                    "type": "approved",
                  },
                ],
              },
            },
            "recalculationInProcess": false,
            "revision": null,
            "serviceId": 1,
            "state": "active",
          },
        }
      }
      key="41"
      onDeleteSchedule={[Function]}
      onOpenShiftEditClick={[Function]}
      scheduleTitleView="link"
      serviceId={1}
      showEmptyMessage={true}
      start={3000-02-25T21:00:00.000Z}
      user={Object {}}
    />
  </div>
  <WithBemMod(AbcPagination)[type:cursor]
    pageParam="cursor"
    type="cursor"
  />
  <Connect(ShiftSettingsDialogContainer)
    onClose={[Function]}
    onSave={[Function]}
    serviceId={1}
    shiftEdit={
      Object {
        "id": null,
        "replacementForId": null,
      }
    }
  />
</div>
`;

exports[`Should render calendar with error 1`] = `
<div
  className="Duty2Calendar"
  data-problems-count={0}
>
  <div
    className="Duty2Calendar-Controls"
  >
    <div
      className="Duty2Calendar-ControlsRight"
    />
  </div>
  <div
    className="Duty2Calendar-Grid"
  >
    <CalendarMessage
      header="i18n:no-data-header"
    />
  </div>
  <WithBemMod(AbcPagination)[type:cursor]
    pageParam="cursor"
    type="cursor"
  />
  <Connect(ShiftSettingsDialogContainer)
    onClose={[Function]}
    onSave={[Function]}
    serviceId={1}
    shiftEdit={
      Object {
        "id": null,
        "replacementForId": null,
      }
    }
  />
</div>
`;
