// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AbcResourceRoles Should render disabled resource roles 1`] = `
<abc-resource-roles
  isRolesDisabled={true}
  onLinkClick={[MockFunction]}
  onPopupOutsideClick={[MockFunction]}
  popupOpen={false}
  resourceRoles={Array []}
  text="text"
>
  <div
    className="ta-component abc-resource-roles"
    data-lego="react"
    style={Object {}}
  >
    <link
      attrs={
        Object {
          "ref": Object {
            "current": <span
              aria-disabled="true"
              class="control link control_disabled_yes link_disabled_yes link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
              data-lego="react"
              role="button"
            >
              <span
                class="link__inner"
                data-lego="react"
              >
                text
              </span>
            </span>,
          },
        }
      }
      disabled={true}
      key="link"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "link",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      pseudo={true}
      tabIndex="0"
      text="text"
      theme="pseudo"
    >
      <span
        aria-disabled="true"
        className="control link control_disabled_yes link_disabled_yes link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
        data-lego="react"
        role="button"
        style={Object {}}
      >
        <link__inner
          key="inner"
        >
          <span
            className="link__inner"
            data-lego="react"
            style={Object {}}
          >
            text
          </span>
        </link__inner>
      </span>
    </link>
    <popup2
      anchor={[Function]}
      autoclosable={true}
      directions={
        Array [
          "bottom-left",
          "bottom-center",
          "bottom-right",
          "top-left",
          "top-center",
          "top-right",
          "right-top",
          "right-center",
          "right-bottom",
          "left-top",
          "left-center",
          "left-bottom",
        ]
      }
      hiding={true}
      key="popup"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "popup",
          "mods": Object {},
        }
      }
      onAfterClose={[Function]}
      onAfterOpen={[Function]}
      onBeforeClose={[Function]}
      onBeforeOpen={[Function]}
      onOutsideClick={[MockFunction]}
      scope={[Function]}
      secondaryOffset={0}
      tailOffset={0}
      target="anchor"
      theme="normal"
      view="classic"
      visible={false}
      zIndexGroupLevel={0}
    />
  </div>
</abc-resource-roles>
`;

exports[`AbcResourceRoles Should render empty resource roles 1`] = `
<abc-resource-roles
  isRolesDisabled={false}
  onLinkClick={[MockFunction]}
  onPopupOutsideClick={[MockFunction]}
  popupOpen={false}
  resourceRoles={Array []}
  text="text"
>
  <div
    className="ta-component abc-resource-roles"
    data-lego="react"
    style={Object {}}
  >
    <link
      attrs={
        Object {
          "ref": Object {
            "current": <span
              class="control link link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
              data-lego="react"
              role="button"
              tabindex="0"
            >
              <span
                class="link__inner"
                data-lego="react"
              >
                text
              </span>
            </span>,
          },
        }
      }
      disabled={false}
      key="link"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "link",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      pseudo={true}
      tabIndex="0"
      text="text"
      theme="pseudo"
    >
      <span
        className="control link link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
        data-lego="react"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        role="button"
        style={Object {}}
        tabIndex="0"
      >
        <link__inner
          key="inner"
        >
          <span
            className="link__inner"
            data-lego="react"
            style={Object {}}
          >
            text
          </span>
        </link__inner>
      </span>
    </link>
    <popup2
      anchor={[Function]}
      autoclosable={true}
      directions={
        Array [
          "bottom-left",
          "bottom-center",
          "bottom-right",
          "top-left",
          "top-center",
          "top-right",
          "right-top",
          "right-center",
          "right-bottom",
          "left-top",
          "left-center",
          "left-bottom",
        ]
      }
      hiding={true}
      key="popup"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "popup",
          "mods": Object {},
        }
      }
      onAfterClose={[Function]}
      onAfterOpen={[Function]}
      onBeforeClose={[Function]}
      onBeforeOpen={[Function]}
      onOutsideClick={[MockFunction]}
      scope={[Function]}
      secondaryOffset={0}
      tailOffset={0}
      target="anchor"
      theme="normal"
      view="classic"
      visible={false}
      zIndexGroupLevel={0}
    />
  </div>
</abc-resource-roles>
`;

exports[`AbcResourceRoles Should render loading resource roles 1`] = `
<abc-resource-roles
  isRolesDisabled={false}
  onLinkClick={[MockFunction]}
  onPopupOutsideClick={[MockFunction]}
  popupOpen={false}
  text="text"
>
  <div
    className="ta-component abc-resource-roles"
    data-lego="react"
    style={Object {}}
  >
    <link
      attrs={
        Object {
          "ref": Object {
            "current": <span
              class="control link link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
              data-lego="react"
              role="button"
              tabindex="0"
            >
              <span
                class="link__inner"
                data-lego="react"
              >
                text
              </span>
            </span>,
          },
        }
      }
      disabled={false}
      key="link"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "link",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      pseudo={true}
      tabIndex="0"
      text="text"
      theme="pseudo"
    >
      <span
        className="control link link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
        data-lego="react"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        role="button"
        style={Object {}}
        tabIndex="0"
      >
        <link__inner
          key="inner"
        >
          <span
            className="link__inner"
            data-lego="react"
            style={Object {}}
          >
            text
          </span>
        </link__inner>
      </span>
    </link>
    <popup2
      anchor={[Function]}
      autoclosable={true}
      directions={
        Array [
          "bottom-left",
          "bottom-center",
          "bottom-right",
          "top-left",
          "top-center",
          "top-right",
          "right-top",
          "right-center",
          "right-bottom",
          "left-top",
          "left-center",
          "left-bottom",
        ]
      }
      hiding={true}
      key="popup"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "popup",
          "mods": Object {},
        }
      }
      onAfterClose={[Function]}
      onAfterOpen={[Function]}
      onBeforeClose={[Function]}
      onBeforeOpen={[Function]}
      onOutsideClick={[MockFunction]}
      scope={[Function]}
      secondaryOffset={0}
      tailOffset={0}
      target="anchor"
      theme="normal"
      view="classic"
      visible={false}
      zIndexGroupLevel={0}
    />
  </div>
</abc-resource-roles>
`;

exports[`AbcResourceRoles Should render resource roles 1`] = `
<abc-resource-roles
  isRolesDisabled={false}
  onLinkClick={[MockFunction]}
  onPopupOutsideClick={[MockFunction]}
  popupOpen={false}
  resourceRoles={
    Array [
      Object {
        "id": "tag_slug",
        "name": Object {
          "ru": "tag_name",
        },
      },
    ]
  }
  text="text"
>
  <div
    className="ta-component abc-resource-roles"
    data-lego="react"
    style={Object {}}
  >
    <link
      attrs={
        Object {
          "ref": Object {
            "current": <span
              class="control link link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
              data-lego="react"
              role="button"
              tabindex="0"
            >
              <span
                class="link__inner"
                data-lego="react"
              >
                text
              </span>
            </span>,
          },
        }
      }
      disabled={false}
      key="link"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "link",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      pseudo={true}
      tabIndex="0"
      text="text"
      theme="pseudo"
    >
      <span
        className="control link link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
        data-lego="react"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        role="button"
        style={Object {}}
        tabIndex="0"
      >
        <link__inner
          key="inner"
        >
          <span
            className="link__inner"
            data-lego="react"
            style={Object {}}
          >
            text
          </span>
        </link__inner>
      </span>
    </link>
    <popup2
      anchor={[Function]}
      autoclosable={true}
      directions={
        Array [
          "bottom-left",
          "bottom-center",
          "bottom-right",
          "top-left",
          "top-center",
          "top-right",
          "right-top",
          "right-center",
          "right-bottom",
          "left-top",
          "left-center",
          "left-bottom",
        ]
      }
      hiding={true}
      key="popup"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "popup",
          "mods": Object {},
        }
      }
      onAfterClose={[Function]}
      onAfterOpen={[Function]}
      onBeforeClose={[Function]}
      onBeforeOpen={[Function]}
      onOutsideClick={[MockFunction]}
      scope={[Function]}
      secondaryOffset={0}
      tailOffset={0}
      target="anchor"
      theme="normal"
      view="classic"
      visible={false}
      zIndexGroupLevel={0}
    />
  </div>
</abc-resource-roles>
`;

exports[`AbcResourceRoles Should render resource roles with error 1`] = `
<abc-resource-roles
  error={[Error]}
  isRolesDisabled={false}
  onLinkClick={[MockFunction]}
  onPopupOutsideClick={[MockFunction]}
  popupOpen={false}
  text="text"
>
  <div
    className="ta-component abc-resource-roles"
    data-lego="react"
    style={Object {}}
  >
    <link
      attrs={
        Object {
          "ref": Object {
            "current": <span
              class="control link link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
              data-lego="react"
              role="button"
              tabindex="0"
            >
              <span
                class="link__inner"
                data-lego="react"
              >
                text
              </span>
            </span>,
          },
        }
      }
      disabled={false}
      key="link"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "link",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      pseudo={true}
      tabIndex="0"
      text="text"
      theme="pseudo"
    >
      <span
        className="control link link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
        data-lego="react"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        role="button"
        style={Object {}}
        tabIndex="0"
      >
        <link__inner
          key="inner"
        >
          <span
            className="link__inner"
            data-lego="react"
            style={Object {}}
          >
            text
          </span>
        </link__inner>
      </span>
    </link>
    <popup2
      anchor={[Function]}
      autoclosable={true}
      directions={
        Array [
          "bottom-left",
          "bottom-center",
          "bottom-right",
          "top-left",
          "top-center",
          "top-right",
          "right-top",
          "right-center",
          "right-bottom",
          "left-top",
          "left-center",
          "left-bottom",
        ]
      }
      hiding={true}
      key="popup"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "popup",
          "mods": Object {},
        }
      }
      onAfterClose={[Function]}
      onAfterOpen={[Function]}
      onBeforeClose={[Function]}
      onBeforeOpen={[Function]}
      onOutsideClick={[MockFunction]}
      scope={[Function]}
      secondaryOffset={0}
      tailOffset={0}
      target="anchor"
      theme="normal"
      view="classic"
      visible={false}
      zIndexGroupLevel={0}
    />
  </div>
</abc-resource-roles>
`;

exports[`AbcResourceRoles Should render resource roles with popup opened 1`] = `
<abc-resource-roles
  isRolesDisabled={false}
  onLinkClick={[MockFunction]}
  onPopupOutsideClick={[MockFunction]}
  popupOpen={true}
  resourceRoles={
    Array [
      Object {
        "id": "tag_slug",
        "name": Object {
          "ru": "tag_name",
        },
      },
    ]
  }
  text="text"
>
  <div
    className="ta-component abc-resource-roles"
    data-lego="react"
    style={Object {}}
  >
    <link
      attrs={
        Object {
          "ref": Object {
            "current": <span
              class="control link link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
              data-lego="react"
              role="button"
              tabindex="0"
            >
              <span
                class="link__inner"
                data-lego="react"
              >
                text
              </span>
            </span>,
          },
        }
      }
      disabled={false}
      key="link"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "link",
          "mods": Object {},
        }
      }
      onClick={[MockFunction]}
      pseudo={true}
      tabIndex="0"
      text="text"
      theme="pseudo"
    >
      <span
        className="control link link_theme_pseudo link_pseudo_yes abc-resource-roles__link"
        data-lego="react"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        role="button"
        style={Object {}}
        tabIndex="0"
      >
        <link__inner
          key="inner"
        >
          <span
            className="link__inner"
            data-lego="react"
            style={Object {}}
          >
            text
          </span>
        </link__inner>
      </span>
    </link>
    <popup2
      anchor={[Function]}
      autoclosable={true}
      directions={
        Array [
          "bottom-left",
          "bottom-center",
          "bottom-right",
          "top-left",
          "top-center",
          "top-right",
          "right-top",
          "right-center",
          "right-bottom",
          "left-top",
          "left-center",
          "left-bottom",
        ]
      }
      hiding={true}
      key="popup"
      mix={
        Object {
          "block": "abc-resource-roles",
          "elem": "popup",
          "mods": Object {},
        }
      }
      onAfterClose={[Function]}
      onAfterOpen={[Function]}
      onBeforeClose={[Function]}
      onBeforeOpen={[Function]}
      onOutsideClick={[MockFunction]}
      scope={[Function]}
      secondaryOffset={0}
      tailOffset={0}
      target="anchor"
      theme="normal"
      view="classic"
      visible={true}
      zIndexGroupLevel={0}
    />
  </div>
</abc-resource-roles>
`;
