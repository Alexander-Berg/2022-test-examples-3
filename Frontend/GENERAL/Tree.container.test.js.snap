// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should prepare data for the view component 1`] = `
<TreeContainer
  isUrlEmpty={true}
  requestAllNodeChildren={[MockFunction]}
  requestNodeChildrenUpdate={[MockFunction]}
  requestUpdate={[MockFunction]}
  rootServiceId={0}
  setNodeClosed={[MockFunction]}
  setNodeOpened={[MockFunction]}
  tree={
    Object {
      "0": Object {
        "children": Array [
          1,
          2,
        ],
        "isRoot": true,
      },
      "1": Object {
        "children": Array [
          1.1,
        ],
        "childrenDataStatus": "pending",
        "childrenError": null,
        "data": Object {
          "id": 1,
          "parent": null,
        },
        "isOpen": false,
      },
      "1.1": Object {
        "children": Array [],
        "childrenDataStatus": "pending",
        "childrenError": null,
        "data": Object {
          "id": 1.1,
          "parent": Object {
            "id": 1,
          },
        },
        "isOpen": false,
      },
      "2": Object {
        "children": Array [
          2.1,
          2.2,
        ],
        "childrenDataStatus": "inited",
        "childrenError": null,
        "data": Object {
          "id": 2,
          "parent": null,
        },
        "isOpen": true,
      },
      "2.1": Object {
        "children": Array [],
        "childrenDataStatus": "pending",
        "childrenError": null,
        "data": Object {
          "id": 2.1,
          "parent": Object {
            "id": 2,
          },
        },
        "isOpen": false,
      },
      "2.2": Object {
        "children": Array [],
        "childrenDataStatus": "pending",
        "childrenError": null,
        "data": Object {
          "id": 2.2,
          "parent": Object {
            "id": 2,
          },
        },
        "isOpen": false,
      },
    }
  }
>
  <mockConstructor
    error={null}
    list={
      Array [
        Object {
          "childrenDataStatus": "pending",
          "childrenError": null,
          "data": Object {
            "id": 1,
            "parent": null,
          },
          "displayedChildrenCount": 1,
          "isOpen": false,
        },
        Object {
          "childrenDataStatus": "inited",
          "childrenError": null,
          "data": Object {
            "id": 2,
            "parent": null,
          },
          "displayedChildrenCount": 2,
          "isOpen": true,
        },
        Object {
          "childrenDataStatus": "pending",
          "childrenError": null,
          "data": Object {
            "id": 2.1,
            "parent": Object {
              "id": 2,
            },
          },
          "displayedChildrenCount": 0,
          "isOpen": false,
        },
        Object {
          "childrenDataStatus": "pending",
          "childrenError": null,
          "data": Object {
            "id": 2.2,
            "parent": Object {
              "id": 2,
            },
          },
          "displayedChildrenCount": 0,
          "isOpen": false,
        },
      ]
    }
    onNodeClick={[Function]}
    onShowUnmatched={[Function]}
  >
    <div>
      Tree mock. Props used: 
      {"list":[{"data":{"id":1,"parent":null},"childrenDataStatus":"pending","childrenError":null,"displayedChildrenCount":1,"isOpen":false},{"data":{"id":2,"parent":null},"childrenDataStatus":"inited","childrenError":null,"displayedChildrenCount":2,"isOpen":true},{"data":{"id":2.1,"parent":{"id":2}},"childrenDataStatus":"pending","childrenError":null,"displayedChildrenCount":0,"isOpen":false},{"data":{"id":2.2,"parent":{"id":2}},"childrenDataStatus":"pending","childrenError":null,"displayedChildrenCount":0,"isOpen":false}],"error":null}
    </div>
  </mockConstructor>
</TreeContainer>
`;
