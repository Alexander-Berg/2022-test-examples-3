import { WifiType } from 'types/pp/wifi';

import { getEncodedCredentials } from './get-encoded-credentials';

describe('utils/speaker/pairing-sound/getEncodedCredentials', () => {
    it('Должен сериализовать в байты wi-fi-креденшелы (UNKNOWN)', () => {
        expect(getEncodedCredentials('abcdefgh', '1234567890', null, 'qwerty09876'))
            .toEqual([3, 175, 46, 10, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 11, 113, 119, 101, 114, 116, 121, 48, 57, 56, 55, 54]);
    });

    it('Должен сериализовать в байты wi-fi-креденшелы (UNKNOWN с эмодзи)', () => {
        expect(getEncodedCredentials('ssid \uD83D\uDE00 emoji', '\")(*^&*%^$!@%E$%', null, 'qwerty09876'))
            .toEqual([3, 63, 104, 16, 34, 41, 40, 42, 94, 38, 42, 37, 94, 36, 33, 64, 37, 69, 36, 37, 11, 113, 119, 101, 114, 116, 121, 48, 57, 56, 55, 54]);
    });

    it('Должен сериализовать в байты wi-fi-креденшелы (OPEN)', () => {
        expect(getEncodedCredentials('abcdefgh', 'lsdfkil2387', WifiType.OPEN, 'klhk89y38294y'))
            .toEqual([0, 8, 97, 98, 99, 100, 101, 102, 103, 104, 11, 108, 115, 100, 102, 107, 105, 108, 50, 51, 56, 55, 13, 107, 108, 104, 107, 56, 57, 121, 51, 56, 50, 57, 52, 121]);
    });

    it('Должен сериализовать в байты wi-fi-креденшелы (WEP)', () => {
        expect(getEncodedCredentials('abcdefgh', 'lsdfkil2387', WifiType.WEP, 'klhk89y38294y'))
            .toEqual([1, 8, 97, 98, 99, 100, 101, 102, 103, 104, 11, 108, 115, 100, 102, 107, 105, 108, 50, 51, 56, 55, 13, 107, 108, 104, 107, 56, 57, 121, 51, 56, 50, 57, 52, 121]);
    });

    it('Должен сериализовать в байты wi-fi-креденшелы (WPA)', () => {
        expect(getEncodedCredentials('abcdefgh', 'lsdfkil2387', WifiType.WPA, 'klhk89y38294y'))
            .toEqual([2, 8, 97, 98, 99, 100, 101, 102, 103, 104, 11, 108, 115, 100, 102, 107, 105, 108, 50, 51, 56, 55, 13, 107, 108, 104, 107, 56, 57, 121, 51, 56, 50, 57, 52, 121]);
    });

    it('Должен сериализовать в байты wi-fi-креденшелы (WPA с кириллицей)', () => {
        expect(getEncodedCredentials('абвгде\'жз', '\")(*^&*%^$!@%E$%', WifiType.WPA, 'jkhsrjqwh12'))
            .toEqual([2, 17, 208, 176, 208, 177, 208, 178, 208, 179, 208, 180, 208, 181, 39, 208, 182, 208, 183, 16, 34, 41, 40, 42, 94, 38, 42, 37, 94, 36, 33, 64, 37, 69, 36, 37, 11, 106, 107, 104, 115, 114, 106, 113, 119, 104, 49, 50]);
    });

    it('Должен сериализовать в байты wi-fi-креденшелы (WPA с эмодзи)', () => {
        expect(getEncodedCredentials('ssid \uD83D\uDE00 emoji', '\")(*^&*%^$!@%E$%', WifiType.WPA, 'klhk89y38294y'))
            .toEqual([2, 15, 115, 115, 105, 100, 32, 240, 159, 152, 128, 32, 101, 109, 111, 106, 105, 16, 34, 41, 40, 42, 94, 38, 42, 37, 94, 36, 33, 64, 37, 69, 36, 37, 13, 107, 108, 104, 107, 56, 57, 121, 51, 56, 50, 57, 52, 121]);
    });

    it('Должен сериализовать в байты wi-fi-креденшелы (NONE)', () => {
        expect(getEncodedCredentials('abcdefgh', 'lsdfkil2387', WifiType.NONE, 'klhk89y38294y'))
            .toEqual([4, 13, 107, 108, 104, 107, 56, 57, 121, 51, 56, 50, 57, 52, 121]);
    });
});
