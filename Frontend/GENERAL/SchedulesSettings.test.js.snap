// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render schedules form 1`] = `
<div
  className="DutySchedulesSettings"
>
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-common
    </Component>
  </header>
  <Field>
    <Label
      input="schedule_name dd"
      label="i18n:name-label"
    />
    <textinput
      id="schedule_name"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "name",
        }
      }
      onChange={[Function]}
      placeholder="i18n:name-placeholder"
      size="s"
      theme="normal"
      type="text"
      view="classic"
    />
  </Field>
  <Field
    className="DutySchedulesSettings-Field DutySchedulesSettings-Field_type_textarea"
  >
    <Label
      input="schedule_description"
      label="i18n:description-label"
    />
    <SimpleComposeWrapper [theme:normal],[view:default],[size:s]
      className="DutySchedulesSettings-Description"
      id="schedule_description"
      onChange={[Function]}
      placeholder="i18n:description-placeholder"
      size="s"
      theme="normal"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:description-hint
  </abc-text>
  <Field>
    <Label
      input="schedule_slug"
      label="i18n:slug-label"
    />
    <Label />
  </Field>
  <Field>
    <Label
      input="schedule_role"
      label="i18n:role-label"
    />
    <ta-suggest
      dataprovider={
        Object {
          "pathname": "/back-proxy/api/v3/common/suggests/roles",
          "query": Object {
            "service": 42,
          },
        }
      }
      id="schedule_role"
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "role",
        }
      }
      onChange={[Function]}
      placeholder="i18n:role-placeholder"
      single={true}
      size="s"
      value={Array []}
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_role-on-duty"
      label="i18n:role-on-duty-label"
    />
    <ta-suggest
      dataprovider={
        Object {
          "pathname": "/back-proxy/api/v3/common/suggests/roles",
          "query": Object {
            "scope__can_issue_at_duty_time": true,
            "service": 42,
          },
        }
      }
      id="schedule_role-on-duty"
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "role-on-duty",
        }
      }
      onChange={[Function]}
      placeholder="i18n:role-on-duty-placeholder"
      single={true}
      size="s"
      value={Array []}
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_personsCount"
      label="i18n:persons-count-label"
    />
    <textinput
      disabled={false}
      id="schedule_personsCount"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "persons-count",
        }
      }
      onChange={[Function]}
      size="s"
      text="1"
      theme="normal"
      type="number"
      view="classic"
    />
  </Field>
  <Field>
    <checkbox
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "need-order",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:need-order-label
    </checkbox>
  </Field>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-duration
    </Component>
  </header>
  <Field>
    <Label
      label="i18n:duty-start-date"
    />
    <ta-datepicker
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "date",
        }
      }
      onChange={[Function]}
      size="s"
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_startTime"
      label="i18n:start-time"
    />
    <TimeInput
      className="DutySchedulesSettings-StartTime"
      inputId="schedule_startTime"
      onChange={[Function]}
      value="00:00"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:start-time-tip
  </abc-text>
  <Field>
    <Label
      input="schedule_duration"
      label="i18n:duty-duration"
    />
    <textinput
      controlAttrs={
        Object {
          "max": 1000000,
          "min": 1,
        }
      }
      id="schedule_duration"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "duration",
        }
      }
      onChange={[Function]}
      size="s"
      text="5"
      theme="normal"
      type="number"
      view="classic"
    />
    <Label
      className="DutySchedulesSettings-Days"
      input="schedule_duration"
      label="i18n:days"
    />
  </Field>
  <Field>
    <Label
      input="schedule_autoapprove_timedelta"
      label="i18n:autoapprove-timedelta"
    />
    <textinput
      controlAttrs={
        Object {
          "max": 1000000,
          "min": 0,
        }
      }
      id="schedule_autoapprove_timedelta"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "autoapprove-timedelta",
        }
      }
      onChange={[Function]}
      size="s"
      text="undefined"
      theme="normal"
      type="number"
      view="classic"
    />
    <Label
      className="DutySchedulesSettings-Days"
      input="schedule_autoapprove_timedelta"
      label="i18n:days-in-advance"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:autoapprove-timedelta-hint
  </abc-text>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-tracker
    </Component>
  </header>
  <abc-text
    muted="yes"
  >
    i18n:tracker-hint
  </abc-text>
  <Field>
    <Label
      input="schedule_queue"
      label="i18n:queue-label"
    />
    <TrackerQueueSuggest
      disabled={true}
      id="schedule_queue"
      onQueueIdsChange={[Function]}
      onQueueKeysChange={[Function]}
      queueKey={null}
    />
  </Field>
  <Field>
    <Label
      input="schedule_component"
      label="i18n:component-label"
    />
    <TrackerComponentsSuggest
      disabled={true}
      id="schedule_component"
      onComponentsIdsChange={[Function]}
      queueKey={null}
    />
  </Field>
  <Message
    type="info"
    view="new"
  >
    i18n:tracker-access-warning
    <Memo() />
  </Message>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-notifications
    </Component>
  </header>
  <FieldGroup>
    <Field>
      <checkbox
        checked={true}
        mix={
          Object {
            "block": "DutySchedulesSettings",
            "elem": "duty-on-holidays",
          }
        }
        onChange={[Function]}
        size="s"
        theme="normal"
        view="classic"
      >
        i18n:duty-on-holidays-label
      </checkbox>
    </Field>
    <Field>
      <checkbox
        checked={true}
        mix={
          Object {
            "block": "DutySchedulesSettings",
            "elem": "duty-on-weekends",
          }
        }
        onChange={[Function]}
        size="s"
        theme="normal"
        view="classic"
      >
        i18n:duty-on-weekends-label
      </checkbox>
    </Field>
    <abc-text
      muted="yes"
    >
      i18n:duty-on-weekends-hint
    </abc-text>
  </FieldGroup>
  <Field>
    <checkbox
      checked={false}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "consider-other-schedules",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:consider-other-schedules-label
    </checkbox>
  </Field>
  <Field>
    <checkbox
      checked={true}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "show-in-staff",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:show-in-staff
    </checkbox>
  </Field>
</div>
`;

exports[`Should render schedules form with default schedules 1`] = `
<div
  className="DutySchedulesSettings"
>
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-common
    </Component>
  </header>
  <Field>
    <Label
      input="schedule_name dd"
      label="i18n:name-label"
    />
    <textinput
      id="schedule_name"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "name",
        }
      }
      onChange={[Function]}
      placeholder="i18n:name-placeholder"
      size="s"
      theme="normal"
      type="text"
      view="classic"
    />
  </Field>
  <Field
    className="DutySchedulesSettings-Field DutySchedulesSettings-Field_type_textarea"
  >
    <Label
      input="schedule_description"
      label="i18n:description-label"
    />
    <SimpleComposeWrapper [theme:normal],[view:default],[size:s]
      className="DutySchedulesSettings-Description"
      id="schedule_description"
      onChange={[Function]}
      placeholder="i18n:description-placeholder"
      size="s"
      theme="normal"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:description-hint
  </abc-text>
  <Field>
    <Label
      input="schedule_slug"
      label="i18n:slug-label"
    />
    <textinput
      id="schedule_slug"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "slug",
        }
      }
      onChange={[Function]}
      placeholder="i18n:slug-placeholder"
      size="s"
      theme="normal"
      type="text"
      view="classic"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:slug-tip-1
    <br />
    i18n:slug-tip-2
  </abc-text>
  <Field>
    <Label
      input="schedule_role"
      label="i18n:role-label"
    />
    <ta-suggest
      dataprovider={
        Object {
          "pathname": "/back-proxy/api/v3/common/suggests/roles",
          "query": Object {
            "service": 42,
          },
        }
      }
      id="schedule_role"
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "role",
        }
      }
      onChange={[Function]}
      placeholder="i18n:role-placeholder"
      single={true}
      size="s"
      value={Array []}
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_role-on-duty"
      label="i18n:role-on-duty-label"
    />
    <ta-suggest
      dataprovider={
        Object {
          "pathname": "/back-proxy/api/v3/common/suggests/roles",
          "query": Object {
            "scope__can_issue_at_duty_time": true,
            "service": 42,
          },
        }
      }
      id="schedule_role-on-duty"
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "role-on-duty",
        }
      }
      onChange={[Function]}
      placeholder="i18n:role-on-duty-placeholder"
      single={true}
      size="s"
      value={Array []}
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_personsCount"
      label="i18n:persons-count-label"
    />
    <textinput
      disabled={false}
      id="schedule_personsCount"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "persons-count",
        }
      }
      onChange={[Function]}
      size="s"
      text="1"
      theme="normal"
      type="number"
      view="classic"
    />
  </Field>
  <Field>
    <checkbox
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "need-order",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:need-order-label
    </checkbox>
  </Field>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-duration
    </Component>
  </header>
  <Field>
    <Label
      label="i18n:duty-start-date"
    />
    <ta-datepicker
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "date",
        }
      }
      onChange={[Function]}
      size="s"
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_startTime"
      label="i18n:start-time"
    />
    <TimeInput
      className="DutySchedulesSettings-StartTime"
      inputId="schedule_startTime"
      onChange={[Function]}
      value="00:00"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:start-time-tip
  </abc-text>
  <Field>
    <Label
      input="schedule_duration"
      label="i18n:duty-duration"
    />
    <textinput
      controlAttrs={
        Object {
          "max": 1000000,
          "min": 1,
        }
      }
      id="schedule_duration"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "duration",
        }
      }
      onChange={[Function]}
      size="s"
      text="5"
      theme="normal"
      type="number"
      view="classic"
    />
    <Label
      className="DutySchedulesSettings-Days"
      input="schedule_duration"
      label="i18n:days"
    />
  </Field>
  <Field>
    <Label
      input="schedule_autoapprove_timedelta"
      label="i18n:autoapprove-timedelta"
    />
    <textinput
      controlAttrs={
        Object {
          "max": 1000000,
          "min": 0,
        }
      }
      id="schedule_autoapprove_timedelta"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "autoapprove-timedelta",
        }
      }
      onChange={[Function]}
      size="s"
      text="undefined"
      theme="normal"
      type="number"
      view="classic"
    />
    <Label
      className="DutySchedulesSettings-Days"
      input="schedule_autoapprove_timedelta"
      label="i18n:days-in-advance"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:autoapprove-timedelta-hint
  </abc-text>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-tracker
    </Component>
  </header>
  <abc-text
    muted="yes"
  >
    i18n:tracker-hint
  </abc-text>
  <Field>
    <Label
      input="schedule_queue"
      label="i18n:queue-label"
    />
    <TrackerQueueSuggest
      disabled={true}
      id="schedule_queue"
      onQueueIdsChange={[Function]}
      onQueueKeysChange={[Function]}
      queueKey={null}
    />
  </Field>
  <Field>
    <Label
      input="schedule_component"
      label="i18n:component-label"
    />
    <TrackerComponentsSuggest
      disabled={true}
      id="schedule_component"
      onComponentsIdsChange={[Function]}
      queueKey={null}
    />
  </Field>
  <Message
    type="info"
    view="new"
  >
    i18n:tracker-access-warning
    <Memo() />
  </Message>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-notifications
    </Component>
  </header>
  <FieldGroup>
    <Field>
      <checkbox
        checked={true}
        mix={
          Object {
            "block": "DutySchedulesSettings",
            "elem": "duty-on-holidays",
          }
        }
        onChange={[Function]}
        size="s"
        theme="normal"
        view="classic"
      >
        i18n:duty-on-holidays-label
      </checkbox>
    </Field>
    <Field>
      <checkbox
        checked={true}
        mix={
          Object {
            "block": "DutySchedulesSettings",
            "elem": "duty-on-weekends",
          }
        }
        onChange={[Function]}
        size="s"
        theme="normal"
        view="classic"
      >
        i18n:duty-on-weekends-label
      </checkbox>
    </Field>
    <abc-text
      muted="yes"
    >
      i18n:duty-on-weekends-hint
    </abc-text>
  </FieldGroup>
  <Field>
    <checkbox
      checked={false}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "consider-other-schedules",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:consider-other-schedules-label
    </checkbox>
  </Field>
  <Field>
    <checkbox
      checked={true}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "show-in-staff",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:show-in-staff
    </checkbox>
  </Field>
</div>
`;

exports[`Should render schedules form with error 1`] = `
<div
  className="DutySchedulesSettings"
>
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-common
    </Component>
  </header>
  <Field>
    <Label
      input="schedule_name dd"
      label="i18n:name-label"
    />
    <textinput
      id="schedule_name"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "name",
        }
      }
      onChange={[Function]}
      placeholder="i18n:name-placeholder"
      size="s"
      theme="normal"
      type="text"
      view="classic"
    />
  </Field>
  <Field
    className="DutySchedulesSettings-Field DutySchedulesSettings-Field_type_textarea"
  >
    <Label
      input="schedule_description"
      label="i18n:description-label"
    />
    <SimpleComposeWrapper [theme:normal],[view:default],[size:s]
      className="DutySchedulesSettings-Description"
      id="schedule_description"
      onChange={[Function]}
      placeholder="i18n:description-placeholder"
      size="s"
      theme="normal"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:description-hint
  </abc-text>
  <Field>
    <Label
      input="schedule_slug"
      label="i18n:slug-label"
    />
    <Label />
  </Field>
  <Field>
    <Label
      input="schedule_role"
      label="i18n:role-label"
    />
    <ta-suggest
      dataprovider={
        Object {
          "pathname": "/back-proxy/api/v3/common/suggests/roles",
          "query": Object {
            "service": 42,
          },
        }
      }
      id="schedule_role"
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "role",
        }
      }
      onChange={[Function]}
      placeholder="i18n:role-placeholder"
      single={true}
      size="s"
      value={Array []}
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_role-on-duty"
      label="i18n:role-on-duty-label"
    />
    <ta-suggest
      dataprovider={
        Object {
          "pathname": "/back-proxy/api/v3/common/suggests/roles",
          "query": Object {
            "scope__can_issue_at_duty_time": true,
            "service": 42,
          },
        }
      }
      id="schedule_role-on-duty"
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "role-on-duty",
        }
      }
      onChange={[Function]}
      placeholder="i18n:role-on-duty-placeholder"
      single={true}
      size="s"
      value={Array []}
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_personsCount"
      label="i18n:persons-count-label"
    />
    <textinput
      disabled={false}
      id="schedule_personsCount"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "persons-count",
        }
      }
      onChange={[Function]}
      size="s"
      text="1"
      theme="normal"
      type="number"
      view="classic"
    />
  </Field>
  <Field>
    <checkbox
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "need-order",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:need-order-label
    </checkbox>
  </Field>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-duration
    </Component>
  </header>
  <Field>
    <Label
      label="i18n:duty-start-date"
    />
    <ta-datepicker
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "date",
        }
      }
      onChange={[Function]}
      size="s"
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_startTime"
      label="i18n:start-time"
    />
    <TimeInput
      className="DutySchedulesSettings-StartTime"
      inputId="schedule_startTime"
      onChange={[Function]}
      value="00:00"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:start-time-tip
  </abc-text>
  <Field>
    <Label
      input="schedule_duration"
      label="i18n:duty-duration"
    />
    <textinput
      controlAttrs={
        Object {
          "max": 1000000,
          "min": 1,
        }
      }
      id="schedule_duration"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "duration",
        }
      }
      onChange={[Function]}
      size="s"
      text="5"
      theme="normal"
      type="number"
      view="classic"
    />
    <Label
      className="DutySchedulesSettings-Days"
      input="schedule_duration"
      label="i18n:days"
    />
  </Field>
  <Field>
    <Label
      input="schedule_autoapprove_timedelta"
      label="i18n:autoapprove-timedelta"
    />
    <textinput
      controlAttrs={
        Object {
          "max": 1000000,
          "min": 0,
        }
      }
      id="schedule_autoapprove_timedelta"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "autoapprove-timedelta",
        }
      }
      onChange={[Function]}
      size="s"
      text="undefined"
      theme="normal"
      type="number"
      view="classic"
    />
    <Label
      className="DutySchedulesSettings-Days"
      input="schedule_autoapprove_timedelta"
      label="i18n:days-in-advance"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:autoapprove-timedelta-hint
  </abc-text>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-tracker
    </Component>
  </header>
  <abc-text
    muted="yes"
  >
    i18n:tracker-hint
  </abc-text>
  <Field>
    <Label
      input="schedule_queue"
      label="i18n:queue-label"
    />
    <TrackerQueueSuggest
      disabled={true}
      id="schedule_queue"
      onQueueIdsChange={[Function]}
      onQueueKeysChange={[Function]}
      queueKey={null}
    />
  </Field>
  <Field>
    <Label
      input="schedule_component"
      label="i18n:component-label"
    />
    <TrackerComponentsSuggest
      disabled={true}
      id="schedule_component"
      onComponentsIdsChange={[Function]}
      queueKey={null}
    />
  </Field>
  <Message
    type="info"
    view="new"
  >
    i18n:tracker-access-warning
    <Memo() />
  </Message>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-notifications
    </Component>
  </header>
  <FieldGroup>
    <Field>
      <checkbox
        checked={true}
        mix={
          Object {
            "block": "DutySchedulesSettings",
            "elem": "duty-on-holidays",
          }
        }
        onChange={[Function]}
        size="s"
        theme="normal"
        view="classic"
      >
        i18n:duty-on-holidays-label
      </checkbox>
    </Field>
    <Field>
      <checkbox
        checked={true}
        mix={
          Object {
            "block": "DutySchedulesSettings",
            "elem": "duty-on-weekends",
          }
        }
        onChange={[Function]}
        size="s"
        theme="normal"
        view="classic"
      >
        i18n:duty-on-weekends-label
      </checkbox>
    </Field>
    <abc-text
      muted="yes"
    >
      i18n:duty-on-weekends-hint
    </abc-text>
  </FieldGroup>
  <Field>
    <checkbox
      checked={false}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "consider-other-schedules",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:consider-other-schedules-label
    </checkbox>
  </Field>
  <Field>
    <checkbox
      checked={true}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "show-in-staff",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:show-in-staff
    </checkbox>
  </Field>
  <Message
    className="DutySchedulesSettings-Error"
    key="error-1"
    type="error"
    view="new"
  >
    <Error />
  </Message>
</div>
`;

exports[`Should render schedules form with multiple schedules 1`] = `
<div
  className="DutySchedulesSettings"
>
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-common
    </Component>
  </header>
  <Field>
    <Label
      input="schedule_name dd"
      label="i18n:name-label"
    />
    <textinput
      id="schedule_name"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "name",
        }
      }
      onChange={[Function]}
      placeholder="i18n:name-placeholder"
      size="s"
      theme="normal"
      type="text"
      view="classic"
    />
  </Field>
  <Field
    className="DutySchedulesSettings-Field DutySchedulesSettings-Field_type_textarea"
  >
    <Label
      input="schedule_description"
      label="i18n:description-label"
    />
    <SimpleComposeWrapper [theme:normal],[view:default],[size:s]
      className="DutySchedulesSettings-Description"
      id="schedule_description"
      onChange={[Function]}
      placeholder="i18n:description-placeholder"
      size="s"
      theme="normal"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:description-hint
  </abc-text>
  <Field>
    <Label
      input="schedule_slug"
      label="i18n:slug-label"
    />
    <Label />
  </Field>
  <Field>
    <Label
      input="schedule_role"
      label="i18n:role-label"
    />
    <ta-suggest
      dataprovider={
        Object {
          "pathname": "/back-proxy/api/v3/common/suggests/roles",
          "query": Object {
            "service": 42,
          },
        }
      }
      id="schedule_role"
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "role",
        }
      }
      onChange={[Function]}
      placeholder="i18n:role-placeholder"
      single={true}
      size="s"
      value={Array []}
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_role-on-duty"
      label="i18n:role-on-duty-label"
    />
    <ta-suggest
      dataprovider={
        Object {
          "pathname": "/back-proxy/api/v3/common/suggests/roles",
          "query": Object {
            "scope__can_issue_at_duty_time": true,
            "service": 42,
          },
        }
      }
      id="schedule_role-on-duty"
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "role-on-duty",
        }
      }
      onChange={[Function]}
      placeholder="i18n:role-on-duty-placeholder"
      single={true}
      size="s"
      value={Array []}
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_personsCount"
      label="i18n:persons-count-label"
    />
    <textinput
      disabled={false}
      id="schedule_personsCount"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "persons-count",
        }
      }
      onChange={[Function]}
      size="s"
      text="1"
      theme="normal"
      type="number"
      view="classic"
    />
  </Field>
  <Field>
    <checkbox
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "need-order",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:need-order-label
    </checkbox>
  </Field>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-duration
    </Component>
  </header>
  <Field>
    <Label
      label="i18n:duty-start-date"
    />
    <ta-datepicker
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "date",
        }
      }
      onChange={[Function]}
      size="s"
      view="classic"
    />
  </Field>
  <Field>
    <Label
      input="schedule_startTime"
      label="i18n:start-time"
    />
    <TimeInput
      className="DutySchedulesSettings-StartTime"
      inputId="schedule_startTime"
      onChange={[Function]}
      value="00:00"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:start-time-tip
  </abc-text>
  <Field>
    <Label
      input="schedule_duration"
      label="i18n:duty-duration"
    />
    <textinput
      controlAttrs={
        Object {
          "max": 1000000,
          "min": 1,
        }
      }
      id="schedule_duration"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "duration",
        }
      }
      onChange={[Function]}
      size="s"
      text="5"
      theme="normal"
      type="number"
      view="classic"
    />
    <Label
      className="DutySchedulesSettings-Days"
      input="schedule_duration"
      label="i18n:days"
    />
  </Field>
  <Field>
    <Label
      input="schedule_autoapprove_timedelta"
      label="i18n:autoapprove-timedelta"
    />
    <textinput
      controlAttrs={
        Object {
          "max": 1000000,
          "min": 0,
        }
      }
      id="schedule_autoapprove_timedelta"
      innerRef={[Function]}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "autoapprove-timedelta",
        }
      }
      onChange={[Function]}
      size="s"
      text="undefined"
      theme="normal"
      type="number"
      view="classic"
    />
    <Label
      className="DutySchedulesSettings-Days"
      input="schedule_autoapprove_timedelta"
      label="i18n:days-in-advance"
    />
  </Field>
  <abc-text
    mix={
      Object {
        "block": "DutySchedulesSettings",
        "elem": "field-hint",
      }
    }
    muted="yes"
  >
    i18n:autoapprove-timedelta-hint
  </abc-text>
  <Message
    type="info"
    view="new"
  >
    i18n:autoapprove-timedelta-required
  </Message>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-tracker
    </Component>
  </header>
  <abc-text
    muted="yes"
  >
    i18n:tracker-hint
  </abc-text>
  <Field>
    <Label
      input="schedule_queue"
      label="i18n:queue-label"
    />
    <TrackerQueueSuggest
      disabled={true}
      id="schedule_queue"
      onQueueIdsChange={[Function]}
      onQueueKeysChange={[Function]}
      queueKey={null}
    />
  </Field>
  <Field>
    <Label
      input="schedule_component"
      label="i18n:component-label"
    />
    <TrackerComponentsSuggest
      disabled={true}
      id="schedule_component"
      onComponentsIdsChange={[Function]}
      queueKey={null}
    />
  </Field>
  <Message
    type="info"
    view="new"
  >
    i18n:tracker-access-warning
    <Memo() />
  </Message>
  <Delimiter />
  <header
    className="DutySchedulesSettings-Header"
  >
    <Component
      className="DutySchedulesSettings-Title"
    >
      i18n:section-notifications
    </Component>
  </header>
  <FieldGroup>
    <Field>
      <checkbox
        checked={true}
        mix={
          Object {
            "block": "DutySchedulesSettings",
            "elem": "duty-on-holidays",
          }
        }
        onChange={[Function]}
        size="s"
        theme="normal"
        view="classic"
      >
        i18n:duty-on-holidays-label
      </checkbox>
    </Field>
    <Field>
      <checkbox
        checked={true}
        mix={
          Object {
            "block": "DutySchedulesSettings",
            "elem": "duty-on-weekends",
          }
        }
        onChange={[Function]}
        size="s"
        theme="normal"
        view="classic"
      >
        i18n:duty-on-weekends-label
      </checkbox>
    </Field>
    <abc-text
      muted="yes"
    >
      i18n:duty-on-weekends-hint
    </abc-text>
  </FieldGroup>
  <Field>
    <checkbox
      checked={false}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "consider-other-schedules",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:consider-other-schedules-label
    </checkbox>
  </Field>
  <Field>
    <checkbox
      checked={true}
      mix={
        Object {
          "block": "DutySchedulesSettings",
          "elem": "show-in-staff",
        }
      }
      onChange={[Function]}
      size="s"
      theme="normal"
      view="classic"
    >
      i18n:show-in-staff
    </checkbox>
  </Field>
</div>
`;
