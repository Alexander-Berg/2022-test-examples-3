[defaults]
eval_shard_root_dir = . ./generation.conf && echo "$GENERATION"
its_poll = 1

[deployer]
binary = env
arguments = BSCONFIG_ITAGS="$BSCONFIG_ITAGS a_itype_deployer sas-web-search"
    agent/agent/agent deployer2
    --log-dir /logs/deployer
    --storage-root {shard_root_dir}
    --port 10000
    --interval 119
    --reports-url http://%(a_geo)s-reports-v2-cajuper.n.yandex-team.ru
    --configs-url http://%(a_geo)s-configs-web-cajuper.n.yandex-team.ru
    --tracker-url http://vla-tracker-cajuper.n.yandex-team.ru
status_script = /bin/true

[mmetasearch]
env_match = ^ENV_(.*)$
opt_match = ^OPT_(.*)$
conf_match = ^conf_(.*)$
core_pattern = .*%(NANNY_SERVICE_ID)s.*httpsearch.*
coredumps_format = coredump
minidumps_push = 1
minidumps_service = mmetasearch
always_coredump = False
limit_core = unlimited
minidumps_aggregator_url = https://coredumps.n.yandex-team.ru/submit_core
eval_db_timestamp = ./helper db_timestamp
eval_shard_name = export tags="$tags a_shard_rearr-jupiter-msuserdata-000-0000000000"; ./helper shard_name
status_script = curl -so /dev/null 'http://localhost:80/yandsearch?info=getconfig'
install_script = set -ex;
    export tags="$tags a_shard_rearr-jupiter-msuserdata-000-0000000000 a_metaprj_mmeta-yp"
    shardname=`./helper shard_name`
    ./helper link_shard --mode deployer
    if [ ! -e "./$shardname" ]; then
      sleep 10
      exit  1
    fi
terminate_timeout = 35
kill_timeout = 80
coredump_probability = 5
binary = ./agent/agent/agent
arguments = hamster
    --interval 30
    --log-dir /logs
    --reports-url http://sas-reports-v2-cajuper.n.yandex-team.ru
    --configs-url http://sas-configs-web-cajuper.n.yandex-team.ru
    --port 80
    --shard {shard_name}
    --models ./models.archive
    --httpsearch ./httpsearch
    --httpsearch_config ./%(CONFIG)s
    --db-timestamp {db_timestamp}
    --cache-dir /webcache
    --extra-arguments="-V ErrorBoosterUnifiedAgentLog='unix:///logs/u/error_booster'"
    --test-config test_config.cfg
prepare_script = set -ex;
    tar zxf generator.configs.tar.gz --strip-components=1 all/%(CONFIG)s
    tar xzf gdb_toolkit.tgz
    balancer_bin=$(readlink -f balancer)
    sudo setcap CAP_NET_BIND_SERVICE=+eip ${balancer_bin}
reopenlog_script = set -ex;
    wget -qO /dev/null "http://localhost:83/admin?action=reopenlog"
    wget -qO /dev/null "http://localhost:87/admin?action=reopenlog"

[unified_agent]
env_match = ^ENV_(.*)$
binary = unified_agent
arguments = -c unified_agent.conf
core_pattern = .*%(NANNY_SERVICE_ID)s.*unified_agent.*
coredump_probability = 5
coredumps_format = coredump
limit_core = unlimited

