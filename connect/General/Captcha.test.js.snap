// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`client/components/Captcha Should render Captcha 1`] = `
<Captcha
  labels={
    Object {
      "label": "label",
      "placeholder": "placeholder",
      "refresh": "refresh",
    }
  }
  loading={false}
  onChange={[MockFunction]}
  onRefresh={[MockFunction]}
  src="//src.src"
  text="text"
>
  <div
    className="captcha"
  >
    <div
      className={
        Object {
          "has": [Function],
          "is": [Function],
          "mix": [Function],
          "split": [Function],
          "state": [Function],
          "toString": [Function],
        }
      }
    >
      label
    </div>
    <div
      className={
        Object {
          "has": [Function],
          "is": [Function],
          "mix": [Function],
          "split": [Function],
          "state": [Function],
          "toString": [Function],
        }
      }
    >
      <div
        className={
          Object {
            "has": [Function],
            "is": [Function],
            "mix": [Function],
            "split": [Function],
            "state": [Function],
            "toString": [Function],
          }
        }
      >
        <image
          url="//src.src"
        >
          <img
            className="image"
            data-lego="react"
            src="//src.src"
            style={Object {}}
          />
        </image>
      </div>
      <div
        className={
          Object {
            "has": [Function],
            "is": [Function],
            "mix": [Function],
            "split": [Function],
            "state": [Function],
            "toString": [Function],
          }
        }
      >
        <link
          cls={
            Object {
              "has": [Function],
              "is": [Function],
              "mix": [Function],
              "split": [Function],
              "state": [Function],
              "toString": [Function],
            }
          }
          disabled={false}
          onClick={[MockFunction]}
          pseudo={true}
          tabIndex="0"
          theme="pseudo"
          type="pseudo"
        >
          <span
            className="control link link_theme_pseudo link_pseudo_yes captcha__refresh"
            data-lego="react"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onKeyUp={[Function]}
            onMouseDown={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onMouseUp={[Function]}
            role="button"
            style={Object {}}
            tabIndex="0"
          >
            <link__inner
              key="inner"
            >
              <span
                className="link__inner"
                data-lego="react"
                style={Object {}}
              >
                refresh
              </span>
            </link__inner>
          </span>
        </link>
      </div>
      <textinput
        autoComplete={false}
        cls={
          Object {
            "has": [Function],
            "is": [Function],
            "mix": [Function],
            "split": [Function],
            "state": [Function],
            "toString": [Function],
          }
        }
        innerRef={[Function]}
        onChange={[Function]}
        placeholder="placeholder"
        showListOnFocus={true}
        size="m"
        text="text"
        theme="normal"
        type="text"
        updateOnEnter={true}
        view="classic"
      >
        <span
          className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m captcha__input"
          data-lego="react"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          style={Object {}}
        >
          <textinput__control
            innerRef={[Function]}
            key="control"
            onChange={[Function]}
            placeholder="placeholder"
            type="text"
            value="text"
          >
            <input
              className="textinput__control"
              data-lego="react"
              onChange={[Function]}
              placeholder="placeholder"
              style={Object {}}
              type="text"
              value="text"
            />
          </textinput__control>
          <textinput__box
            key="box"
          >
            <span
              className="textinput__box"
              data-lego="react"
              style={Object {}}
            />
          </textinput__box>
        </span>
      </textinput>
    </div>
  </div>
</Captcha>
`;

exports[`client/components/Captcha Should render loading Captcha 1`] = `
<Captcha
  labels={
    Object {
      "label": "label",
      "placeholder": "placeholder",
      "refresh": "refresh",
    }
  }
  loading={true}
  onChange={[MockFunction]}
  onRefresh={[MockFunction]}
  src="//src.src"
  text="text"
>
  <div
    className="captcha"
  >
    <div
      className={
        Object {
          "has": [Function],
          "is": [Function],
          "mix": [Function],
          "split": [Function],
          "state": [Function],
          "toString": [Function],
        }
      }
    >
      label
    </div>
    <div
      className={
        Object {
          "has": [Function],
          "is": [Function],
          "mix": [Function],
          "split": [Function],
          "state": [Function],
          "toString": [Function],
        }
      }
    >
      <div
        className={
          Object {
            "has": [Function],
            "is": [Function],
            "mix": [Function],
            "split": [Function],
            "state": [Function],
            "toString": [Function],
          }
        }
      >
        <spin2
          cls={
            Object {
              "has": [Function],
              "is": [Function],
              "mix": [Function],
              "split": [Function],
              "state": [Function],
              "toString": [Function],
            }
          }
          position="center"
          progress={true}
          size="s"
          tone="default"
          view="default"
        >
          <div
            className="spin2 spin2_size_s spin2_view_default spin2_tone_default spin2_position_center spin2_progress_yes captcha__loading"
            data-lego="react"
            style={Object {}}
          />
        </spin2>
      </div>
      <div
        className={
          Object {
            "has": [Function],
            "is": [Function],
            "mix": [Function],
            "split": [Function],
            "state": [Function],
            "toString": [Function],
          }
        }
      >
        <link
          cls={
            Object {
              "has": [Function],
              "is": [Function],
              "mix": [Function],
              "split": [Function],
              "state": [Function],
              "toString": [Function],
            }
          }
          disabled={true}
          onClick={[MockFunction]}
          pseudo={true}
          tabIndex="0"
          theme="pseudo"
          type="pseudo"
        >
          <span
            aria-disabled="true"
            className="control link control_disabled_yes link_disabled_yes link_theme_pseudo link_pseudo_yes captcha__refresh"
            data-lego="react"
            role="button"
            style={Object {}}
          >
            <link__inner
              key="inner"
            >
              <span
                className="link__inner"
                data-lego="react"
                style={Object {}}
              >
                refresh
              </span>
            </link__inner>
          </span>
        </link>
      </div>
      <textinput
        autoComplete={false}
        cls={
          Object {
            "has": [Function],
            "is": [Function],
            "mix": [Function],
            "split": [Function],
            "state": [Function],
            "toString": [Function],
          }
        }
        innerRef={[Function]}
        onChange={[Function]}
        placeholder="placeholder"
        showListOnFocus={true}
        size="m"
        text="text"
        theme="normal"
        type="text"
        updateOnEnter={true}
        view="classic"
      >
        <span
          className="control textinput textinput_theme_normal textinput_view_classic textinput_size_m captcha__input"
          data-lego="react"
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          style={Object {}}
        >
          <textinput__control
            innerRef={[Function]}
            key="control"
            onChange={[Function]}
            placeholder="placeholder"
            type="text"
            value="text"
          >
            <input
              className="textinput__control"
              data-lego="react"
              onChange={[Function]}
              placeholder="placeholder"
              style={Object {}}
              type="text"
              value="text"
            />
          </textinput__control>
          <textinput__box
            key="box"
          >
            <span
              className="textinput__box"
              data-lego="react"
              style={Object {}}
            />
          </textinput__box>
        </span>
      </textinput>
    </div>
  </div>
</Captcha>
`;
